#lang alacrity/bl

(define-contract 
  #:participants (A B)
  [0 A () ([17/Declassify : uint256] [18/Declassify : uint256] [16/PrimApp : uint256]) [20/pay-amount : uint256] 
    (define [21/PrimApp : uint256] (ADD [17/Declassify : uint256] [18/Declassify : uint256]))
    (define [22/PrimApp : bool] (PEQ [20/pay-amount : uint256] [21/PrimApp : uint256]))
    (require! [22/PrimApp : bool])
    (wait! 1 ([16/PrimApp : uint256] [17/Declassify : uint256] [18/Declassify : uint256]))]
  [1 B ([16/PrimApp : uint256] [17/Declassify : uint256] [18/Declassify : uint256]) ([23/Declassify : uint256]) [24/pay-amount : uint256] 
    (define [25/PrimApp : bool] (PEQ [24/pay-amount : uint256] [17/Declassify : uint256]))
    (require! [25/PrimApp : bool])
    (define [26/PrimApp : bool] (PLE 0 [23/Declassify : uint256]))
    (define [27/PrimApp : bool] (PLT [23/Declassify : uint256] 3))
    (define [28/PrimApp : bool] (IF_THEN_ELSE [26/PrimApp : bool] [27/PrimApp : bool] False))
    (require! [28/PrimApp : bool])
    (wait! 2 ([16/PrimApp : uint256] [17/Declassify : uint256] [18/Declassify : uint256] [23/Declassify : uint256]))]
  [2 A ([16/PrimApp : uint256] [17/Declassify : uint256] [18/Declassify : uint256] [23/Declassify : uint256]) ([29/Declassify : uint256] [30/Declassify : uint256]) [31/pay-amount : uint256] 
    (define [32/PrimApp : bool] (PEQ [31/pay-amount : uint256] 0))
    (require! [32/PrimApp : bool])
    (define [33/PrimApp : bytes] (UINT256_TO_BYTES [29/Declassify : uint256]))
    (define [34/PrimApp : bytes] (UINT256_TO_BYTES [30/Declassify : uint256]))
    (define [35/PrimApp : bytes] (BCAT [33/PrimApp : bytes] [34/PrimApp : bytes]))
    (define [36/PrimApp : uint256] (DIGEST [35/PrimApp : bytes]))
    (define [37/PrimApp : bool] (PEQ [16/PrimApp : uint256] [36/PrimApp : uint256]))
    (require! [37/PrimApp : bool])
    (define [38/PrimApp : bool] (PLE 0 [30/Declassify : uint256]))
    (define [39/PrimApp : bool] (PLT [30/Declassify : uint256] 3))
    (define [40/PrimApp : bool] (IF_THEN_ELSE [38/PrimApp : bool] [39/PrimApp : bool] False))
    (require! [40/PrimApp : bool])
    (define [41/PrimApp : bool] (PLE 0 [30/Declassify : uint256]))
    (define [42/PrimApp : bool] (PLT [30/Declassify : uint256] 3))
    (define [43/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] [42/PrimApp : bool] False))
    (define [44/PrimApp : bool] (PLE 0 [23/Declassify : uint256]))
    (define [45/PrimApp : bool] (PLT [23/Declassify : uint256] 3))
    (define [46/PrimApp : bool] (IF_THEN_ELSE [44/PrimApp : bool] [45/PrimApp : bool] False))
    (define [47/PrimApp : bool] (IF_THEN_ELSE [43/PrimApp : bool] [46/PrimApp : bool] False))
    (define [48/PrimApp : uint256] (SUB 4 [23/Declassify : uint256]))
    (define [49/PrimApp : uint256] (ADD [30/Declassify : uint256] [48/PrimApp : uint256]))
    (define [50/PrimApp : uint256] (MOD [49/PrimApp : uint256] 3))
    (define [51/PureIf : uint256] (IF_THEN_ELSE [46/PrimApp : bool] 0 1))
    (define [52/PureIf : uint256] (IF_THEN_ELSE [43/PrimApp : bool] 2 [51/PureIf : uint256]))
    (define [53/PureIf : uint256] (IF_THEN_ELSE [47/PrimApp : bool] [50/PrimApp : uint256] [52/PureIf : uint256]))
    (define [54/PrimApp : bool] (PLE 0 [53/PureIf : uint256]))
    (define [55/PrimApp : bool] (PLT [53/PureIf : uint256] 3))
    (define [56/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] [55/PrimApp : bool] False))
    (assert! [56/PrimApp : bool])
    (define [57/PrimApp : bool] (PEQ [53/PureIf : uint256] 2))
    (define [58/PrimApp : bool] (PLE 0 [30/Declassify : uint256]))
    (define [59/PrimApp : bool] (PLT [30/Declassify : uint256] 3))
    (define [60/PrimApp : bool] (IF_THEN_ELSE [58/PrimApp : bool] [59/PrimApp : bool] False))
    (define [61/PrimApp : bool] (IF_THEN_ELSE [57/PrimApp : bool] False True))
    (define [62/PrimApp : bool] (IF_THEN_ELSE [61/PrimApp : bool] True [60/PrimApp : bool]))
    (assert! [62/PrimApp : bool])
    (define [63/PrimApp : bool] (PEQ [53/PureIf : uint256] 0))
    (define [64/PrimApp : bool] (PLE 0 [23/Declassify : uint256]))
    (define [65/PrimApp : bool] (PLT [23/Declassify : uint256] 3))
    (define [66/PrimApp : bool] (IF_THEN_ELSE [64/PrimApp : bool] [65/PrimApp : bool] False))
    (define [67/PrimApp : bool] (IF_THEN_ELSE [63/PrimApp : bool] False True))
    (define [68/PrimApp : bool] (IF_THEN_ELSE [67/PrimApp : bool] True [66/PrimApp : bool]))
    (assert! [68/PrimApp : bool])
    (define [69/PrimApp : bool] (PEQ [53/PureIf : uint256] 2))
    (define [70/PrimApp : uint256] (MUL 2 [17/Declassify : uint256]))
    (define [71/PrimApp : bool] (PEQ [53/PureIf : uint256] 0))
    (define [72/PrimApp : uint256] (MUL 2 [17/Declassify : uint256]))
    (define [73/PureIf : uint256] (IF_THEN_ELSE [71/PrimApp : bool] 0 [17/Declassify : uint256]))
    (define [74/PureIf : uint256] (IF_THEN_ELSE [71/PrimApp : bool] [72/PrimApp : uint256] [17/Declassify : uint256]))
    (define [75/PureIf : uint256] (IF_THEN_ELSE [69/PrimApp : bool] [70/PrimApp : uint256] [73/PureIf : uint256]))
    (define [76/PureIf : uint256] (IF_THEN_ELSE [69/PrimApp : bool] 0 [74/PureIf : uint256]))
    (define [77/PrimApp : uint256] (ADD [18/Declassify : uint256] [75/PureIf : uint256]))
    (transfer! A [77/PrimApp : uint256])
    (transfer! B [76/PureIf : uint256])
    (halt!)])

(define-participant A 
  ([0/wagerAmount : uint256] [1/escrowAmount : uint256] [2/handA : uint256])
  
  (define [4/PrimApp : bool] (PGT [1/escrowAmount : uint256] 0))
  (assume! [4/PrimApp : bool])
  (define [5/PrimApp : bool] (PGT [0/wagerAmount : uint256] 0))
  (assume! [5/PrimApp : bool])
  (define [6/PrimApp : bool] (PLE 0 [2/handA : uint256]))
  (define [7/PrimApp : bool] (PLT [2/handA : uint256] 3))
  (define [8/PrimApp : bool] (IF_THEN_ELSE [6/PrimApp : bool] [7/PrimApp : bool] False))
  (assume! [8/PrimApp : bool])
  (define [12/PrimApp : uint256] (RANDOM))
  (define [13/PrimApp : bytes] (UINT256_TO_BYTES [12/PrimApp : uint256]))
  (define [14/PrimApp : bytes] (UINT256_TO_BYTES [2/handA : uint256]))
  (define [15/PrimApp : bytes] (BCAT [13/PrimApp : bytes] [14/PrimApp : bytes]))
  (define [16/PrimApp : uint256] (DIGEST [15/PrimApp : bytes]))
  (define [17/Declassify : uint256] [0/wagerAmount : uint256])
  (define [18/Declassify : uint256] [1/escrowAmount : uint256])
  (define [19/PrimApp : uint256] (ADD [17/Declassify : uint256] [18/Declassify : uint256]))
  (send! 0 () ([17/Declassify : uint256] [18/Declassify : uint256] [16/PrimApp : uint256]) [19/PrimApp : uint256])
  (define-values True () ([17/Declassify : uint256] [18/Declassify : uint256] [16/PrimApp : uint256]) [20/pay-amount : uint256] (recv! 0))
  (define [21/PrimApp : uint256] (ADD [17/Declassify : uint256] [18/Declassify : uint256]))
  (define [22/PrimApp : bool] (PEQ [20/pay-amount : uint256] [21/PrimApp : uint256]))
  (require! [22/PrimApp : bool])
  (define-values False ([16/PrimApp : uint256] [17/Declassify : uint256] [18/Declassify : uint256]) ([23/Declassify : uint256]) [24/pay-amount : uint256] (recv! 1))
  (define [25/PrimApp : bool] (PEQ [24/pay-amount : uint256] [17/Declassify : uint256]))
  (require! [25/PrimApp : bool])
  (define [26/PrimApp : bool] (PLE 0 [23/Declassify : uint256]))
  (define [27/PrimApp : bool] (PLT [23/Declassify : uint256] 3))
  (define [28/PrimApp : bool] (IF_THEN_ELSE [26/PrimApp : bool] [27/PrimApp : bool] False))
  (require! [28/PrimApp : bool])
  (define [29/Declassify : uint256] [12/PrimApp : uint256])
  (define [30/Declassify : uint256] [2/handA : uint256])
  (send! 2 ([16/PrimApp : uint256] [17/Declassify : uint256] [18/Declassify : uint256] [23/Declassify : uint256]) ([29/Declassify : uint256] [30/Declassify : uint256]) 0)
  (define-values True ([16/PrimApp : uint256] [17/Declassify : uint256] [18/Declassify : uint256] [23/Declassify : uint256]) ([29/Declassify : uint256] [30/Declassify : uint256]) [31/pay-amount : uint256] (recv! 2))
  (define [32/PrimApp : bool] (PEQ [31/pay-amount : uint256] 0))
  (require! [32/PrimApp : bool])
  (define [33/PrimApp : bytes] (UINT256_TO_BYTES [29/Declassify : uint256]))
  (define [34/PrimApp : bytes] (UINT256_TO_BYTES [30/Declassify : uint256]))
  (define [35/PrimApp : bytes] (BCAT [33/PrimApp : bytes] [34/PrimApp : bytes]))
  (define [36/PrimApp : uint256] (DIGEST [35/PrimApp : bytes]))
  (define [37/PrimApp : bool] (PEQ [16/PrimApp : uint256] [36/PrimApp : uint256]))
  (require! [37/PrimApp : bool])
  (define [38/PrimApp : bool] (PLE 0 [30/Declassify : uint256]))
  (define [39/PrimApp : bool] (PLT [30/Declassify : uint256] 3))
  (define [40/PrimApp : bool] (IF_THEN_ELSE [38/PrimApp : bool] [39/PrimApp : bool] False))
  (require! [40/PrimApp : bool])
  (define [41/PrimApp : bool] (PLE 0 [30/Declassify : uint256]))
  (define [42/PrimApp : bool] (PLT [30/Declassify : uint256] 3))
  (define [43/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] [42/PrimApp : bool] False))
  (define [44/PrimApp : bool] (PLE 0 [23/Declassify : uint256]))
  (define [45/PrimApp : bool] (PLT [23/Declassify : uint256] 3))
  (define [46/PrimApp : bool] (IF_THEN_ELSE [44/PrimApp : bool] [45/PrimApp : bool] False))
  (define [47/PrimApp : bool] (IF_THEN_ELSE [43/PrimApp : bool] [46/PrimApp : bool] False))
  (define [48/PrimApp : uint256] (SUB 4 [23/Declassify : uint256]))
  (define [49/PrimApp : uint256] (ADD [30/Declassify : uint256] [48/PrimApp : uint256]))
  (define [50/PrimApp : uint256] (MOD [49/PrimApp : uint256] 3))
  (define [51/PureIf : uint256] (IF_THEN_ELSE [46/PrimApp : bool] 0 1))
  (define [52/PureIf : uint256] (IF_THEN_ELSE [43/PrimApp : bool] 2 [51/PureIf : uint256]))
  (define [53/PureIf : uint256] (IF_THEN_ELSE [47/PrimApp : bool] [50/PrimApp : uint256] [52/PureIf : uint256]))
  (define [54/PrimApp : bool] (PLE 0 [53/PureIf : uint256]))
  (define [55/PrimApp : bool] (PLT [53/PureIf : uint256] 3))
  (define [56/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] [55/PrimApp : bool] False))
  (assert! [56/PrimApp : bool])
  (define [57/PrimApp : bool] (PEQ [53/PureIf : uint256] 2))
  (define [58/PrimApp : bool] (PLE 0 [30/Declassify : uint256]))
  (define [59/PrimApp : bool] (PLT [30/Declassify : uint256] 3))
  (define [60/PrimApp : bool] (IF_THEN_ELSE [58/PrimApp : bool] [59/PrimApp : bool] False))
  (define [61/PrimApp : bool] (IF_THEN_ELSE [57/PrimApp : bool] False True))
  (define [62/PrimApp : bool] (IF_THEN_ELSE [61/PrimApp : bool] True [60/PrimApp : bool]))
  (assert! [62/PrimApp : bool])
  (define [63/PrimApp : bool] (PEQ [53/PureIf : uint256] 0))
  (define [64/PrimApp : bool] (PLE 0 [23/Declassify : uint256]))
  (define [65/PrimApp : bool] (PLT [23/Declassify : uint256] 3))
  (define [66/PrimApp : bool] (IF_THEN_ELSE [64/PrimApp : bool] [65/PrimApp : bool] False))
  (define [67/PrimApp : bool] (IF_THEN_ELSE [63/PrimApp : bool] False True))
  (define [68/PrimApp : bool] (IF_THEN_ELSE [67/PrimApp : bool] True [66/PrimApp : bool]))
  (assert! [68/PrimApp : bool])
  (define [69/PrimApp : bool] (PEQ [53/PureIf : uint256] 2))
  (define [70/PrimApp : uint256] (MUL 2 [17/Declassify : uint256]))
  (define [71/PrimApp : bool] (PEQ [53/PureIf : uint256] 0))
  (define [72/PrimApp : uint256] (MUL 2 [17/Declassify : uint256]))
  (define [73/PureIf : uint256] (IF_THEN_ELSE [71/PrimApp : bool] 0 [17/Declassify : uint256]))
  (define [74/PureIf : uint256] (IF_THEN_ELSE [71/PrimApp : bool] [72/PrimApp : uint256] [17/Declassify : uint256]))
  (define [75/PureIf : uint256] (IF_THEN_ELSE [69/PrimApp : bool] [70/PrimApp : uint256] [73/PureIf : uint256]))
  (define [76/PureIf : uint256] (IF_THEN_ELSE [69/PrimApp : bool] 0 [74/PureIf : uint256]))
  (define [77/PrimApp : uint256] (ADD [18/Declassify : uint256] [75/PureIf : uint256]))
  (define [78/PrimApp : bool] (PEQ [53/PureIf : uint256] 2))
  (possible? [78/PrimApp : bool])
  (define [79/PrimApp : bool] (PEQ [53/PureIf : uint256] 0))
  (possible? [79/PrimApp : bool])
  [53/PureIf : uint256])

(define-participant B 
  ([3/handB : uint256])
  
  (define [9/PrimApp : bool] (PLE 0 [3/handB : uint256]))
  (define [10/PrimApp : bool] (PLT [3/handB : uint256] 3))
  (define [11/PrimApp : bool] (IF_THEN_ELSE [9/PrimApp : bool] [10/PrimApp : bool] False))
  (assume! [11/PrimApp : bool])
  (define-values False () ([17/Declassify : uint256] [18/Declassify : uint256] [16/PrimApp : uint256]) [20/pay-amount : uint256] (recv! 0))
  (define [21/PrimApp : uint256] (ADD [17/Declassify : uint256] [18/Declassify : uint256]))
  (define [22/PrimApp : bool] (PEQ [20/pay-amount : uint256] [21/PrimApp : uint256]))
  (require! [22/PrimApp : bool])
  (define [23/Declassify : uint256] [3/handB : uint256])
  (send! 1 ([16/PrimApp : uint256] [17/Declassify : uint256] [18/Declassify : uint256]) ([23/Declassify : uint256]) [17/Declassify : uint256])
  (define-values True ([16/PrimApp : uint256] [17/Declassify : uint256] [18/Declassify : uint256]) ([23/Declassify : uint256]) [24/pay-amount : uint256] (recv! 1))
  (define [25/PrimApp : bool] (PEQ [24/pay-amount : uint256] [17/Declassify : uint256]))
  (require! [25/PrimApp : bool])
  (define [26/PrimApp : bool] (PLE 0 [23/Declassify : uint256]))
  (define [27/PrimApp : bool] (PLT [23/Declassify : uint256] 3))
  (define [28/PrimApp : bool] (IF_THEN_ELSE [26/PrimApp : bool] [27/PrimApp : bool] False))
  (require! [28/PrimApp : bool])
  (define-values False ([16/PrimApp : uint256] [17/Declassify : uint256] [18/Declassify : uint256] [23/Declassify : uint256]) ([29/Declassify : uint256] [30/Declassify : uint256]) [31/pay-amount : uint256] (recv! 2))
  (define [32/PrimApp : bool] (PEQ [31/pay-amount : uint256] 0))
  (require! [32/PrimApp : bool])
  (define [33/PrimApp : bytes] (UINT256_TO_BYTES [29/Declassify : uint256]))
  (define [34/PrimApp : bytes] (UINT256_TO_BYTES [30/Declassify : uint256]))
  (define [35/PrimApp : bytes] (BCAT [33/PrimApp : bytes] [34/PrimApp : bytes]))
  (define [36/PrimApp : uint256] (DIGEST [35/PrimApp : bytes]))
  (define [37/PrimApp : bool] (PEQ [16/PrimApp : uint256] [36/PrimApp : uint256]))
  (require! [37/PrimApp : bool])
  (define [38/PrimApp : bool] (PLE 0 [30/Declassify : uint256]))
  (define [39/PrimApp : bool] (PLT [30/Declassify : uint256] 3))
  (define [40/PrimApp : bool] (IF_THEN_ELSE [38/PrimApp : bool] [39/PrimApp : bool] False))
  (require! [40/PrimApp : bool])
  (define [41/PrimApp : bool] (PLE 0 [30/Declassify : uint256]))
  (define [42/PrimApp : bool] (PLT [30/Declassify : uint256] 3))
  (define [43/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] [42/PrimApp : bool] False))
  (define [44/PrimApp : bool] (PLE 0 [23/Declassify : uint256]))
  (define [45/PrimApp : bool] (PLT [23/Declassify : uint256] 3))
  (define [46/PrimApp : bool] (IF_THEN_ELSE [44/PrimApp : bool] [45/PrimApp : bool] False))
  (define [47/PrimApp : bool] (IF_THEN_ELSE [43/PrimApp : bool] [46/PrimApp : bool] False))
  (define [48/PrimApp : uint256] (SUB 4 [23/Declassify : uint256]))
  (define [49/PrimApp : uint256] (ADD [30/Declassify : uint256] [48/PrimApp : uint256]))
  (define [50/PrimApp : uint256] (MOD [49/PrimApp : uint256] 3))
  (define [51/PureIf : uint256] (IF_THEN_ELSE [46/PrimApp : bool] 0 1))
  (define [52/PureIf : uint256] (IF_THEN_ELSE [43/PrimApp : bool] 2 [51/PureIf : uint256]))
  (define [53/PureIf : uint256] (IF_THEN_ELSE [47/PrimApp : bool] [50/PrimApp : uint256] [52/PureIf : uint256]))
  (define [54/PrimApp : bool] (PLE 0 [53/PureIf : uint256]))
  (define [55/PrimApp : bool] (PLT [53/PureIf : uint256] 3))
  (define [56/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] [55/PrimApp : bool] False))
  (assert! [56/PrimApp : bool])
  (define [57/PrimApp : bool] (PEQ [53/PureIf : uint256] 2))
  (define [58/PrimApp : bool] (PLE 0 [30/Declassify : uint256]))
  (define [59/PrimApp : bool] (PLT [30/Declassify : uint256] 3))
  (define [60/PrimApp : bool] (IF_THEN_ELSE [58/PrimApp : bool] [59/PrimApp : bool] False))
  (define [61/PrimApp : bool] (IF_THEN_ELSE [57/PrimApp : bool] False True))
  (define [62/PrimApp : bool] (IF_THEN_ELSE [61/PrimApp : bool] True [60/PrimApp : bool]))
  (assert! [62/PrimApp : bool])
  (define [63/PrimApp : bool] (PEQ [53/PureIf : uint256] 0))
  (define [64/PrimApp : bool] (PLE 0 [23/Declassify : uint256]))
  (define [65/PrimApp : bool] (PLT [23/Declassify : uint256] 3))
  (define [66/PrimApp : bool] (IF_THEN_ELSE [64/PrimApp : bool] [65/PrimApp : bool] False))
  (define [67/PrimApp : bool] (IF_THEN_ELSE [63/PrimApp : bool] False True))
  (define [68/PrimApp : bool] (IF_THEN_ELSE [67/PrimApp : bool] True [66/PrimApp : bool]))
  (assert! [68/PrimApp : bool])
  (define [69/PrimApp : bool] (PEQ [53/PureIf : uint256] 2))
  (define [70/PrimApp : uint256] (MUL 2 [17/Declassify : uint256]))
  (define [71/PrimApp : bool] (PEQ [53/PureIf : uint256] 0))
  (define [72/PrimApp : uint256] (MUL 2 [17/Declassify : uint256]))
  (define [73/PureIf : uint256] (IF_THEN_ELSE [71/PrimApp : bool] 0 [17/Declassify : uint256]))
  (define [74/PureIf : uint256] (IF_THEN_ELSE [71/PrimApp : bool] [72/PrimApp : uint256] [17/Declassify : uint256]))
  (define [75/PureIf : uint256] (IF_THEN_ELSE [69/PrimApp : bool] [70/PrimApp : uint256] [73/PureIf : uint256]))
  (define [76/PureIf : uint256] (IF_THEN_ELSE [69/PrimApp : bool] 0 [74/PureIf : uint256]))
  (define [77/PrimApp : uint256] (ADD [18/Declassify : uint256] [75/PureIf : uint256]))
  (define [78/PrimApp : bool] (PEQ [53/PureIf : uint256] 2))
  (possible? [78/PrimApp : bool])
  (define [79/PrimApp : bool] (PEQ [53/PureIf : uint256] 0))
  (possible? [79/PrimApp : bool])
  [53/PureIf : uint256])