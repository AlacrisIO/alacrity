#lang alacrity/bl

(define-contract 
  #:participants (A B)
  [0 A () ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256]) [23/pay-amount : uint256] 
    (define [24/PrimApp : uint256] (ADD [18/Declassify : uint256] [19/Declassify : uint256]))
    (define [25/PrimApp : bool] (PEQ [23/pay-amount : uint256] [24/PrimApp : uint256]))
    (require! [25/PrimApp : bool])
    (wait! 1 ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256]))]
  [1 B ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256]) ([37/Declassify : uint256]) [39/pay-amount : uint256] 
    (define [40/PrimApp : bool] (PEQ [39/pay-amount : uint256] [18/Declassify : uint256]))
    (require! [40/PrimApp : bool])
    (define [41/PrimApp : bool] (PLE 0 [37/Declassify : uint256]))
    (define [42/PrimApp : bool] (PLT [37/Declassify : uint256] 3))
    (define [43/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] [42/PrimApp : bool] False))
    (require! [43/PrimApp : bool])
    (wait! 2 ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256] [37/Declassify : uint256]))]
  [2 A ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256] [37/Declassify : uint256]) ([44/Declassify : uint256] [45/Declassify : uint256]) [47/pay-amount : uint256] 
    (define [48/PrimApp : bool] (PEQ [47/pay-amount : uint256] 0))
    (require! [48/PrimApp : bool])
    (define [49/PrimApp : bytes] (UINT256_TO_BYTES [44/Declassify : uint256]))
    (define [50/PrimApp : bytes] (UINT256_TO_BYTES [45/Declassify : uint256]))
    (define [51/PrimApp : bytes] (BCAT [49/PrimApp : bytes] [50/PrimApp : bytes]))
    (define [52/PrimApp : uint256] (DIGEST [51/PrimApp : bytes]))
    (define [53/PrimApp : bool] (PEQ [20/Declassify : uint256] [52/PrimApp : uint256]))
    (require! [53/PrimApp : bool])
    (define [54/PrimApp : bool] (PLE 0 [45/Declassify : uint256]))
    (define [55/PrimApp : bool] (PLT [45/Declassify : uint256] 3))
    (define [56/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] [55/PrimApp : bool] False))
    (require! [56/PrimApp : bool])
    (define [57/PrimApp : bool] (PLE 0 [45/Declassify : uint256]))
    (define [58/PrimApp : bool] (PLT [45/Declassify : uint256] 3))
    (define [59/PrimApp : bool] (IF_THEN_ELSE [57/PrimApp : bool] [58/PrimApp : bool] False))
    (define [60/PrimApp : bool] (PLE 0 [37/Declassify : uint256]))
    (define [61/PrimApp : bool] (PLT [37/Declassify : uint256] 3))
    (define [62/PrimApp : bool] (IF_THEN_ELSE [60/PrimApp : bool] [61/PrimApp : bool] False))
    (define [63/PrimApp : bool] (IF_THEN_ELSE [59/PrimApp : bool] [62/PrimApp : bool] False))
    (define [64/PrimApp : uint256] (SUB 4 [37/Declassify : uint256]))
    (define [65/PrimApp : uint256] (ADD [45/Declassify : uint256] [64/PrimApp : uint256]))
    (define [66/PrimApp : uint256] (MOD [65/PrimApp : uint256] 3))
    (define [67/PureIf : uint256] (IF_THEN_ELSE [62/PrimApp : bool] 0 1))
    (define [68/PureIf : uint256] (IF_THEN_ELSE [59/PrimApp : bool] 2 [67/PureIf : uint256]))
    (define [69/PureIf : uint256] (IF_THEN_ELSE [63/PrimApp : bool] [66/PrimApp : uint256] [68/PureIf : uint256]))
    (define [70/PrimApp : bool] (PLE 0 [69/PureIf : uint256]))
    (define [71/PrimApp : bool] (PLT [69/PureIf : uint256] 3))
    (define [72/PrimApp : bool] (IF_THEN_ELSE [70/PrimApp : bool] [71/PrimApp : bool] False))
    (assert! [72/PrimApp : bool])
    (define [73/PrimApp : bool] (PEQ [69/PureIf : uint256] 2))
    (define [74/PrimApp : bool] (PLE 0 [45/Declassify : uint256]))
    (define [75/PrimApp : bool] (PLT [45/Declassify : uint256] 3))
    (define [76/PrimApp : bool] (IF_THEN_ELSE [74/PrimApp : bool] [75/PrimApp : bool] False))
    (define [77/PrimApp : bool] (IF_THEN_ELSE [73/PrimApp : bool] False True))
    (define [78/PrimApp : bool] (IF_THEN_ELSE [77/PrimApp : bool] True [76/PrimApp : bool]))
    (assert! [78/PrimApp : bool])
    (define [79/PrimApp : bool] (PEQ [69/PureIf : uint256] 0))
    (define [80/PrimApp : bool] (PLE 0 [37/Declassify : uint256]))
    (define [81/PrimApp : bool] (PLT [37/Declassify : uint256] 3))
    (define [82/PrimApp : bool] (IF_THEN_ELSE [80/PrimApp : bool] [81/PrimApp : bool] False))
    (define [83/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] False True))
    (define [84/PrimApp : bool] (IF_THEN_ELSE [83/PrimApp : bool] True [82/PrimApp : bool]))
    (assert! [84/PrimApp : bool])
    (define [85/PrimApp : bool] (PEQ [69/PureIf : uint256] 2))
    (define [86/PrimApp : uint256] (MUL 2 [18/Declassify : uint256]))
    (define [87/PrimApp : bool] (PEQ [69/PureIf : uint256] 0))
    (define [88/PrimApp : uint256] (MUL 2 [18/Declassify : uint256]))
    (define [89/PureIf : uint256] (IF_THEN_ELSE [87/PrimApp : bool] 0 [18/Declassify : uint256]))
    (define [90/PureIf : uint256] (IF_THEN_ELSE [87/PrimApp : bool] [88/PrimApp : uint256] [18/Declassify : uint256]))
    (define [91/PureIf : uint256] (IF_THEN_ELSE [85/PrimApp : bool] [86/PrimApp : uint256] [89/PureIf : uint256]))
    (define [92/PureIf : uint256] (IF_THEN_ELSE [85/PrimApp : bool] 0 [90/PureIf : uint256]))
    (define [93/PrimApp : uint256] (ADD [19/Declassify : uint256] [91/PureIf : uint256]))
    (transfer! A [93/PrimApp : uint256])
    (transfer! B [92/PureIf : uint256])
    (halt!)])

(define-participant A 
  ([0/wagerAmount : uint256] [1/escrowAmount : uint256])
  
  (define [2/PrimApp : bytes] (INTERACT "getHand"))
  (define [3/PrimApp : bool] (BYTES_EQ [2/PrimApp : bytes] "ROCK"))
  (define [4/PrimApp : bool] (BYTES_EQ [2/PrimApp : bytes] "PAPER"))
  (define [5/PrimApp : bool] (BYTES_EQ [2/PrimApp : bytes] "SCISSORS"))
  (define [6/PrimApp : bool] (IF_THEN_ELSE [4/PrimApp : bool] True [5/PrimApp : bool]))
  (define [7/PrimApp : bool] (IF_THEN_ELSE [3/PrimApp : bool] True [6/PrimApp : bool]))
  (assume! [7/PrimApp : bool])
  (define [8/PureIf : uint256] (IF_THEN_ELSE [4/PrimApp : bool] 1 2))
  (define [9/PureIf : uint256] (IF_THEN_ELSE [3/PrimApp : bool] 0 [8/PureIf : uint256]))
  (define [10/PrimApp : bool] (PLE 0 [9/PureIf : uint256]))
  (define [11/PrimApp : bool] (PLT [9/PureIf : uint256] 3))
  (define [12/PrimApp : bool] (IF_THEN_ELSE [10/PrimApp : bool] [11/PrimApp : bool] False))
  (assert! [12/PrimApp : bool])
  (define [13/PrimApp : uint256] (RANDOM))
  (define [14/PrimApp : bytes] (UINT256_TO_BYTES [13/PrimApp : uint256]))
  (define [15/PrimApp : bytes] (UINT256_TO_BYTES [9/PureIf : uint256]))
  (define [16/PrimApp : bytes] (BCAT [14/PrimApp : bytes] [15/PrimApp : bytes]))
  (define [17/PrimApp : uint256] (DIGEST [16/PrimApp : bytes]))
  (define [18/Declassify : uint256] [0/wagerAmount : uint256])
  (define [19/Declassify : uint256] [1/escrowAmount : uint256])
  (define [20/Declassify : uint256] [17/PrimApp : uint256])
  (define [21/PrimApp : bytes] (INTERACT "commits"))
  (define [22/PrimApp : uint256] (ADD [18/Declassify : uint256] [19/Declassify : uint256]))
  (send! 0 () ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256]) [22/PrimApp : uint256])
  (define-values True () ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256]) [23/pay-amount : uint256] (recv! 0))
  (define [24/PrimApp : uint256] (ADD [18/Declassify : uint256] [19/Declassify : uint256]))
  (define [25/PrimApp : bool] (PEQ [23/pay-amount : uint256] [24/PrimApp : uint256]))
  (require! [25/PrimApp : bool])
  (define-values False ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256]) ([37/Declassify : uint256]) [39/pay-amount : uint256] (recv! 1))
  (define [40/PrimApp : bool] (PEQ [39/pay-amount : uint256] [18/Declassify : uint256]))
  (require! [40/PrimApp : bool])
  (define [41/PrimApp : bool] (PLE 0 [37/Declassify : uint256]))
  (define [42/PrimApp : bool] (PLT [37/Declassify : uint256] 3))
  (define [43/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] [42/PrimApp : bool] False))
  (require! [43/PrimApp : bool])
  (define [44/Declassify : uint256] [13/PrimApp : uint256])
  (define [45/Declassify : uint256] [9/PureIf : uint256])
  (define [46/PrimApp : bytes] (INTERACT "reveals"))
  (send! 2 ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256] [37/Declassify : uint256]) ([44/Declassify : uint256] [45/Declassify : uint256]) 0)
  (define-values True ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256] [37/Declassify : uint256]) ([44/Declassify : uint256] [45/Declassify : uint256]) [47/pay-amount : uint256] (recv! 2))
  (define [48/PrimApp : bool] (PEQ [47/pay-amount : uint256] 0))
  (require! [48/PrimApp : bool])
  (define [49/PrimApp : bytes] (UINT256_TO_BYTES [44/Declassify : uint256]))
  (define [50/PrimApp : bytes] (UINT256_TO_BYTES [45/Declassify : uint256]))
  (define [51/PrimApp : bytes] (BCAT [49/PrimApp : bytes] [50/PrimApp : bytes]))
  (define [52/PrimApp : uint256] (DIGEST [51/PrimApp : bytes]))
  (define [53/PrimApp : bool] (PEQ [20/Declassify : uint256] [52/PrimApp : uint256]))
  (require! [53/PrimApp : bool])
  (define [54/PrimApp : bool] (PLE 0 [45/Declassify : uint256]))
  (define [55/PrimApp : bool] (PLT [45/Declassify : uint256] 3))
  (define [56/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] [55/PrimApp : bool] False))
  (require! [56/PrimApp : bool])
  (define [57/PrimApp : bool] (PLE 0 [45/Declassify : uint256]))
  (define [58/PrimApp : bool] (PLT [45/Declassify : uint256] 3))
  (define [59/PrimApp : bool] (IF_THEN_ELSE [57/PrimApp : bool] [58/PrimApp : bool] False))
  (define [60/PrimApp : bool] (PLE 0 [37/Declassify : uint256]))
  (define [61/PrimApp : bool] (PLT [37/Declassify : uint256] 3))
  (define [62/PrimApp : bool] (IF_THEN_ELSE [60/PrimApp : bool] [61/PrimApp : bool] False))
  (define [63/PrimApp : bool] (IF_THEN_ELSE [59/PrimApp : bool] [62/PrimApp : bool] False))
  (define [64/PrimApp : uint256] (SUB 4 [37/Declassify : uint256]))
  (define [65/PrimApp : uint256] (ADD [45/Declassify : uint256] [64/PrimApp : uint256]))
  (define [66/PrimApp : uint256] (MOD [65/PrimApp : uint256] 3))
  (define [67/PureIf : uint256] (IF_THEN_ELSE [62/PrimApp : bool] 0 1))
  (define [68/PureIf : uint256] (IF_THEN_ELSE [59/PrimApp : bool] 2 [67/PureIf : uint256]))
  (define [69/PureIf : uint256] (IF_THEN_ELSE [63/PrimApp : bool] [66/PrimApp : uint256] [68/PureIf : uint256]))
  (define [70/PrimApp : bool] (PLE 0 [69/PureIf : uint256]))
  (define [71/PrimApp : bool] (PLT [69/PureIf : uint256] 3))
  (define [72/PrimApp : bool] (IF_THEN_ELSE [70/PrimApp : bool] [71/PrimApp : bool] False))
  (assert! [72/PrimApp : bool])
  (define [73/PrimApp : bool] (PEQ [69/PureIf : uint256] 2))
  (define [74/PrimApp : bool] (PLE 0 [45/Declassify : uint256]))
  (define [75/PrimApp : bool] (PLT [45/Declassify : uint256] 3))
  (define [76/PrimApp : bool] (IF_THEN_ELSE [74/PrimApp : bool] [75/PrimApp : bool] False))
  (define [77/PrimApp : bool] (IF_THEN_ELSE [73/PrimApp : bool] False True))
  (define [78/PrimApp : bool] (IF_THEN_ELSE [77/PrimApp : bool] True [76/PrimApp : bool]))
  (assert! [78/PrimApp : bool])
  (define [79/PrimApp : bool] (PEQ [69/PureIf : uint256] 0))
  (define [80/PrimApp : bool] (PLE 0 [37/Declassify : uint256]))
  (define [81/PrimApp : bool] (PLT [37/Declassify : uint256] 3))
  (define [82/PrimApp : bool] (IF_THEN_ELSE [80/PrimApp : bool] [81/PrimApp : bool] False))
  (define [83/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] False True))
  (define [84/PrimApp : bool] (IF_THEN_ELSE [83/PrimApp : bool] True [82/PrimApp : bool]))
  (assert! [84/PrimApp : bool])
  (define [85/PrimApp : bool] (PEQ [69/PureIf : uint256] 2))
  (define [86/PrimApp : uint256] (MUL 2 [18/Declassify : uint256]))
  (define [87/PrimApp : bool] (PEQ [69/PureIf : uint256] 0))
  (define [88/PrimApp : uint256] (MUL 2 [18/Declassify : uint256]))
  (define [89/PureIf : uint256] (IF_THEN_ELSE [87/PrimApp : bool] 0 [18/Declassify : uint256]))
  (define [90/PureIf : uint256] (IF_THEN_ELSE [87/PrimApp : bool] [88/PrimApp : uint256] [18/Declassify : uint256]))
  (define [91/PureIf : uint256] (IF_THEN_ELSE [85/PrimApp : bool] [86/PrimApp : uint256] [89/PureIf : uint256]))
  (define [92/PureIf : uint256] (IF_THEN_ELSE [85/PrimApp : bool] 0 [90/PureIf : uint256]))
  (define [93/PrimApp : uint256] (ADD [19/Declassify : uint256] [91/PureIf : uint256]))
  (define [94/PrimApp : bool] (PEQ [69/PureIf : uint256] 2))
  (define [95/PrimApp : bool] (PEQ [45/Declassify : uint256] 0))
  (define [96/PrimApp : bool] (IF_THEN_ELSE [95/PrimApp : bool] [94/PrimApp : bool] False))
  (possible? [96/PrimApp : bool])
  (define [97/PrimApp : bool] (PEQ [45/Declassify : uint256] 1))
  (define [98/PrimApp : bool] (IF_THEN_ELSE [97/PrimApp : bool] [94/PrimApp : bool] False))
  (possible? [98/PrimApp : bool])
  (define [99/PrimApp : bool] (PEQ [45/Declassify : uint256] 2))
  (define [100/PrimApp : bool] (IF_THEN_ELSE [99/PrimApp : bool] [94/PrimApp : bool] False))
  (possible? [100/PrimApp : bool])
  (define [101/PrimApp : bool] (PEQ [69/PureIf : uint256] 0))
  (define [102/PrimApp : bool] (PEQ [37/Declassify : uint256] 0))
  (define [103/PrimApp : bool] (IF_THEN_ELSE [102/PrimApp : bool] [101/PrimApp : bool] False))
  (possible? [103/PrimApp : bool])
  (define [104/PrimApp : bool] (PEQ [37/Declassify : uint256] 1))
  (define [105/PrimApp : bool] (IF_THEN_ELSE [104/PrimApp : bool] [101/PrimApp : bool] False))
  (possible? [105/PrimApp : bool])
  (define [106/PrimApp : bool] (PEQ [37/Declassify : uint256] 2))
  (define [107/PrimApp : bool] (IF_THEN_ELSE [106/PrimApp : bool] [101/PrimApp : bool] False))
  (possible? [107/PrimApp : bool])
  (define [108/PrimApp : bytes] (INTERACT "outcome"))
  [69/PureIf : uint256])

(define-participant B 
  ()
  
  (define-values False () ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256]) [23/pay-amount : uint256] (recv! 0))
  (define [24/PrimApp : uint256] (ADD [18/Declassify : uint256] [19/Declassify : uint256]))
  (define [25/PrimApp : bool] (PEQ [23/pay-amount : uint256] [24/PrimApp : uint256]))
  (require! [25/PrimApp : bool])
  (define [26/PrimApp : bytes] (INTERACT "getHand"))
  (define [27/PrimApp : bool] (BYTES_EQ [26/PrimApp : bytes] "ROCK"))
  (define [28/PrimApp : bool] (BYTES_EQ [26/PrimApp : bytes] "PAPER"))
  (define [29/PrimApp : bool] (BYTES_EQ [26/PrimApp : bytes] "SCISSORS"))
  (define [30/PrimApp : bool] (IF_THEN_ELSE [28/PrimApp : bool] True [29/PrimApp : bool]))
  (define [31/PrimApp : bool] (IF_THEN_ELSE [27/PrimApp : bool] True [30/PrimApp : bool]))
  (assume! [31/PrimApp : bool])
  (define [32/PureIf : uint256] (IF_THEN_ELSE [28/PrimApp : bool] 1 2))
  (define [33/PureIf : uint256] (IF_THEN_ELSE [27/PrimApp : bool] 0 [32/PureIf : uint256]))
  (define [34/PrimApp : bool] (PLE 0 [33/PureIf : uint256]))
  (define [35/PrimApp : bool] (PLT [33/PureIf : uint256] 3))
  (define [36/PrimApp : bool] (IF_THEN_ELSE [34/PrimApp : bool] [35/PrimApp : bool] False))
  (assert! [36/PrimApp : bool])
  (define [37/Declassify : uint256] [33/PureIf : uint256])
  (define [38/PrimApp : bytes] (INTERACT "accepts"))
  (send! 1 ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256]) ([37/Declassify : uint256]) [18/Declassify : uint256])
  (define-values True ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256]) ([37/Declassify : uint256]) [39/pay-amount : uint256] (recv! 1))
  (define [40/PrimApp : bool] (PEQ [39/pay-amount : uint256] [18/Declassify : uint256]))
  (require! [40/PrimApp : bool])
  (define [41/PrimApp : bool] (PLE 0 [37/Declassify : uint256]))
  (define [42/PrimApp : bool] (PLT [37/Declassify : uint256] 3))
  (define [43/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] [42/PrimApp : bool] False))
  (require! [43/PrimApp : bool])
  (define-values False ([18/Declassify : uint256] [19/Declassify : uint256] [20/Declassify : uint256] [37/Declassify : uint256]) ([44/Declassify : uint256] [45/Declassify : uint256]) [47/pay-amount : uint256] (recv! 2))
  (define [48/PrimApp : bool] (PEQ [47/pay-amount : uint256] 0))
  (require! [48/PrimApp : bool])
  (define [49/PrimApp : bytes] (UINT256_TO_BYTES [44/Declassify : uint256]))
  (define [50/PrimApp : bytes] (UINT256_TO_BYTES [45/Declassify : uint256]))
  (define [51/PrimApp : bytes] (BCAT [49/PrimApp : bytes] [50/PrimApp : bytes]))
  (define [52/PrimApp : uint256] (DIGEST [51/PrimApp : bytes]))
  (define [53/PrimApp : bool] (PEQ [20/Declassify : uint256] [52/PrimApp : uint256]))
  (require! [53/PrimApp : bool])
  (define [54/PrimApp : bool] (PLE 0 [45/Declassify : uint256]))
  (define [55/PrimApp : bool] (PLT [45/Declassify : uint256] 3))
  (define [56/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] [55/PrimApp : bool] False))
  (require! [56/PrimApp : bool])
  (define [57/PrimApp : bool] (PLE 0 [45/Declassify : uint256]))
  (define [58/PrimApp : bool] (PLT [45/Declassify : uint256] 3))
  (define [59/PrimApp : bool] (IF_THEN_ELSE [57/PrimApp : bool] [58/PrimApp : bool] False))
  (define [60/PrimApp : bool] (PLE 0 [37/Declassify : uint256]))
  (define [61/PrimApp : bool] (PLT [37/Declassify : uint256] 3))
  (define [62/PrimApp : bool] (IF_THEN_ELSE [60/PrimApp : bool] [61/PrimApp : bool] False))
  (define [63/PrimApp : bool] (IF_THEN_ELSE [59/PrimApp : bool] [62/PrimApp : bool] False))
  (define [64/PrimApp : uint256] (SUB 4 [37/Declassify : uint256]))
  (define [65/PrimApp : uint256] (ADD [45/Declassify : uint256] [64/PrimApp : uint256]))
  (define [66/PrimApp : uint256] (MOD [65/PrimApp : uint256] 3))
  (define [67/PureIf : uint256] (IF_THEN_ELSE [62/PrimApp : bool] 0 1))
  (define [68/PureIf : uint256] (IF_THEN_ELSE [59/PrimApp : bool] 2 [67/PureIf : uint256]))
  (define [69/PureIf : uint256] (IF_THEN_ELSE [63/PrimApp : bool] [66/PrimApp : uint256] [68/PureIf : uint256]))
  (define [70/PrimApp : bool] (PLE 0 [69/PureIf : uint256]))
  (define [71/PrimApp : bool] (PLT [69/PureIf : uint256] 3))
  (define [72/PrimApp : bool] (IF_THEN_ELSE [70/PrimApp : bool] [71/PrimApp : bool] False))
  (assert! [72/PrimApp : bool])
  (define [73/PrimApp : bool] (PEQ [69/PureIf : uint256] 2))
  (define [74/PrimApp : bool] (PLE 0 [45/Declassify : uint256]))
  (define [75/PrimApp : bool] (PLT [45/Declassify : uint256] 3))
  (define [76/PrimApp : bool] (IF_THEN_ELSE [74/PrimApp : bool] [75/PrimApp : bool] False))
  (define [77/PrimApp : bool] (IF_THEN_ELSE [73/PrimApp : bool] False True))
  (define [78/PrimApp : bool] (IF_THEN_ELSE [77/PrimApp : bool] True [76/PrimApp : bool]))
  (assert! [78/PrimApp : bool])
  (define [79/PrimApp : bool] (PEQ [69/PureIf : uint256] 0))
  (define [80/PrimApp : bool] (PLE 0 [37/Declassify : uint256]))
  (define [81/PrimApp : bool] (PLT [37/Declassify : uint256] 3))
  (define [82/PrimApp : bool] (IF_THEN_ELSE [80/PrimApp : bool] [81/PrimApp : bool] False))
  (define [83/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] False True))
  (define [84/PrimApp : bool] (IF_THEN_ELSE [83/PrimApp : bool] True [82/PrimApp : bool]))
  (assert! [84/PrimApp : bool])
  (define [85/PrimApp : bool] (PEQ [69/PureIf : uint256] 2))
  (define [86/PrimApp : uint256] (MUL 2 [18/Declassify : uint256]))
  (define [87/PrimApp : bool] (PEQ [69/PureIf : uint256] 0))
  (define [88/PrimApp : uint256] (MUL 2 [18/Declassify : uint256]))
  (define [89/PureIf : uint256] (IF_THEN_ELSE [87/PrimApp : bool] 0 [18/Declassify : uint256]))
  (define [90/PureIf : uint256] (IF_THEN_ELSE [87/PrimApp : bool] [88/PrimApp : uint256] [18/Declassify : uint256]))
  (define [91/PureIf : uint256] (IF_THEN_ELSE [85/PrimApp : bool] [86/PrimApp : uint256] [89/PureIf : uint256]))
  (define [92/PureIf : uint256] (IF_THEN_ELSE [85/PrimApp : bool] 0 [90/PureIf : uint256]))
  (define [93/PrimApp : uint256] (ADD [19/Declassify : uint256] [91/PureIf : uint256]))
  (define [94/PrimApp : bool] (PEQ [69/PureIf : uint256] 2))
  (define [95/PrimApp : bool] (PEQ [45/Declassify : uint256] 0))
  (define [96/PrimApp : bool] (IF_THEN_ELSE [95/PrimApp : bool] [94/PrimApp : bool] False))
  (possible? [96/PrimApp : bool])
  (define [97/PrimApp : bool] (PEQ [45/Declassify : uint256] 1))
  (define [98/PrimApp : bool] (IF_THEN_ELSE [97/PrimApp : bool] [94/PrimApp : bool] False))
  (possible? [98/PrimApp : bool])
  (define [99/PrimApp : bool] (PEQ [45/Declassify : uint256] 2))
  (define [100/PrimApp : bool] (IF_THEN_ELSE [99/PrimApp : bool] [94/PrimApp : bool] False))
  (possible? [100/PrimApp : bool])
  (define [101/PrimApp : bool] (PEQ [69/PureIf : uint256] 0))
  (define [102/PrimApp : bool] (PEQ [37/Declassify : uint256] 0))
  (define [103/PrimApp : bool] (IF_THEN_ELSE [102/PrimApp : bool] [101/PrimApp : bool] False))
  (possible? [103/PrimApp : bool])
  (define [104/PrimApp : bool] (PEQ [37/Declassify : uint256] 1))
  (define [105/PrimApp : bool] (IF_THEN_ELSE [104/PrimApp : bool] [101/PrimApp : bool] False))
  (possible? [105/PrimApp : bool])
  (define [106/PrimApp : bool] (PEQ [37/Declassify : uint256] 2))
  (define [107/PrimApp : bool] (IF_THEN_ELSE [106/PrimApp : bool] [101/PrimApp : bool] False))
  (possible? [107/PrimApp : bool])
  (define [108/PrimApp : bytes] (INTERACT "outcome"))
  [69/PureIf : uint256])