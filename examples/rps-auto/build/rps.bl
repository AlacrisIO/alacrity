#lang alacrity/bl

(define-contract 
  #:participants (A B)
  [0 A () ([15/Declassify : uint256] [16/Declassify : uint256] [14/PrimApp : uint256]) [18/pay-amount : uint256] 
    (define [19/PrimApp : uint256] (ADD [15/Declassify : uint256] [16/Declassify : uint256]))
    (define [20/PrimApp : bool] (PEQ [18/pay-amount : uint256] [19/PrimApp : uint256]))
    (require! [20/PrimApp : bool])
    (wait! 1 ([14/PrimApp : uint256] [15/Declassify : uint256] [16/Declassify : uint256]))]
  [1 B ([14/PrimApp : uint256] [15/Declassify : uint256] [16/Declassify : uint256]) ([21/Declassify : uint256]) [22/pay-amount : uint256] 
    (define [23/PrimApp : bool] (PEQ [22/pay-amount : uint256] [15/Declassify : uint256]))
    (require! [23/PrimApp : bool])
    (define [24/PrimApp : bool] (PLE 0 [21/Declassify : uint256]))
    (define [25/PrimApp : bool] (PLT [21/Declassify : uint256] 3))
    (define [26/PrimApp : bool] (IF_THEN_ELSE [24/PrimApp : bool] [25/PrimApp : bool] False))
    (require! [26/PrimApp : bool])
    (wait! 2 ([14/PrimApp : uint256] [15/Declassify : uint256] [16/Declassify : uint256] [21/Declassify : uint256]))]
  [2 A ([14/PrimApp : uint256] [15/Declassify : uint256] [16/Declassify : uint256] [21/Declassify : uint256]) ([27/Declassify : uint256] [28/Declassify : uint256]) [29/pay-amount : uint256] 
    (define [30/PrimApp : bool] (PEQ [29/pay-amount : uint256] 0))
    (require! [30/PrimApp : bool])
    (define [31/PrimApp : bytes] (UINT256_TO_BYTES [27/Declassify : uint256]))
    (define [32/PrimApp : bytes] (UINT256_TO_BYTES [28/Declassify : uint256]))
    (define [33/PrimApp : bytes] (BCAT [31/PrimApp : bytes] [32/PrimApp : bytes]))
    (define [34/PrimApp : uint256] (DIGEST [33/PrimApp : bytes]))
    (define [35/PrimApp : bool] (PEQ [14/PrimApp : uint256] [34/PrimApp : uint256]))
    (require! [35/PrimApp : bool])
    (define [36/PrimApp : bool] (PLE 0 [28/Declassify : uint256]))
    (define [37/PrimApp : bool] (PLT [28/Declassify : uint256] 3))
    (define [38/PrimApp : bool] (IF_THEN_ELSE [36/PrimApp : bool] [37/PrimApp : bool] False))
    (require! [38/PrimApp : bool])
    (define [39/PrimApp : bool] (PLE 0 [28/Declassify : uint256]))
    (define [40/PrimApp : bool] (PLT [28/Declassify : uint256] 3))
    (define [41/PrimApp : bool] (IF_THEN_ELSE [39/PrimApp : bool] [40/PrimApp : bool] False))
    (define [42/PrimApp : bool] (PLE 0 [21/Declassify : uint256]))
    (define [43/PrimApp : bool] (PLT [21/Declassify : uint256] 3))
    (define [44/PrimApp : bool] (IF_THEN_ELSE [42/PrimApp : bool] [43/PrimApp : bool] False))
    (define [45/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] [44/PrimApp : bool] False))
    (define [46/PrimApp : uint256] (SUB 4 [21/Declassify : uint256]))
    (define [47/PrimApp : uint256] (ADD [28/Declassify : uint256] [46/PrimApp : uint256]))
    (define [48/PrimApp : uint256] (MOD [47/PrimApp : uint256] 3))
    (define [49/PureIf : uint256] (IF_THEN_ELSE [44/PrimApp : bool] 0 1))
    (define [50/PureIf : uint256] (IF_THEN_ELSE [41/PrimApp : bool] 2 [49/PureIf : uint256]))
    (define [51/PureIf : uint256] (IF_THEN_ELSE [45/PrimApp : bool] [48/PrimApp : uint256] [50/PureIf : uint256]))
    (define [52/PrimApp : bool] (PLE 0 [51/PureIf : uint256]))
    (define [53/PrimApp : bool] (PLT [51/PureIf : uint256] 3))
    (define [54/PrimApp : bool] (IF_THEN_ELSE [52/PrimApp : bool] [53/PrimApp : bool] False))
    (assert! [54/PrimApp : bool])
    (define [55/PrimApp : bool] (PEQ [51/PureIf : uint256] 2))
    (define [56/PrimApp : bool] (PLE 0 [28/Declassify : uint256]))
    (define [57/PrimApp : bool] (PLT [28/Declassify : uint256] 3))
    (define [58/PrimApp : bool] (IF_THEN_ELSE [56/PrimApp : bool] [57/PrimApp : bool] False))
    (define [59/PrimApp : bool] (IF_THEN_ELSE [55/PrimApp : bool] False True))
    (define [60/PrimApp : bool] (IF_THEN_ELSE [59/PrimApp : bool] True [58/PrimApp : bool]))
    (assert! [60/PrimApp : bool])
    (define [61/PrimApp : bool] (PEQ [51/PureIf : uint256] 0))
    (define [62/PrimApp : bool] (PLE 0 [21/Declassify : uint256]))
    (define [63/PrimApp : bool] (PLT [21/Declassify : uint256] 3))
    (define [64/PrimApp : bool] (IF_THEN_ELSE [62/PrimApp : bool] [63/PrimApp : bool] False))
    (define [65/PrimApp : bool] (IF_THEN_ELSE [61/PrimApp : bool] False True))
    (define [66/PrimApp : bool] (IF_THEN_ELSE [65/PrimApp : bool] True [64/PrimApp : bool]))
    (assert! [66/PrimApp : bool])
    (define [67/PrimApp : bool] (PEQ [51/PureIf : uint256] 2))
    (define [68/PrimApp : uint256] (MUL 2 [15/Declassify : uint256]))
    (define [69/PrimApp : uint256] (ADD [68/PrimApp : uint256] [16/Declassify : uint256]))
    (define [70/PrimApp : bool] (PEQ [51/PureIf : uint256] 0))
    (define [71/PrimApp : uint256] (MUL 2 [15/Declassify : uint256]))
    (define [72/PrimApp : uint256] (ADD [15/Declassify : uint256] [16/Declassify : uint256]))
    (define [73/PureIf : uint256] (IF_THEN_ELSE [70/PrimApp : bool] [16/Declassify : uint256] [72/PrimApp : uint256]))
    (define [74/PureIf : uint256] (IF_THEN_ELSE [70/PrimApp : bool] [71/PrimApp : uint256] [15/Declassify : uint256]))
    (define [75/PureIf : uint256] (IF_THEN_ELSE [67/PrimApp : bool] [69/PrimApp : uint256] [73/PureIf : uint256]))
    (define [76/PureIf : uint256] (IF_THEN_ELSE [67/PrimApp : bool] 0 [74/PureIf : uint256]))
    (transfer! A [75/PureIf : uint256])
    (transfer! B [76/PureIf : uint256])
    (halt!)])

(define-participant A 
  ([0/wagerAmount : uint256] [1/escrowAmount : uint256] [2/handA : uint256])
  
  (define [4/PrimApp : bool] (PLE 0 [2/handA : uint256]))
  (define [5/PrimApp : bool] (PLT [2/handA : uint256] 3))
  (define [6/PrimApp : bool] (IF_THEN_ELSE [4/PrimApp : bool] [5/PrimApp : bool] False))
  (assume! [6/PrimApp : bool])
  (define [10/PrimApp : uint256] (RANDOM))
  (define [11/PrimApp : bytes] (UINT256_TO_BYTES [10/PrimApp : uint256]))
  (define [12/PrimApp : bytes] (UINT256_TO_BYTES [2/handA : uint256]))
  (define [13/PrimApp : bytes] (BCAT [11/PrimApp : bytes] [12/PrimApp : bytes]))
  (define [14/PrimApp : uint256] (DIGEST [13/PrimApp : bytes]))
  (define [15/Declassify : uint256] [0/wagerAmount : uint256])
  (define [16/Declassify : uint256] [1/escrowAmount : uint256])
  (define [17/PrimApp : uint256] (ADD [15/Declassify : uint256] [16/Declassify : uint256]))
  (send! 0 () ([15/Declassify : uint256] [16/Declassify : uint256] [14/PrimApp : uint256]) [17/PrimApp : uint256])
  (define-values True () ([15/Declassify : uint256] [16/Declassify : uint256] [14/PrimApp : uint256]) [18/pay-amount : uint256] (recv! 0))
  (define [19/PrimApp : uint256] (ADD [15/Declassify : uint256] [16/Declassify : uint256]))
  (define [20/PrimApp : bool] (PEQ [18/pay-amount : uint256] [19/PrimApp : uint256]))
  (require! [20/PrimApp : bool])
  (define-values False ([14/PrimApp : uint256] [15/Declassify : uint256] [16/Declassify : uint256]) ([21/Declassify : uint256]) [22/pay-amount : uint256] (recv! 1))
  (define [23/PrimApp : bool] (PEQ [22/pay-amount : uint256] [15/Declassify : uint256]))
  (require! [23/PrimApp : bool])
  (define [24/PrimApp : bool] (PLE 0 [21/Declassify : uint256]))
  (define [25/PrimApp : bool] (PLT [21/Declassify : uint256] 3))
  (define [26/PrimApp : bool] (IF_THEN_ELSE [24/PrimApp : bool] [25/PrimApp : bool] False))
  (require! [26/PrimApp : bool])
  (define [27/Declassify : uint256] [10/PrimApp : uint256])
  (define [28/Declassify : uint256] [2/handA : uint256])
  (send! 2 ([14/PrimApp : uint256] [15/Declassify : uint256] [16/Declassify : uint256] [21/Declassify : uint256]) ([27/Declassify : uint256] [28/Declassify : uint256]) 0)
  (define-values True ([14/PrimApp : uint256] [15/Declassify : uint256] [16/Declassify : uint256] [21/Declassify : uint256]) ([27/Declassify : uint256] [28/Declassify : uint256]) [29/pay-amount : uint256] (recv! 2))
  (define [30/PrimApp : bool] (PEQ [29/pay-amount : uint256] 0))
  (require! [30/PrimApp : bool])
  (define [31/PrimApp : bytes] (UINT256_TO_BYTES [27/Declassify : uint256]))
  (define [32/PrimApp : bytes] (UINT256_TO_BYTES [28/Declassify : uint256]))
  (define [33/PrimApp : bytes] (BCAT [31/PrimApp : bytes] [32/PrimApp : bytes]))
  (define [34/PrimApp : uint256] (DIGEST [33/PrimApp : bytes]))
  (define [35/PrimApp : bool] (PEQ [14/PrimApp : uint256] [34/PrimApp : uint256]))
  (require! [35/PrimApp : bool])
  (define [36/PrimApp : bool] (PLE 0 [28/Declassify : uint256]))
  (define [37/PrimApp : bool] (PLT [28/Declassify : uint256] 3))
  (define [38/PrimApp : bool] (IF_THEN_ELSE [36/PrimApp : bool] [37/PrimApp : bool] False))
  (require! [38/PrimApp : bool])
  (define [39/PrimApp : bool] (PLE 0 [28/Declassify : uint256]))
  (define [40/PrimApp : bool] (PLT [28/Declassify : uint256] 3))
  (define [41/PrimApp : bool] (IF_THEN_ELSE [39/PrimApp : bool] [40/PrimApp : bool] False))
  (define [42/PrimApp : bool] (PLE 0 [21/Declassify : uint256]))
  (define [43/PrimApp : bool] (PLT [21/Declassify : uint256] 3))
  (define [44/PrimApp : bool] (IF_THEN_ELSE [42/PrimApp : bool] [43/PrimApp : bool] False))
  (define [45/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] [44/PrimApp : bool] False))
  (define [46/PrimApp : uint256] (SUB 4 [21/Declassify : uint256]))
  (define [47/PrimApp : uint256] (ADD [28/Declassify : uint256] [46/PrimApp : uint256]))
  (define [48/PrimApp : uint256] (MOD [47/PrimApp : uint256] 3))
  (define [49/PureIf : uint256] (IF_THEN_ELSE [44/PrimApp : bool] 0 1))
  (define [50/PureIf : uint256] (IF_THEN_ELSE [41/PrimApp : bool] 2 [49/PureIf : uint256]))
  (define [51/PureIf : uint256] (IF_THEN_ELSE [45/PrimApp : bool] [48/PrimApp : uint256] [50/PureIf : uint256]))
  (define [52/PrimApp : bool] (PLE 0 [51/PureIf : uint256]))
  (define [53/PrimApp : bool] (PLT [51/PureIf : uint256] 3))
  (define [54/PrimApp : bool] (IF_THEN_ELSE [52/PrimApp : bool] [53/PrimApp : bool] False))
  (assert! [54/PrimApp : bool])
  (define [55/PrimApp : bool] (PEQ [51/PureIf : uint256] 2))
  (define [56/PrimApp : bool] (PLE 0 [28/Declassify : uint256]))
  (define [57/PrimApp : bool] (PLT [28/Declassify : uint256] 3))
  (define [58/PrimApp : bool] (IF_THEN_ELSE [56/PrimApp : bool] [57/PrimApp : bool] False))
  (define [59/PrimApp : bool] (IF_THEN_ELSE [55/PrimApp : bool] False True))
  (define [60/PrimApp : bool] (IF_THEN_ELSE [59/PrimApp : bool] True [58/PrimApp : bool]))
  (assert! [60/PrimApp : bool])
  (define [61/PrimApp : bool] (PEQ [51/PureIf : uint256] 0))
  (define [62/PrimApp : bool] (PLE 0 [21/Declassify : uint256]))
  (define [63/PrimApp : bool] (PLT [21/Declassify : uint256] 3))
  (define [64/PrimApp : bool] (IF_THEN_ELSE [62/PrimApp : bool] [63/PrimApp : bool] False))
  (define [65/PrimApp : bool] (IF_THEN_ELSE [61/PrimApp : bool] False True))
  (define [66/PrimApp : bool] (IF_THEN_ELSE [65/PrimApp : bool] True [64/PrimApp : bool]))
  (assert! [66/PrimApp : bool])
  (define [67/PrimApp : bool] (PEQ [51/PureIf : uint256] 2))
  (define [68/PrimApp : uint256] (MUL 2 [15/Declassify : uint256]))
  (define [69/PrimApp : uint256] (ADD [68/PrimApp : uint256] [16/Declassify : uint256]))
  (define [70/PrimApp : bool] (PEQ [51/PureIf : uint256] 0))
  (define [71/PrimApp : uint256] (MUL 2 [15/Declassify : uint256]))
  (define [72/PrimApp : uint256] (ADD [15/Declassify : uint256] [16/Declassify : uint256]))
  (define [73/PureIf : uint256] (IF_THEN_ELSE [70/PrimApp : bool] [16/Declassify : uint256] [72/PrimApp : uint256]))
  (define [74/PureIf : uint256] (IF_THEN_ELSE [70/PrimApp : bool] [71/PrimApp : uint256] [15/Declassify : uint256]))
  (define [75/PureIf : uint256] (IF_THEN_ELSE [67/PrimApp : bool] [69/PrimApp : uint256] [73/PureIf : uint256]))
  (define [76/PureIf : uint256] (IF_THEN_ELSE [67/PrimApp : bool] 0 [74/PureIf : uint256]))
  (define [77/PrimApp : bool] (PEQ [51/PureIf : uint256] 2))
  (possible? [77/PrimApp : bool])
  (define [78/PrimApp : bool] (PEQ [51/PureIf : uint256] 0))
  (possible? [78/PrimApp : bool])
  [51/PureIf : uint256])

(define-participant B 
  ([3/handB : uint256])
  
  (define [7/PrimApp : bool] (PLE 0 [3/handB : uint256]))
  (define [8/PrimApp : bool] (PLT [3/handB : uint256] 3))
  (define [9/PrimApp : bool] (IF_THEN_ELSE [7/PrimApp : bool] [8/PrimApp : bool] False))
  (assume! [9/PrimApp : bool])
  (define-values False () ([15/Declassify : uint256] [16/Declassify : uint256] [14/PrimApp : uint256]) [18/pay-amount : uint256] (recv! 0))
  (define [19/PrimApp : uint256] (ADD [15/Declassify : uint256] [16/Declassify : uint256]))
  (define [20/PrimApp : bool] (PEQ [18/pay-amount : uint256] [19/PrimApp : uint256]))
  (require! [20/PrimApp : bool])
  (define [21/Declassify : uint256] [3/handB : uint256])
  (send! 1 ([14/PrimApp : uint256] [15/Declassify : uint256] [16/Declassify : uint256]) ([21/Declassify : uint256]) [15/Declassify : uint256])
  (define-values True ([14/PrimApp : uint256] [15/Declassify : uint256] [16/Declassify : uint256]) ([21/Declassify : uint256]) [22/pay-amount : uint256] (recv! 1))
  (define [23/PrimApp : bool] (PEQ [22/pay-amount : uint256] [15/Declassify : uint256]))
  (require! [23/PrimApp : bool])
  (define [24/PrimApp : bool] (PLE 0 [21/Declassify : uint256]))
  (define [25/PrimApp : bool] (PLT [21/Declassify : uint256] 3))
  (define [26/PrimApp : bool] (IF_THEN_ELSE [24/PrimApp : bool] [25/PrimApp : bool] False))
  (require! [26/PrimApp : bool])
  (define-values False ([14/PrimApp : uint256] [15/Declassify : uint256] [16/Declassify : uint256] [21/Declassify : uint256]) ([27/Declassify : uint256] [28/Declassify : uint256]) [29/pay-amount : uint256] (recv! 2))
  (define [30/PrimApp : bool] (PEQ [29/pay-amount : uint256] 0))
  (require! [30/PrimApp : bool])
  (define [31/PrimApp : bytes] (UINT256_TO_BYTES [27/Declassify : uint256]))
  (define [32/PrimApp : bytes] (UINT256_TO_BYTES [28/Declassify : uint256]))
  (define [33/PrimApp : bytes] (BCAT [31/PrimApp : bytes] [32/PrimApp : bytes]))
  (define [34/PrimApp : uint256] (DIGEST [33/PrimApp : bytes]))
  (define [35/PrimApp : bool] (PEQ [14/PrimApp : uint256] [34/PrimApp : uint256]))
  (require! [35/PrimApp : bool])
  (define [36/PrimApp : bool] (PLE 0 [28/Declassify : uint256]))
  (define [37/PrimApp : bool] (PLT [28/Declassify : uint256] 3))
  (define [38/PrimApp : bool] (IF_THEN_ELSE [36/PrimApp : bool] [37/PrimApp : bool] False))
  (require! [38/PrimApp : bool])
  (define [39/PrimApp : bool] (PLE 0 [28/Declassify : uint256]))
  (define [40/PrimApp : bool] (PLT [28/Declassify : uint256] 3))
  (define [41/PrimApp : bool] (IF_THEN_ELSE [39/PrimApp : bool] [40/PrimApp : bool] False))
  (define [42/PrimApp : bool] (PLE 0 [21/Declassify : uint256]))
  (define [43/PrimApp : bool] (PLT [21/Declassify : uint256] 3))
  (define [44/PrimApp : bool] (IF_THEN_ELSE [42/PrimApp : bool] [43/PrimApp : bool] False))
  (define [45/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] [44/PrimApp : bool] False))
  (define [46/PrimApp : uint256] (SUB 4 [21/Declassify : uint256]))
  (define [47/PrimApp : uint256] (ADD [28/Declassify : uint256] [46/PrimApp : uint256]))
  (define [48/PrimApp : uint256] (MOD [47/PrimApp : uint256] 3))
  (define [49/PureIf : uint256] (IF_THEN_ELSE [44/PrimApp : bool] 0 1))
  (define [50/PureIf : uint256] (IF_THEN_ELSE [41/PrimApp : bool] 2 [49/PureIf : uint256]))
  (define [51/PureIf : uint256] (IF_THEN_ELSE [45/PrimApp : bool] [48/PrimApp : uint256] [50/PureIf : uint256]))
  (define [52/PrimApp : bool] (PLE 0 [51/PureIf : uint256]))
  (define [53/PrimApp : bool] (PLT [51/PureIf : uint256] 3))
  (define [54/PrimApp : bool] (IF_THEN_ELSE [52/PrimApp : bool] [53/PrimApp : bool] False))
  (assert! [54/PrimApp : bool])
  (define [55/PrimApp : bool] (PEQ [51/PureIf : uint256] 2))
  (define [56/PrimApp : bool] (PLE 0 [28/Declassify : uint256]))
  (define [57/PrimApp : bool] (PLT [28/Declassify : uint256] 3))
  (define [58/PrimApp : bool] (IF_THEN_ELSE [56/PrimApp : bool] [57/PrimApp : bool] False))
  (define [59/PrimApp : bool] (IF_THEN_ELSE [55/PrimApp : bool] False True))
  (define [60/PrimApp : bool] (IF_THEN_ELSE [59/PrimApp : bool] True [58/PrimApp : bool]))
  (assert! [60/PrimApp : bool])
  (define [61/PrimApp : bool] (PEQ [51/PureIf : uint256] 0))
  (define [62/PrimApp : bool] (PLE 0 [21/Declassify : uint256]))
  (define [63/PrimApp : bool] (PLT [21/Declassify : uint256] 3))
  (define [64/PrimApp : bool] (IF_THEN_ELSE [62/PrimApp : bool] [63/PrimApp : bool] False))
  (define [65/PrimApp : bool] (IF_THEN_ELSE [61/PrimApp : bool] False True))
  (define [66/PrimApp : bool] (IF_THEN_ELSE [65/PrimApp : bool] True [64/PrimApp : bool]))
  (assert! [66/PrimApp : bool])
  (define [67/PrimApp : bool] (PEQ [51/PureIf : uint256] 2))
  (define [68/PrimApp : uint256] (MUL 2 [15/Declassify : uint256]))
  (define [69/PrimApp : uint256] (ADD [68/PrimApp : uint256] [16/Declassify : uint256]))
  (define [70/PrimApp : bool] (PEQ [51/PureIf : uint256] 0))
  (define [71/PrimApp : uint256] (MUL 2 [15/Declassify : uint256]))
  (define [72/PrimApp : uint256] (ADD [15/Declassify : uint256] [16/Declassify : uint256]))
  (define [73/PureIf : uint256] (IF_THEN_ELSE [70/PrimApp : bool] [16/Declassify : uint256] [72/PrimApp : uint256]))
  (define [74/PureIf : uint256] (IF_THEN_ELSE [70/PrimApp : bool] [71/PrimApp : uint256] [15/Declassify : uint256]))
  (define [75/PureIf : uint256] (IF_THEN_ELSE [67/PrimApp : bool] [69/PrimApp : uint256] [73/PureIf : uint256]))
  (define [76/PureIf : uint256] (IF_THEN_ELSE [67/PrimApp : bool] 0 [74/PureIf : uint256]))
  (define [77/PrimApp : bool] (PEQ [51/PureIf : uint256] 2))
  (possible? [77/PrimApp : bool])
  (define [78/PrimApp : bool] (PEQ [51/PureIf : uint256] 0))
  (possible? [78/PrimApp : bool])
  [51/PureIf : uint256])