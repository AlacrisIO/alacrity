#lang alacrity/bl

(define-contract 
  #:participants (A B)
  [0 A () ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256]) [23/pay-amount : uint256] 
    (define [24/PrimApp : uint256] (ADD [19/Declassify : uint256] [20/Declassify : uint256]))
    (define [25/PrimApp : bool] (PEQ [23/pay-amount : uint256] [24/PrimApp : uint256]))
    (require! [25/PrimApp : bool])
    (wait! 1 ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256]))]
  [1 B ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256]) ([26/Declassify : uint256]) [27/pay-amount : uint256] 
    (define [28/PrimApp : bool] (PEQ [27/pay-amount : uint256] [19/Declassify : uint256]))
    (require! [28/PrimApp : bool])
    (define [29/PrimApp : bool] (PEQ [26/Declassify : uint256] 0))
    (define [30/PrimApp : bool] (PEQ [26/Declassify : uint256] 1))
    (define [31/PrimApp : bool] (PEQ [26/Declassify : uint256] 2))
    (define [32/PrimApp : bool] (IF_THEN_ELSE [30/PrimApp : bool] True [31/PrimApp : bool]))
    (define [33/PrimApp : bool] (IF_THEN_ELSE [29/PrimApp : bool] True [32/PrimApp : bool]))
    (require! [33/PrimApp : bool])
    (wait! 2 ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256] [26/Declassify : uint256]))]
  [2 A ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256] [26/Declassify : uint256]) ([34/Declassify : uint256] [35/Declassify : uint256]) [36/pay-amount : uint256] 
    (define [37/PrimApp : bool] (PEQ [36/pay-amount : uint256] 0))
    (require! [37/PrimApp : bool])
    (define [38/PrimApp : bytes] (UINT256_TO_BYTES [34/Declassify : uint256]))
    (define [39/PrimApp : bytes] (UINT256_TO_BYTES [35/Declassify : uint256]))
    (define [40/PrimApp : bytes] (BCAT [38/PrimApp : bytes] [39/PrimApp : bytes]))
    (define [41/PrimApp : uint256] (DIGEST [40/PrimApp : bytes]))
    (define [42/PrimApp : bool] (PEQ [21/Declassify : uint256] [41/PrimApp : uint256]))
    (require! [42/PrimApp : bool])
    (define [43/PrimApp : bool] (PEQ [35/Declassify : uint256] 0))
    (define [44/PrimApp : bool] (PEQ [35/Declassify : uint256] 1))
    (define [45/PrimApp : bool] (PEQ [35/Declassify : uint256] 2))
    (define [46/PrimApp : bool] (IF_THEN_ELSE [44/PrimApp : bool] True [45/PrimApp : bool]))
    (define [47/PrimApp : bool] (IF_THEN_ELSE [43/PrimApp : bool] True [46/PrimApp : bool]))
    (require! [47/PrimApp : bool])
    (define [48/PrimApp : bool] (PEQ [35/Declassify : uint256] 0))
    (define [49/PrimApp : bool] (PEQ [35/Declassify : uint256] 1))
    (define [50/PrimApp : bool] (PEQ [35/Declassify : uint256] 2))
    (define [51/PrimApp : bool] (IF_THEN_ELSE [49/PrimApp : bool] True [50/PrimApp : bool]))
    (define [52/PrimApp : bool] (IF_THEN_ELSE [48/PrimApp : bool] True [51/PrimApp : bool]))
    (define [53/PrimApp : bool] (PEQ [26/Declassify : uint256] 0))
    (define [54/PrimApp : bool] (PEQ [26/Declassify : uint256] 1))
    (define [55/PrimApp : bool] (PEQ [26/Declassify : uint256] 2))
    (define [56/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] True [55/PrimApp : bool]))
    (define [57/PrimApp : bool] (IF_THEN_ELSE [53/PrimApp : bool] True [56/PrimApp : bool]))
    (define [58/PrimApp : bool] (IF_THEN_ELSE [52/PrimApp : bool] [57/PrimApp : bool] False))
    (define [59/PrimApp : uint256] (SUB 4 [26/Declassify : uint256]))
    (define [60/PrimApp : uint256] (ADD [35/Declassify : uint256] [59/PrimApp : uint256]))
    (define [61/PrimApp : uint256] (MOD [60/PrimApp : uint256] 3))
    (define [62/PureIf : uint256] (IF_THEN_ELSE [57/PrimApp : bool] 0 1))
    (define [63/PureIf : uint256] (IF_THEN_ELSE [52/PrimApp : bool] 2 [62/PureIf : uint256]))
    (define [64/PureIf : uint256] (IF_THEN_ELSE [58/PrimApp : bool] [61/PrimApp : uint256] [63/PureIf : uint256]))
    (define [65/PrimApp : bool] (PEQ [64/PureIf : uint256] 0))
    (define [66/PrimApp : bool] (PEQ [64/PureIf : uint256] 1))
    (define [67/PrimApp : bool] (PEQ [64/PureIf : uint256] 2))
    (define [68/PrimApp : bool] (IF_THEN_ELSE [66/PrimApp : bool] True [67/PrimApp : bool]))
    (define [69/PrimApp : bool] (IF_THEN_ELSE [65/PrimApp : bool] True [68/PrimApp : bool]))
    (assert! [69/PrimApp : bool])
    (define [70/PrimApp : bool] (PEQ [64/PureIf : uint256] 2))
    (define [71/PrimApp : bool] (PEQ [35/Declassify : uint256] 0))
    (define [72/PrimApp : bool] (PEQ [35/Declassify : uint256] 1))
    (define [73/PrimApp : bool] (PEQ [35/Declassify : uint256] 2))
    (define [74/PrimApp : bool] (IF_THEN_ELSE [72/PrimApp : bool] True [73/PrimApp : bool]))
    (define [75/PrimApp : bool] (IF_THEN_ELSE [71/PrimApp : bool] True [74/PrimApp : bool]))
    (define [76/PrimApp : bool] (IF_THEN_ELSE [70/PrimApp : bool] False True))
    (define [77/PrimApp : bool] (IF_THEN_ELSE [76/PrimApp : bool] True [75/PrimApp : bool]))
    (assert! [77/PrimApp : bool])
    (define [78/PrimApp : bool] (PEQ [64/PureIf : uint256] 0))
    (define [79/PrimApp : bool] (PEQ [26/Declassify : uint256] 0))
    (define [80/PrimApp : bool] (PEQ [26/Declassify : uint256] 1))
    (define [81/PrimApp : bool] (PEQ [26/Declassify : uint256] 2))
    (define [82/PrimApp : bool] (IF_THEN_ELSE [80/PrimApp : bool] True [81/PrimApp : bool]))
    (define [83/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] True [82/PrimApp : bool]))
    (define [84/PrimApp : bool] (IF_THEN_ELSE [78/PrimApp : bool] False True))
    (define [85/PrimApp : bool] (IF_THEN_ELSE [84/PrimApp : bool] True [83/PrimApp : bool]))
    (assert! [85/PrimApp : bool])
    (define [86/PrimApp : bool] (PEQ [64/PureIf : uint256] 2))
    (define [87/PrimApp : uint256] (MUL 2 [19/Declassify : uint256]))
    (define [88/PrimApp : uint256] (ADD [87/PrimApp : uint256] [20/Declassify : uint256]))
    (define [89/PrimApp : bool] (PEQ [64/PureIf : uint256] 0))
    (define [90/PrimApp : uint256] (MUL 2 [19/Declassify : uint256]))
    (define [91/PrimApp : uint256] (ADD [19/Declassify : uint256] [20/Declassify : uint256]))
    (define [92/PureIf : uint256] (IF_THEN_ELSE [89/PrimApp : bool] [20/Declassify : uint256] [91/PrimApp : uint256]))
    (define [93/PureIf : uint256] (IF_THEN_ELSE [89/PrimApp : bool] [90/PrimApp : uint256] [19/Declassify : uint256]))
    (define [94/PureIf : uint256] (IF_THEN_ELSE [86/PrimApp : bool] [88/PrimApp : uint256] [92/PureIf : uint256]))
    (define [95/PureIf : uint256] (IF_THEN_ELSE [86/PrimApp : bool] 0 [93/PureIf : uint256]))
    (transfer! A [94/PureIf : uint256])
    (transfer! B [95/PureIf : uint256])
    (halt!)])

(define-participant A 
  ([0/wager-amount : uint256] [1/escrow-amount : uint256] [2/A-hand : uint256])
  
  (define [4/PrimApp : bool] (PEQ [2/A-hand : uint256] 0))
  (define [5/PrimApp : bool] (PEQ [2/A-hand : uint256] 1))
  (define [6/PrimApp : bool] (PEQ [2/A-hand : uint256] 2))
  (define [7/PrimApp : bool] (IF_THEN_ELSE [5/PrimApp : bool] True [6/PrimApp : bool]))
  (define [8/PrimApp : bool] (IF_THEN_ELSE [4/PrimApp : bool] True [7/PrimApp : bool]))
  (assume! [8/PrimApp : bool])
  (define [14/PrimApp : uint256] (RANDOM))
  (define [15/PrimApp : bytes] (UINT256_TO_BYTES [14/PrimApp : uint256]))
  (define [16/PrimApp : bytes] (UINT256_TO_BYTES [2/A-hand : uint256]))
  (define [17/PrimApp : bytes] (BCAT [15/PrimApp : bytes] [16/PrimApp : bytes]))
  (define [18/PrimApp : uint256] (DIGEST [17/PrimApp : bytes]))
  (define [19/Declassify : uint256] [0/wager-amount : uint256])
  (define [20/Declassify : uint256] [1/escrow-amount : uint256])
  (define [21/Declassify : uint256] [18/PrimApp : uint256])
  (define [22/PrimApp : uint256] (ADD [19/Declassify : uint256] [20/Declassify : uint256]))
  (send! 0 () ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256]) [22/PrimApp : uint256])
  (define-values True () ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256]) [23/pay-amount : uint256] (recv! 0))
  (define [24/PrimApp : uint256] (ADD [19/Declassify : uint256] [20/Declassify : uint256]))
  (define [25/PrimApp : bool] (PEQ [23/pay-amount : uint256] [24/PrimApp : uint256]))
  (require! [25/PrimApp : bool])
  (define-values False ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256]) ([26/Declassify : uint256]) [27/pay-amount : uint256] (recv! 1))
  (define [28/PrimApp : bool] (PEQ [27/pay-amount : uint256] [19/Declassify : uint256]))
  (require! [28/PrimApp : bool])
  (define [29/PrimApp : bool] (PEQ [26/Declassify : uint256] 0))
  (define [30/PrimApp : bool] (PEQ [26/Declassify : uint256] 1))
  (define [31/PrimApp : bool] (PEQ [26/Declassify : uint256] 2))
  (define [32/PrimApp : bool] (IF_THEN_ELSE [30/PrimApp : bool] True [31/PrimApp : bool]))
  (define [33/PrimApp : bool] (IF_THEN_ELSE [29/PrimApp : bool] True [32/PrimApp : bool]))
  (require! [33/PrimApp : bool])
  (define [34/Declassify : uint256] [14/PrimApp : uint256])
  (define [35/Declassify : uint256] [2/A-hand : uint256])
  (send! 2 ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256] [26/Declassify : uint256]) ([34/Declassify : uint256] [35/Declassify : uint256]) 0)
  (define-values True ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256] [26/Declassify : uint256]) ([34/Declassify : uint256] [35/Declassify : uint256]) [36/pay-amount : uint256] (recv! 2))
  (define [37/PrimApp : bool] (PEQ [36/pay-amount : uint256] 0))
  (require! [37/PrimApp : bool])
  (define [38/PrimApp : bytes] (UINT256_TO_BYTES [34/Declassify : uint256]))
  (define [39/PrimApp : bytes] (UINT256_TO_BYTES [35/Declassify : uint256]))
  (define [40/PrimApp : bytes] (BCAT [38/PrimApp : bytes] [39/PrimApp : bytes]))
  (define [41/PrimApp : uint256] (DIGEST [40/PrimApp : bytes]))
  (define [42/PrimApp : bool] (PEQ [21/Declassify : uint256] [41/PrimApp : uint256]))
  (require! [42/PrimApp : bool])
  (define [43/PrimApp : bool] (PEQ [35/Declassify : uint256] 0))
  (define [44/PrimApp : bool] (PEQ [35/Declassify : uint256] 1))
  (define [45/PrimApp : bool] (PEQ [35/Declassify : uint256] 2))
  (define [46/PrimApp : bool] (IF_THEN_ELSE [44/PrimApp : bool] True [45/PrimApp : bool]))
  (define [47/PrimApp : bool] (IF_THEN_ELSE [43/PrimApp : bool] True [46/PrimApp : bool]))
  (require! [47/PrimApp : bool])
  (define [48/PrimApp : bool] (PEQ [35/Declassify : uint256] 0))
  (define [49/PrimApp : bool] (PEQ [35/Declassify : uint256] 1))
  (define [50/PrimApp : bool] (PEQ [35/Declassify : uint256] 2))
  (define [51/PrimApp : bool] (IF_THEN_ELSE [49/PrimApp : bool] True [50/PrimApp : bool]))
  (define [52/PrimApp : bool] (IF_THEN_ELSE [48/PrimApp : bool] True [51/PrimApp : bool]))
  (define [53/PrimApp : bool] (PEQ [26/Declassify : uint256] 0))
  (define [54/PrimApp : bool] (PEQ [26/Declassify : uint256] 1))
  (define [55/PrimApp : bool] (PEQ [26/Declassify : uint256] 2))
  (define [56/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] True [55/PrimApp : bool]))
  (define [57/PrimApp : bool] (IF_THEN_ELSE [53/PrimApp : bool] True [56/PrimApp : bool]))
  (define [58/PrimApp : bool] (IF_THEN_ELSE [52/PrimApp : bool] [57/PrimApp : bool] False))
  (define [59/PrimApp : uint256] (SUB 4 [26/Declassify : uint256]))
  (define [60/PrimApp : uint256] (ADD [35/Declassify : uint256] [59/PrimApp : uint256]))
  (define [61/PrimApp : uint256] (MOD [60/PrimApp : uint256] 3))
  (define [62/PureIf : uint256] (IF_THEN_ELSE [57/PrimApp : bool] 0 1))
  (define [63/PureIf : uint256] (IF_THEN_ELSE [52/PrimApp : bool] 2 [62/PureIf : uint256]))
  (define [64/PureIf : uint256] (IF_THEN_ELSE [58/PrimApp : bool] [61/PrimApp : uint256] [63/PureIf : uint256]))
  (define [65/PrimApp : bool] (PEQ [64/PureIf : uint256] 0))
  (define [66/PrimApp : bool] (PEQ [64/PureIf : uint256] 1))
  (define [67/PrimApp : bool] (PEQ [64/PureIf : uint256] 2))
  (define [68/PrimApp : bool] (IF_THEN_ELSE [66/PrimApp : bool] True [67/PrimApp : bool]))
  (define [69/PrimApp : bool] (IF_THEN_ELSE [65/PrimApp : bool] True [68/PrimApp : bool]))
  (assert! [69/PrimApp : bool])
  (define [70/PrimApp : bool] (PEQ [64/PureIf : uint256] 2))
  (define [71/PrimApp : bool] (PEQ [35/Declassify : uint256] 0))
  (define [72/PrimApp : bool] (PEQ [35/Declassify : uint256] 1))
  (define [73/PrimApp : bool] (PEQ [35/Declassify : uint256] 2))
  (define [74/PrimApp : bool] (IF_THEN_ELSE [72/PrimApp : bool] True [73/PrimApp : bool]))
  (define [75/PrimApp : bool] (IF_THEN_ELSE [71/PrimApp : bool] True [74/PrimApp : bool]))
  (define [76/PrimApp : bool] (IF_THEN_ELSE [70/PrimApp : bool] False True))
  (define [77/PrimApp : bool] (IF_THEN_ELSE [76/PrimApp : bool] True [75/PrimApp : bool]))
  (assert! [77/PrimApp : bool])
  (define [78/PrimApp : bool] (PEQ [64/PureIf : uint256] 0))
  (define [79/PrimApp : bool] (PEQ [26/Declassify : uint256] 0))
  (define [80/PrimApp : bool] (PEQ [26/Declassify : uint256] 1))
  (define [81/PrimApp : bool] (PEQ [26/Declassify : uint256] 2))
  (define [82/PrimApp : bool] (IF_THEN_ELSE [80/PrimApp : bool] True [81/PrimApp : bool]))
  (define [83/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] True [82/PrimApp : bool]))
  (define [84/PrimApp : bool] (IF_THEN_ELSE [78/PrimApp : bool] False True))
  (define [85/PrimApp : bool] (IF_THEN_ELSE [84/PrimApp : bool] True [83/PrimApp : bool]))
  (assert! [85/PrimApp : bool])
  (define [86/PrimApp : bool] (PEQ [64/PureIf : uint256] 2))
  (define [87/PrimApp : uint256] (MUL 2 [19/Declassify : uint256]))
  (define [88/PrimApp : uint256] (ADD [87/PrimApp : uint256] [20/Declassify : uint256]))
  (define [89/PrimApp : bool] (PEQ [64/PureIf : uint256] 0))
  (define [90/PrimApp : uint256] (MUL 2 [19/Declassify : uint256]))
  (define [91/PrimApp : uint256] (ADD [19/Declassify : uint256] [20/Declassify : uint256]))
  (define [92/PureIf : uint256] (IF_THEN_ELSE [89/PrimApp : bool] [20/Declassify : uint256] [91/PrimApp : uint256]))
  (define [93/PureIf : uint256] (IF_THEN_ELSE [89/PrimApp : bool] [90/PrimApp : uint256] [19/Declassify : uint256]))
  (define [94/PureIf : uint256] (IF_THEN_ELSE [86/PrimApp : bool] [88/PrimApp : uint256] [92/PureIf : uint256]))
  (define [95/PureIf : uint256] (IF_THEN_ELSE [86/PrimApp : bool] 0 [93/PureIf : uint256]))
  (define [96/PrimApp : bool] (PEQ [64/PureIf : uint256] 2))
  (possible? [96/PrimApp : bool])
  (define [97/PrimApp : bool] (PEQ [64/PureIf : uint256] 0))
  (possible? [97/PrimApp : bool])
  [64/PureIf : uint256])

(define-participant B 
  ([3/B-hand : uint256])
  
  (define [9/PrimApp : bool] (PEQ [3/B-hand : uint256] 0))
  (define [10/PrimApp : bool] (PEQ [3/B-hand : uint256] 1))
  (define [11/PrimApp : bool] (PEQ [3/B-hand : uint256] 2))
  (define [12/PrimApp : bool] (IF_THEN_ELSE [10/PrimApp : bool] True [11/PrimApp : bool]))
  (define [13/PrimApp : bool] (IF_THEN_ELSE [9/PrimApp : bool] True [12/PrimApp : bool]))
  (assume! [13/PrimApp : bool])
  (define-values False () ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256]) [23/pay-amount : uint256] (recv! 0))
  (define [24/PrimApp : uint256] (ADD [19/Declassify : uint256] [20/Declassify : uint256]))
  (define [25/PrimApp : bool] (PEQ [23/pay-amount : uint256] [24/PrimApp : uint256]))
  (require! [25/PrimApp : bool])
  (define [26/Declassify : uint256] [3/B-hand : uint256])
  (send! 1 ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256]) ([26/Declassify : uint256]) [19/Declassify : uint256])
  (define-values True ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256]) ([26/Declassify : uint256]) [27/pay-amount : uint256] (recv! 1))
  (define [28/PrimApp : bool] (PEQ [27/pay-amount : uint256] [19/Declassify : uint256]))
  (require! [28/PrimApp : bool])
  (define [29/PrimApp : bool] (PEQ [26/Declassify : uint256] 0))
  (define [30/PrimApp : bool] (PEQ [26/Declassify : uint256] 1))
  (define [31/PrimApp : bool] (PEQ [26/Declassify : uint256] 2))
  (define [32/PrimApp : bool] (IF_THEN_ELSE [30/PrimApp : bool] True [31/PrimApp : bool]))
  (define [33/PrimApp : bool] (IF_THEN_ELSE [29/PrimApp : bool] True [32/PrimApp : bool]))
  (require! [33/PrimApp : bool])
  (define-values False ([19/Declassify : uint256] [20/Declassify : uint256] [21/Declassify : uint256] [26/Declassify : uint256]) ([34/Declassify : uint256] [35/Declassify : uint256]) [36/pay-amount : uint256] (recv! 2))
  (define [37/PrimApp : bool] (PEQ [36/pay-amount : uint256] 0))
  (require! [37/PrimApp : bool])
  (define [38/PrimApp : bytes] (UINT256_TO_BYTES [34/Declassify : uint256]))
  (define [39/PrimApp : bytes] (UINT256_TO_BYTES [35/Declassify : uint256]))
  (define [40/PrimApp : bytes] (BCAT [38/PrimApp : bytes] [39/PrimApp : bytes]))
  (define [41/PrimApp : uint256] (DIGEST [40/PrimApp : bytes]))
  (define [42/PrimApp : bool] (PEQ [21/Declassify : uint256] [41/PrimApp : uint256]))
  (require! [42/PrimApp : bool])
  (define [43/PrimApp : bool] (PEQ [35/Declassify : uint256] 0))
  (define [44/PrimApp : bool] (PEQ [35/Declassify : uint256] 1))
  (define [45/PrimApp : bool] (PEQ [35/Declassify : uint256] 2))
  (define [46/PrimApp : bool] (IF_THEN_ELSE [44/PrimApp : bool] True [45/PrimApp : bool]))
  (define [47/PrimApp : bool] (IF_THEN_ELSE [43/PrimApp : bool] True [46/PrimApp : bool]))
  (require! [47/PrimApp : bool])
  (define [48/PrimApp : bool] (PEQ [35/Declassify : uint256] 0))
  (define [49/PrimApp : bool] (PEQ [35/Declassify : uint256] 1))
  (define [50/PrimApp : bool] (PEQ [35/Declassify : uint256] 2))
  (define [51/PrimApp : bool] (IF_THEN_ELSE [49/PrimApp : bool] True [50/PrimApp : bool]))
  (define [52/PrimApp : bool] (IF_THEN_ELSE [48/PrimApp : bool] True [51/PrimApp : bool]))
  (define [53/PrimApp : bool] (PEQ [26/Declassify : uint256] 0))
  (define [54/PrimApp : bool] (PEQ [26/Declassify : uint256] 1))
  (define [55/PrimApp : bool] (PEQ [26/Declassify : uint256] 2))
  (define [56/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] True [55/PrimApp : bool]))
  (define [57/PrimApp : bool] (IF_THEN_ELSE [53/PrimApp : bool] True [56/PrimApp : bool]))
  (define [58/PrimApp : bool] (IF_THEN_ELSE [52/PrimApp : bool] [57/PrimApp : bool] False))
  (define [59/PrimApp : uint256] (SUB 4 [26/Declassify : uint256]))
  (define [60/PrimApp : uint256] (ADD [35/Declassify : uint256] [59/PrimApp : uint256]))
  (define [61/PrimApp : uint256] (MOD [60/PrimApp : uint256] 3))
  (define [62/PureIf : uint256] (IF_THEN_ELSE [57/PrimApp : bool] 0 1))
  (define [63/PureIf : uint256] (IF_THEN_ELSE [52/PrimApp : bool] 2 [62/PureIf : uint256]))
  (define [64/PureIf : uint256] (IF_THEN_ELSE [58/PrimApp : bool] [61/PrimApp : uint256] [63/PureIf : uint256]))
  (define [65/PrimApp : bool] (PEQ [64/PureIf : uint256] 0))
  (define [66/PrimApp : bool] (PEQ [64/PureIf : uint256] 1))
  (define [67/PrimApp : bool] (PEQ [64/PureIf : uint256] 2))
  (define [68/PrimApp : bool] (IF_THEN_ELSE [66/PrimApp : bool] True [67/PrimApp : bool]))
  (define [69/PrimApp : bool] (IF_THEN_ELSE [65/PrimApp : bool] True [68/PrimApp : bool]))
  (assert! [69/PrimApp : bool])
  (define [70/PrimApp : bool] (PEQ [64/PureIf : uint256] 2))
  (define [71/PrimApp : bool] (PEQ [35/Declassify : uint256] 0))
  (define [72/PrimApp : bool] (PEQ [35/Declassify : uint256] 1))
  (define [73/PrimApp : bool] (PEQ [35/Declassify : uint256] 2))
  (define [74/PrimApp : bool] (IF_THEN_ELSE [72/PrimApp : bool] True [73/PrimApp : bool]))
  (define [75/PrimApp : bool] (IF_THEN_ELSE [71/PrimApp : bool] True [74/PrimApp : bool]))
  (define [76/PrimApp : bool] (IF_THEN_ELSE [70/PrimApp : bool] False True))
  (define [77/PrimApp : bool] (IF_THEN_ELSE [76/PrimApp : bool] True [75/PrimApp : bool]))
  (assert! [77/PrimApp : bool])
  (define [78/PrimApp : bool] (PEQ [64/PureIf : uint256] 0))
  (define [79/PrimApp : bool] (PEQ [26/Declassify : uint256] 0))
  (define [80/PrimApp : bool] (PEQ [26/Declassify : uint256] 1))
  (define [81/PrimApp : bool] (PEQ [26/Declassify : uint256] 2))
  (define [82/PrimApp : bool] (IF_THEN_ELSE [80/PrimApp : bool] True [81/PrimApp : bool]))
  (define [83/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] True [82/PrimApp : bool]))
  (define [84/PrimApp : bool] (IF_THEN_ELSE [78/PrimApp : bool] False True))
  (define [85/PrimApp : bool] (IF_THEN_ELSE [84/PrimApp : bool] True [83/PrimApp : bool]))
  (assert! [85/PrimApp : bool])
  (define [86/PrimApp : bool] (PEQ [64/PureIf : uint256] 2))
  (define [87/PrimApp : uint256] (MUL 2 [19/Declassify : uint256]))
  (define [88/PrimApp : uint256] (ADD [87/PrimApp : uint256] [20/Declassify : uint256]))
  (define [89/PrimApp : bool] (PEQ [64/PureIf : uint256] 0))
  (define [90/PrimApp : uint256] (MUL 2 [19/Declassify : uint256]))
  (define [91/PrimApp : uint256] (ADD [19/Declassify : uint256] [20/Declassify : uint256]))
  (define [92/PureIf : uint256] (IF_THEN_ELSE [89/PrimApp : bool] [20/Declassify : uint256] [91/PrimApp : uint256]))
  (define [93/PureIf : uint256] (IF_THEN_ELSE [89/PrimApp : bool] [90/PrimApp : uint256] [19/Declassify : uint256]))
  (define [94/PureIf : uint256] (IF_THEN_ELSE [86/PrimApp : bool] [88/PrimApp : uint256] [92/PureIf : uint256]))
  (define [95/PureIf : uint256] (IF_THEN_ELSE [86/PrimApp : bool] 0 [93/PureIf : uint256]))
  (define [96/PrimApp : bool] (PEQ [64/PureIf : uint256] 2))
  (possible? [96/PrimApp : bool])
  (define [97/PrimApp : bool] (PEQ [64/PureIf : uint256] 0))
  (possible? [97/PrimApp : bool])
  [64/PureIf : uint256])