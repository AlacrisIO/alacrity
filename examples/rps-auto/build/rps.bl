#lang alacrity/bl

(define-contract 
  #:participants (A B)
  [0 A () ([2/Declassify : uint256] [3/Declassify : uint256]) [6/pay-amount : uint256] 
    (define [7/PrimApp : uint256] (ADD [2/Declassify : uint256] [3/Declassify : uint256]))
    (define [8/PrimApp : bool] (PEQ [6/pay-amount : uint256] [7/PrimApp : uint256]))
    (require! [8/PrimApp : bool])
    (wait! 1 ([2/Declassify : uint256] [3/Declassify : uint256]))]
  [1 B ([2/Declassify : uint256] [3/Declassify : uint256]) () [10/pay-amount : uint256] 
    (define [11/PrimApp : bool] (PEQ [10/pay-amount : uint256] [2/Declassify : uint256]))
    (require! [11/PrimApp : bool])
    (wait! 2 ([2/Declassify : uint256] [3/Declassify : uint256]))]
  [2 A ([2/Declassify : uint256] [3/Declassify : uint256]) ([28/Declassify : uint256]) [30/pay-amount : uint256] 
    (define [31/PrimApp : bool] (PEQ [30/pay-amount : uint256] 0))
    (require! [31/PrimApp : bool])
    (wait! 3 ([2/Declassify : uint256] [3/Declassify : uint256] [28/Declassify : uint256]))]
  [3 B ([2/Declassify : uint256] [3/Declassify : uint256] [28/Declassify : uint256]) ([43/Declassify : uint256]) [45/pay-amount : uint256] 
    (define [46/PrimApp : bool] (PEQ [45/pay-amount : uint256] 0))
    (require! [46/PrimApp : bool])
    (define [47/PrimApp : bool] (PLE 0 [43/Declassify : uint256]))
    (define [48/PrimApp : bool] (PLT [43/Declassify : uint256] 3))
    (define [49/PrimApp : bool] (IF_THEN_ELSE [47/PrimApp : bool] [48/PrimApp : bool] False))
    (require! [49/PrimApp : bool])
    (wait! 4 ([2/Declassify : uint256] [3/Declassify : uint256] [28/Declassify : uint256] [43/Declassify : uint256]))]
  [4 A ([2/Declassify : uint256] [3/Declassify : uint256] [28/Declassify : uint256] [43/Declassify : uint256]) ([50/Declassify : uint256] [51/Declassify : uint256]) [53/pay-amount : uint256] 
    (define [54/PrimApp : bool] (PEQ [53/pay-amount : uint256] 0))
    (require! [54/PrimApp : bool])
    (define [55/PrimApp : bytes] (UINT256_TO_BYTES [50/Declassify : uint256]))
    (define [56/PrimApp : bytes] (UINT256_TO_BYTES [51/Declassify : uint256]))
    (define [57/PrimApp : bytes] (BCAT [55/PrimApp : bytes] [56/PrimApp : bytes]))
    (define [58/PrimApp : uint256] (DIGEST [57/PrimApp : bytes]))
    (define [59/PrimApp : bool] (PEQ [28/Declassify : uint256] [58/PrimApp : uint256]))
    (require! [59/PrimApp : bool])
    (define [60/PrimApp : bool] (PLE 0 [51/Declassify : uint256]))
    (define [61/PrimApp : bool] (PLT [51/Declassify : uint256] 3))
    (define [62/PrimApp : bool] (IF_THEN_ELSE [60/PrimApp : bool] [61/PrimApp : bool] False))
    (require! [62/PrimApp : bool])
    (define [63/PrimApp : bool] (PLE 0 [51/Declassify : uint256]))
    (define [64/PrimApp : bool] (PLT [51/Declassify : uint256] 3))
    (define [65/PrimApp : bool] (IF_THEN_ELSE [63/PrimApp : bool] [64/PrimApp : bool] False))
    (define [66/PrimApp : bool] (PLE 0 [43/Declassify : uint256]))
    (define [67/PrimApp : bool] (PLT [43/Declassify : uint256] 3))
    (define [68/PrimApp : bool] (IF_THEN_ELSE [66/PrimApp : bool] [67/PrimApp : bool] False))
    (define [69/PrimApp : bool] (IF_THEN_ELSE [65/PrimApp : bool] [68/PrimApp : bool] False))
    (define [70/PrimApp : uint256] (SUB 4 [43/Declassify : uint256]))
    (define [71/PrimApp : uint256] (ADD [51/Declassify : uint256] [70/PrimApp : uint256]))
    (define [72/PrimApp : uint256] (MOD [71/PrimApp : uint256] 3))
    (define [73/PureIf : uint256] (IF_THEN_ELSE [68/PrimApp : bool] 0 1))
    (define [74/PureIf : uint256] (IF_THEN_ELSE [65/PrimApp : bool] 2 [73/PureIf : uint256]))
    (define [75/PureIf : uint256] (IF_THEN_ELSE [69/PrimApp : bool] [72/PrimApp : uint256] [74/PureIf : uint256]))
    (define [76/PrimApp : bool] (PLE 0 [75/PureIf : uint256]))
    (define [77/PrimApp : bool] (PLT [75/PureIf : uint256] 3))
    (define [78/PrimApp : bool] (IF_THEN_ELSE [76/PrimApp : bool] [77/PrimApp : bool] False))
    (assert! [78/PrimApp : bool])
    (define [79/PrimApp : bool] (PEQ [75/PureIf : uint256] 2))
    (define [80/PrimApp : bool] (PLE 0 [51/Declassify : uint256]))
    (define [81/PrimApp : bool] (PLT [51/Declassify : uint256] 3))
    (define [82/PrimApp : bool] (IF_THEN_ELSE [80/PrimApp : bool] [81/PrimApp : bool] False))
    (define [83/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] False True))
    (define [84/PrimApp : bool] (IF_THEN_ELSE [83/PrimApp : bool] True [82/PrimApp : bool]))
    (assert! [84/PrimApp : bool])
    (define [85/PrimApp : bool] (PEQ [75/PureIf : uint256] 0))
    (define [86/PrimApp : bool] (PLE 0 [43/Declassify : uint256]))
    (define [87/PrimApp : bool] (PLT [43/Declassify : uint256] 3))
    (define [88/PrimApp : bool] (IF_THEN_ELSE [86/PrimApp : bool] [87/PrimApp : bool] False))
    (define [89/PrimApp : bool] (IF_THEN_ELSE [85/PrimApp : bool] False True))
    (define [90/PrimApp : bool] (IF_THEN_ELSE [89/PrimApp : bool] True [88/PrimApp : bool]))
    (assert! [90/PrimApp : bool])
    (define [91/PrimApp : bool] (PEQ [75/PureIf : uint256] 2))
    (define [92/PrimApp : bool] (PEQ [51/Declassify : uint256] 0))
    (define [93/PrimApp : bool] (IF_THEN_ELSE [92/PrimApp : bool] [91/PrimApp : bool] False))
    (possible? [93/PrimApp : bool])
    (define [94/PrimApp : bool] (PEQ [51/Declassify : uint256] 1))
    (define [95/PrimApp : bool] (IF_THEN_ELSE [94/PrimApp : bool] [91/PrimApp : bool] False))
    (possible? [95/PrimApp : bool])
    (define [96/PrimApp : bool] (PEQ [51/Declassify : uint256] 2))
    (define [97/PrimApp : bool] (IF_THEN_ELSE [96/PrimApp : bool] [91/PrimApp : bool] False))
    (possible? [97/PrimApp : bool])
    (define [98/PrimApp : bool] (PEQ [75/PureIf : uint256] 0))
    (define [99/PrimApp : bool] (PEQ [43/Declassify : uint256] 0))
    (define [100/PrimApp : bool] (IF_THEN_ELSE [99/PrimApp : bool] [98/PrimApp : bool] False))
    (possible? [100/PrimApp : bool])
    (define [101/PrimApp : bool] (PEQ [43/Declassify : uint256] 1))
    (define [102/PrimApp : bool] (IF_THEN_ELSE [101/PrimApp : bool] [98/PrimApp : bool] False))
    (possible? [102/PrimApp : bool])
    (define [103/PrimApp : bool] (PEQ [43/Declassify : uint256] 2))
    (define [104/PrimApp : bool] (IF_THEN_ELSE [103/PrimApp : bool] [98/PrimApp : bool] False))
    (possible? [104/PrimApp : bool])
    (define [105/PrimApp : bool] (PEQ [75/PureIf : uint256] 2))
    (define [106/PrimApp : uint256] (MUL 2 [2/Declassify : uint256]))
    (define [107/PrimApp : bool] (PEQ [75/PureIf : uint256] 0))
    (define [108/PrimApp : uint256] (MUL 2 [2/Declassify : uint256]))
    (define [109/PureIf : uint256] (IF_THEN_ELSE [107/PrimApp : bool] 0 [2/Declassify : uint256]))
    (define [110/PureIf : uint256] (IF_THEN_ELSE [107/PrimApp : bool] [108/PrimApp : uint256] [2/Declassify : uint256]))
    (define [111/PureIf : uint256] (IF_THEN_ELSE [105/PrimApp : bool] [106/PrimApp : uint256] [109/PureIf : uint256]))
    (define [112/PureIf : uint256] (IF_THEN_ELSE [105/PrimApp : bool] 0 [110/PureIf : uint256]))
    (define [113/PrimApp : uint256] (ADD [3/Declassify : uint256] [111/PureIf : uint256]))
    (transfer! A [113/PrimApp : uint256])
    (transfer! B [112/PureIf : uint256])
    (halt!)])

(define-participant A 
  ([0/wagerAmount : uint256] [1/escrowAmount : uint256])
  
  (define [2/Declassify : uint256] [0/wagerAmount : uint256])
  (define [3/Declassify : uint256] [1/escrowAmount : uint256])
  (define [4/PrimApp : bytes] (INTERACT "params"))
  (define [5/PrimApp : uint256] (ADD [2/Declassify : uint256] [3/Declassify : uint256]))
  (send! 0 () ([2/Declassify : uint256] [3/Declassify : uint256]) [5/PrimApp : uint256])
  (define-values True () ([2/Declassify : uint256] [3/Declassify : uint256]) [6/pay-amount : uint256] (recv! 0))
  (define [7/PrimApp : uint256] (ADD [2/Declassify : uint256] [3/Declassify : uint256]))
  (define [8/PrimApp : bool] (PEQ [6/pay-amount : uint256] [7/PrimApp : uint256]))
  (require! [8/PrimApp : bool])
  (define-values False ([2/Declassify : uint256] [3/Declassify : uint256]) () [10/pay-amount : uint256] (recv! 1))
  (define [11/PrimApp : bool] (PEQ [10/pay-amount : uint256] [2/Declassify : uint256]))
  (require! [11/PrimApp : bool])
  (define [12/PrimApp : bytes] (INTERACT "getHand"))
  (define [13/PrimApp : bool] (BYTES_EQ [12/PrimApp : bytes] "ROCK"))
  (define [14/PrimApp : bool] (BYTES_EQ [12/PrimApp : bytes] "PAPER"))
  (define [15/PrimApp : bool] (BYTES_EQ [12/PrimApp : bytes] "SCISSORS"))
  (define [16/PrimApp : bool] (IF_THEN_ELSE [14/PrimApp : bool] True [15/PrimApp : bool]))
  (define [17/PrimApp : bool] (IF_THEN_ELSE [13/PrimApp : bool] True [16/PrimApp : bool]))
  (assume! [17/PrimApp : bool])
  (define [18/PureIf : uint256] (IF_THEN_ELSE [14/PrimApp : bool] 1 2))
  (define [19/PureIf : uint256] (IF_THEN_ELSE [13/PrimApp : bool] 0 [18/PureIf : uint256]))
  (define [20/PrimApp : bool] (PLE 0 [19/PureIf : uint256]))
  (define [21/PrimApp : bool] (PLT [19/PureIf : uint256] 3))
  (define [22/PrimApp : bool] (IF_THEN_ELSE [20/PrimApp : bool] [21/PrimApp : bool] False))
  (assert! [22/PrimApp : bool])
  (define [23/PrimApp : uint256] (RANDOM))
  (define [24/PrimApp : bytes] (UINT256_TO_BYTES [23/PrimApp : uint256]))
  (define [25/PrimApp : bytes] (UINT256_TO_BYTES [19/PureIf : uint256]))
  (define [26/PrimApp : bytes] (BCAT [24/PrimApp : bytes] [25/PrimApp : bytes]))
  (define [27/PrimApp : uint256] (DIGEST [26/PrimApp : bytes]))
  (define [28/Declassify : uint256] [27/PrimApp : uint256])
  (define [29/PrimApp : bytes] (INTERACT "commits"))
  (send! 2 ([2/Declassify : uint256] [3/Declassify : uint256]) ([28/Declassify : uint256]) 0)
  (define-values True ([2/Declassify : uint256] [3/Declassify : uint256]) ([28/Declassify : uint256]) [30/pay-amount : uint256] (recv! 2))
  (define [31/PrimApp : bool] (PEQ [30/pay-amount : uint256] 0))
  (require! [31/PrimApp : bool])
  (define-values False ([2/Declassify : uint256] [3/Declassify : uint256] [28/Declassify : uint256]) ([43/Declassify : uint256]) [45/pay-amount : uint256] (recv! 3))
  (define [46/PrimApp : bool] (PEQ [45/pay-amount : uint256] 0))
  (require! [46/PrimApp : bool])
  (define [47/PrimApp : bool] (PLE 0 [43/Declassify : uint256]))
  (define [48/PrimApp : bool] (PLT [43/Declassify : uint256] 3))
  (define [49/PrimApp : bool] (IF_THEN_ELSE [47/PrimApp : bool] [48/PrimApp : bool] False))
  (require! [49/PrimApp : bool])
  (define [50/Declassify : uint256] [23/PrimApp : uint256])
  (define [51/Declassify : uint256] [19/PureIf : uint256])
  (define [52/PrimApp : bytes] (INTERACT "reveals"))
  (send! 4 ([2/Declassify : uint256] [3/Declassify : uint256] [28/Declassify : uint256] [43/Declassify : uint256]) ([50/Declassify : uint256] [51/Declassify : uint256]) 0)
  (define-values True ([2/Declassify : uint256] [3/Declassify : uint256] [28/Declassify : uint256] [43/Declassify : uint256]) ([50/Declassify : uint256] [51/Declassify : uint256]) [53/pay-amount : uint256] (recv! 4))
  (define [54/PrimApp : bool] (PEQ [53/pay-amount : uint256] 0))
  (require! [54/PrimApp : bool])
  (define [55/PrimApp : bytes] (UINT256_TO_BYTES [50/Declassify : uint256]))
  (define [56/PrimApp : bytes] (UINT256_TO_BYTES [51/Declassify : uint256]))
  (define [57/PrimApp : bytes] (BCAT [55/PrimApp : bytes] [56/PrimApp : bytes]))
  (define [58/PrimApp : uint256] (DIGEST [57/PrimApp : bytes]))
  (define [59/PrimApp : bool] (PEQ [28/Declassify : uint256] [58/PrimApp : uint256]))
  (require! [59/PrimApp : bool])
  (define [60/PrimApp : bool] (PLE 0 [51/Declassify : uint256]))
  (define [61/PrimApp : bool] (PLT [51/Declassify : uint256] 3))
  (define [62/PrimApp : bool] (IF_THEN_ELSE [60/PrimApp : bool] [61/PrimApp : bool] False))
  (require! [62/PrimApp : bool])
  (define [63/PrimApp : bool] (PLE 0 [51/Declassify : uint256]))
  (define [64/PrimApp : bool] (PLT [51/Declassify : uint256] 3))
  (define [65/PrimApp : bool] (IF_THEN_ELSE [63/PrimApp : bool] [64/PrimApp : bool] False))
  (define [66/PrimApp : bool] (PLE 0 [43/Declassify : uint256]))
  (define [67/PrimApp : bool] (PLT [43/Declassify : uint256] 3))
  (define [68/PrimApp : bool] (IF_THEN_ELSE [66/PrimApp : bool] [67/PrimApp : bool] False))
  (define [69/PrimApp : bool] (IF_THEN_ELSE [65/PrimApp : bool] [68/PrimApp : bool] False))
  (define [70/PrimApp : uint256] (SUB 4 [43/Declassify : uint256]))
  (define [71/PrimApp : uint256] (ADD [51/Declassify : uint256] [70/PrimApp : uint256]))
  (define [72/PrimApp : uint256] (MOD [71/PrimApp : uint256] 3))
  (define [73/PureIf : uint256] (IF_THEN_ELSE [68/PrimApp : bool] 0 1))
  (define [74/PureIf : uint256] (IF_THEN_ELSE [65/PrimApp : bool] 2 [73/PureIf : uint256]))
  (define [75/PureIf : uint256] (IF_THEN_ELSE [69/PrimApp : bool] [72/PrimApp : uint256] [74/PureIf : uint256]))
  (define [76/PrimApp : bool] (PLE 0 [75/PureIf : uint256]))
  (define [77/PrimApp : bool] (PLT [75/PureIf : uint256] 3))
  (define [78/PrimApp : bool] (IF_THEN_ELSE [76/PrimApp : bool] [77/PrimApp : bool] False))
  (assert! [78/PrimApp : bool])
  (define [79/PrimApp : bool] (PEQ [75/PureIf : uint256] 2))
  (define [80/PrimApp : bool] (PLE 0 [51/Declassify : uint256]))
  (define [81/PrimApp : bool] (PLT [51/Declassify : uint256] 3))
  (define [82/PrimApp : bool] (IF_THEN_ELSE [80/PrimApp : bool] [81/PrimApp : bool] False))
  (define [83/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] False True))
  (define [84/PrimApp : bool] (IF_THEN_ELSE [83/PrimApp : bool] True [82/PrimApp : bool]))
  (assert! [84/PrimApp : bool])
  (define [85/PrimApp : bool] (PEQ [75/PureIf : uint256] 0))
  (define [86/PrimApp : bool] (PLE 0 [43/Declassify : uint256]))
  (define [87/PrimApp : bool] (PLT [43/Declassify : uint256] 3))
  (define [88/PrimApp : bool] (IF_THEN_ELSE [86/PrimApp : bool] [87/PrimApp : bool] False))
  (define [89/PrimApp : bool] (IF_THEN_ELSE [85/PrimApp : bool] False True))
  (define [90/PrimApp : bool] (IF_THEN_ELSE [89/PrimApp : bool] True [88/PrimApp : bool]))
  (assert! [90/PrimApp : bool])
  (define [91/PrimApp : bool] (PEQ [75/PureIf : uint256] 2))
  (define [92/PrimApp : bool] (PEQ [51/Declassify : uint256] 0))
  (define [93/PrimApp : bool] (IF_THEN_ELSE [92/PrimApp : bool] [91/PrimApp : bool] False))
  (possible? [93/PrimApp : bool])
  (define [94/PrimApp : bool] (PEQ [51/Declassify : uint256] 1))
  (define [95/PrimApp : bool] (IF_THEN_ELSE [94/PrimApp : bool] [91/PrimApp : bool] False))
  (possible? [95/PrimApp : bool])
  (define [96/PrimApp : bool] (PEQ [51/Declassify : uint256] 2))
  (define [97/PrimApp : bool] (IF_THEN_ELSE [96/PrimApp : bool] [91/PrimApp : bool] False))
  (possible? [97/PrimApp : bool])
  (define [98/PrimApp : bool] (PEQ [75/PureIf : uint256] 0))
  (define [99/PrimApp : bool] (PEQ [43/Declassify : uint256] 0))
  (define [100/PrimApp : bool] (IF_THEN_ELSE [99/PrimApp : bool] [98/PrimApp : bool] False))
  (possible? [100/PrimApp : bool])
  (define [101/PrimApp : bool] (PEQ [43/Declassify : uint256] 1))
  (define [102/PrimApp : bool] (IF_THEN_ELSE [101/PrimApp : bool] [98/PrimApp : bool] False))
  (possible? [102/PrimApp : bool])
  (define [103/PrimApp : bool] (PEQ [43/Declassify : uint256] 2))
  (define [104/PrimApp : bool] (IF_THEN_ELSE [103/PrimApp : bool] [98/PrimApp : bool] False))
  (possible? [104/PrimApp : bool])
  (define [105/PrimApp : bool] (PEQ [75/PureIf : uint256] 2))
  (define [106/PrimApp : uint256] (MUL 2 [2/Declassify : uint256]))
  (define [107/PrimApp : bool] (PEQ [75/PureIf : uint256] 0))
  (define [108/PrimApp : uint256] (MUL 2 [2/Declassify : uint256]))
  (define [109/PureIf : uint256] (IF_THEN_ELSE [107/PrimApp : bool] 0 [2/Declassify : uint256]))
  (define [110/PureIf : uint256] (IF_THEN_ELSE [107/PrimApp : bool] [108/PrimApp : uint256] [2/Declassify : uint256]))
  (define [111/PureIf : uint256] (IF_THEN_ELSE [105/PrimApp : bool] [106/PrimApp : uint256] [109/PureIf : uint256]))
  (define [112/PureIf : uint256] (IF_THEN_ELSE [105/PrimApp : bool] 0 [110/PureIf : uint256]))
  (define [113/PrimApp : uint256] (ADD [3/Declassify : uint256] [111/PureIf : uint256]))
  (define [114/PrimApp : bytes] (INTERACT "outcome"))
  (define [115/PrimApp : bool] (PLE 0 [75/PureIf : uint256]))
  (define [116/PrimApp : bool] (PLT [75/PureIf : uint256] 3))
  (define [117/PrimApp : bool] (IF_THEN_ELSE [115/PrimApp : bool] [116/PrimApp : bool] False))
  (require! [117/PrimApp : bool])
  (define [118/PrimApp : bool] (PEQ [75/PureIf : uint256] 0))
  (define [119/PrimApp : bool] (PEQ [75/PureIf : uint256] 1))
  (define [120/PureIf : bytes] (IF_THEN_ELSE [119/PrimApp : bool] "Draw" "Alice wins"))
  (define [121/PureIf : bytes] (IF_THEN_ELSE [118/PrimApp : bool] "Bob wins" [120/PureIf : bytes]))
  [121/PureIf : bytes])

(define-participant B 
  ()
  
  (define-values False () ([2/Declassify : uint256] [3/Declassify : uint256]) [6/pay-amount : uint256] (recv! 0))
  (define [7/PrimApp : uint256] (ADD [2/Declassify : uint256] [3/Declassify : uint256]))
  (define [8/PrimApp : bool] (PEQ [6/pay-amount : uint256] [7/PrimApp : uint256]))
  (require! [8/PrimApp : bool])
  (define [9/PrimApp : bytes] (INTERACT "accepts"))
  (send! 1 ([2/Declassify : uint256] [3/Declassify : uint256]) () [2/Declassify : uint256])
  (define-values True ([2/Declassify : uint256] [3/Declassify : uint256]) () [10/pay-amount : uint256] (recv! 1))
  (define [11/PrimApp : bool] (PEQ [10/pay-amount : uint256] [2/Declassify : uint256]))
  (require! [11/PrimApp : bool])
  (define-values False ([2/Declassify : uint256] [3/Declassify : uint256]) ([28/Declassify : uint256]) [30/pay-amount : uint256] (recv! 2))
  (define [31/PrimApp : bool] (PEQ [30/pay-amount : uint256] 0))
  (require! [31/PrimApp : bool])
  (define [32/PrimApp : bytes] (INTERACT "getHand"))
  (define [33/PrimApp : bool] (BYTES_EQ [32/PrimApp : bytes] "ROCK"))
  (define [34/PrimApp : bool] (BYTES_EQ [32/PrimApp : bytes] "PAPER"))
  (define [35/PrimApp : bool] (BYTES_EQ [32/PrimApp : bytes] "SCISSORS"))
  (define [36/PrimApp : bool] (IF_THEN_ELSE [34/PrimApp : bool] True [35/PrimApp : bool]))
  (define [37/PrimApp : bool] (IF_THEN_ELSE [33/PrimApp : bool] True [36/PrimApp : bool]))
  (assume! [37/PrimApp : bool])
  (define [38/PureIf : uint256] (IF_THEN_ELSE [34/PrimApp : bool] 1 2))
  (define [39/PureIf : uint256] (IF_THEN_ELSE [33/PrimApp : bool] 0 [38/PureIf : uint256]))
  (define [40/PrimApp : bool] (PLE 0 [39/PureIf : uint256]))
  (define [41/PrimApp : bool] (PLT [39/PureIf : uint256] 3))
  (define [42/PrimApp : bool] (IF_THEN_ELSE [40/PrimApp : bool] [41/PrimApp : bool] False))
  (assert! [42/PrimApp : bool])
  (define [43/Declassify : uint256] [39/PureIf : uint256])
  (define [44/PrimApp : bytes] (INTERACT "shows"))
  (send! 3 ([2/Declassify : uint256] [3/Declassify : uint256] [28/Declassify : uint256]) ([43/Declassify : uint256]) 0)
  (define-values True ([2/Declassify : uint256] [3/Declassify : uint256] [28/Declassify : uint256]) ([43/Declassify : uint256]) [45/pay-amount : uint256] (recv! 3))
  (define [46/PrimApp : bool] (PEQ [45/pay-amount : uint256] 0))
  (require! [46/PrimApp : bool])
  (define [47/PrimApp : bool] (PLE 0 [43/Declassify : uint256]))
  (define [48/PrimApp : bool] (PLT [43/Declassify : uint256] 3))
  (define [49/PrimApp : bool] (IF_THEN_ELSE [47/PrimApp : bool] [48/PrimApp : bool] False))
  (require! [49/PrimApp : bool])
  (define-values False ([2/Declassify : uint256] [3/Declassify : uint256] [28/Declassify : uint256] [43/Declassify : uint256]) ([50/Declassify : uint256] [51/Declassify : uint256]) [53/pay-amount : uint256] (recv! 4))
  (define [54/PrimApp : bool] (PEQ [53/pay-amount : uint256] 0))
  (require! [54/PrimApp : bool])
  (define [55/PrimApp : bytes] (UINT256_TO_BYTES [50/Declassify : uint256]))
  (define [56/PrimApp : bytes] (UINT256_TO_BYTES [51/Declassify : uint256]))
  (define [57/PrimApp : bytes] (BCAT [55/PrimApp : bytes] [56/PrimApp : bytes]))
  (define [58/PrimApp : uint256] (DIGEST [57/PrimApp : bytes]))
  (define [59/PrimApp : bool] (PEQ [28/Declassify : uint256] [58/PrimApp : uint256]))
  (require! [59/PrimApp : bool])
  (define [60/PrimApp : bool] (PLE 0 [51/Declassify : uint256]))
  (define [61/PrimApp : bool] (PLT [51/Declassify : uint256] 3))
  (define [62/PrimApp : bool] (IF_THEN_ELSE [60/PrimApp : bool] [61/PrimApp : bool] False))
  (require! [62/PrimApp : bool])
  (define [63/PrimApp : bool] (PLE 0 [51/Declassify : uint256]))
  (define [64/PrimApp : bool] (PLT [51/Declassify : uint256] 3))
  (define [65/PrimApp : bool] (IF_THEN_ELSE [63/PrimApp : bool] [64/PrimApp : bool] False))
  (define [66/PrimApp : bool] (PLE 0 [43/Declassify : uint256]))
  (define [67/PrimApp : bool] (PLT [43/Declassify : uint256] 3))
  (define [68/PrimApp : bool] (IF_THEN_ELSE [66/PrimApp : bool] [67/PrimApp : bool] False))
  (define [69/PrimApp : bool] (IF_THEN_ELSE [65/PrimApp : bool] [68/PrimApp : bool] False))
  (define [70/PrimApp : uint256] (SUB 4 [43/Declassify : uint256]))
  (define [71/PrimApp : uint256] (ADD [51/Declassify : uint256] [70/PrimApp : uint256]))
  (define [72/PrimApp : uint256] (MOD [71/PrimApp : uint256] 3))
  (define [73/PureIf : uint256] (IF_THEN_ELSE [68/PrimApp : bool] 0 1))
  (define [74/PureIf : uint256] (IF_THEN_ELSE [65/PrimApp : bool] 2 [73/PureIf : uint256]))
  (define [75/PureIf : uint256] (IF_THEN_ELSE [69/PrimApp : bool] [72/PrimApp : uint256] [74/PureIf : uint256]))
  (define [76/PrimApp : bool] (PLE 0 [75/PureIf : uint256]))
  (define [77/PrimApp : bool] (PLT [75/PureIf : uint256] 3))
  (define [78/PrimApp : bool] (IF_THEN_ELSE [76/PrimApp : bool] [77/PrimApp : bool] False))
  (assert! [78/PrimApp : bool])
  (define [79/PrimApp : bool] (PEQ [75/PureIf : uint256] 2))
  (define [80/PrimApp : bool] (PLE 0 [51/Declassify : uint256]))
  (define [81/PrimApp : bool] (PLT [51/Declassify : uint256] 3))
  (define [82/PrimApp : bool] (IF_THEN_ELSE [80/PrimApp : bool] [81/PrimApp : bool] False))
  (define [83/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] False True))
  (define [84/PrimApp : bool] (IF_THEN_ELSE [83/PrimApp : bool] True [82/PrimApp : bool]))
  (assert! [84/PrimApp : bool])
  (define [85/PrimApp : bool] (PEQ [75/PureIf : uint256] 0))
  (define [86/PrimApp : bool] (PLE 0 [43/Declassify : uint256]))
  (define [87/PrimApp : bool] (PLT [43/Declassify : uint256] 3))
  (define [88/PrimApp : bool] (IF_THEN_ELSE [86/PrimApp : bool] [87/PrimApp : bool] False))
  (define [89/PrimApp : bool] (IF_THEN_ELSE [85/PrimApp : bool] False True))
  (define [90/PrimApp : bool] (IF_THEN_ELSE [89/PrimApp : bool] True [88/PrimApp : bool]))
  (assert! [90/PrimApp : bool])
  (define [91/PrimApp : bool] (PEQ [75/PureIf : uint256] 2))
  (define [92/PrimApp : bool] (PEQ [51/Declassify : uint256] 0))
  (define [93/PrimApp : bool] (IF_THEN_ELSE [92/PrimApp : bool] [91/PrimApp : bool] False))
  (possible? [93/PrimApp : bool])
  (define [94/PrimApp : bool] (PEQ [51/Declassify : uint256] 1))
  (define [95/PrimApp : bool] (IF_THEN_ELSE [94/PrimApp : bool] [91/PrimApp : bool] False))
  (possible? [95/PrimApp : bool])
  (define [96/PrimApp : bool] (PEQ [51/Declassify : uint256] 2))
  (define [97/PrimApp : bool] (IF_THEN_ELSE [96/PrimApp : bool] [91/PrimApp : bool] False))
  (possible? [97/PrimApp : bool])
  (define [98/PrimApp : bool] (PEQ [75/PureIf : uint256] 0))
  (define [99/PrimApp : bool] (PEQ [43/Declassify : uint256] 0))
  (define [100/PrimApp : bool] (IF_THEN_ELSE [99/PrimApp : bool] [98/PrimApp : bool] False))
  (possible? [100/PrimApp : bool])
  (define [101/PrimApp : bool] (PEQ [43/Declassify : uint256] 1))
  (define [102/PrimApp : bool] (IF_THEN_ELSE [101/PrimApp : bool] [98/PrimApp : bool] False))
  (possible? [102/PrimApp : bool])
  (define [103/PrimApp : bool] (PEQ [43/Declassify : uint256] 2))
  (define [104/PrimApp : bool] (IF_THEN_ELSE [103/PrimApp : bool] [98/PrimApp : bool] False))
  (possible? [104/PrimApp : bool])
  (define [105/PrimApp : bool] (PEQ [75/PureIf : uint256] 2))
  (define [106/PrimApp : uint256] (MUL 2 [2/Declassify : uint256]))
  (define [107/PrimApp : bool] (PEQ [75/PureIf : uint256] 0))
  (define [108/PrimApp : uint256] (MUL 2 [2/Declassify : uint256]))
  (define [109/PureIf : uint256] (IF_THEN_ELSE [107/PrimApp : bool] 0 [2/Declassify : uint256]))
  (define [110/PureIf : uint256] (IF_THEN_ELSE [107/PrimApp : bool] [108/PrimApp : uint256] [2/Declassify : uint256]))
  (define [111/PureIf : uint256] (IF_THEN_ELSE [105/PrimApp : bool] [106/PrimApp : uint256] [109/PureIf : uint256]))
  (define [112/PureIf : uint256] (IF_THEN_ELSE [105/PrimApp : bool] 0 [110/PureIf : uint256]))
  (define [113/PrimApp : uint256] (ADD [3/Declassify : uint256] [111/PureIf : uint256]))
  (define [114/PrimApp : bytes] (INTERACT "outcome"))
  (define [115/PrimApp : bool] (PLE 0 [75/PureIf : uint256]))
  (define [116/PrimApp : bool] (PLT [75/PureIf : uint256] 3))
  (define [117/PrimApp : bool] (IF_THEN_ELSE [115/PrimApp : bool] [116/PrimApp : bool] False))
  (require! [117/PrimApp : bool])
  (define [118/PrimApp : bool] (PEQ [75/PureIf : uint256] 0))
  (define [119/PrimApp : bool] (PEQ [75/PureIf : uint256] 1))
  (define [120/PureIf : bytes] (IF_THEN_ELSE [119/PrimApp : bool] "Draw" "Alice wins"))
  (define [121/PureIf : bytes] (IF_THEN_ELSE [118/PrimApp : bool] "Bob wins" [120/PureIf : bytes]))
  [121/PureIf : bytes])