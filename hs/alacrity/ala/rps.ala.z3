
; (=> (= (integer->integer-bytes a) (integer->integer-bytes b))
;     (= a b))

; (=> (= (digest a) (digest b))
;     (= a b))

; (=> (= (msg-cat a1 a2) (msg-cat b1 b2))
;     (&& (= a1 b1) (= a2 b2)))

(declare-datatypes ()
  ((Bytes
    (integer->integer-bytes (bytes-integer Int))
    (msg-cat (msg-left Bytes) (msg-right Bytes)))))

(declare-fun digest (Bytes) Int)

;; This definition only works in Z3 version >=4.8.5,
;; because `match` is broken in Z3 version <=4.8.4.
; (define-fun-rec bytes-length ((bs Bytes)) Int
;   (match bs
;     (((integer->integer-bytes _) 32)
;      ((digest _) 32)
;      ((msg-cat l r) (+ 32 (bytes-length l) (bytes-length r))))))

(define-fun-rec bytes-length ((bs Bytes)) Int
  (if ((_ is integer->integer-bytes) bs)
      32
      (if ((_ is digest) bs)
          32
          (+ 32 (bytes-length (msg-left bs)) (bytes-length (msg-right bs))))))


(declare-const v0 Int)

(declare-const v1 Int)

(declare-const v2 Int)

(declare-const v3 Int)

(push)
  (echo "Verifying with honest = True; role = RoleContract")
  (declare-const ctc_balance0 Int)
  (assert (= ctc_balance0 0))
  (declare-const v4 Bool)
  (assert (= v4 (= v0 0)))
  (declare-const v5 Bool)
  (assert (= v5 (= v0 1)))
  (declare-const v6 Bool)
  (assert (= v6 (= v0 2)))
  (declare-const v7 Bool)
  (assert (= v7 (ite v5 true v6)))
  (declare-const v8 Bool)
  (assert (= v8 (ite v4 true v7)))
  (push)
    (assert (not v8))
    (echo "Verifying honest = True, role = RoleContract, tk = TAssert, a = v8")
    (check-sat)
    (get-model)
  (pop)
  (assert v8)
  (declare-const v9 Int)
  
  (declare-const v10 Bytes)
  (assert (= v10 (integer->integer-bytes v9)))
  (declare-const v11 Bytes)
  (assert (= v11 (integer->integer-bytes v0)))
  (declare-const v12 Bytes)
  (assert (= v12 (msg-cat v10 v11)))
  (declare-const v13 Int)
  (assert (= v13 (digest v12)))
  (declare-const v14 Int)
  (assert (= v14 v2))
  (declare-const v15 Int)
  (assert (= v15 v1))
  (declare-const v16 Int)
  (assert (= v16 v13))
  (declare-const v17 Int)
  (assert (= v17 (+ v14 v15)))
  (declare-const ctc_balance1 Int)
  (assert (= ctc_balance1 (+ ctc_balance0 v17)))
  (declare-const v18 Bool)
  (assert (= v18 (= v3 0)))
  (declare-const v19 Bool)
  (assert (= v19 (= v3 1)))
  (declare-const v20 Bool)
  (assert (= v20 (= v3 2)))
  (declare-const v21 Bool)
  (assert (= v21 (ite v19 true v20)))
  (declare-const v22 Bool)
  (assert (= v22 (ite v18 true v21)))
  (push)
    (assert (not v22))
    (echo "Verifying honest = True, role = RoleContract, tk = TAssert, a = v22")
    (check-sat)
    (get-model)
  (pop)
  (assert v22)
  (declare-const v23 Int)
  (assert (= v23 v3))
  (declare-const ctc_balance2 Int)
  (assert (= ctc_balance2 (+ ctc_balance1 v14)))
  (declare-const v24 Bool)
  (assert (= v24 false))
  (declare-const v25 Bool)
  (assert (= v25 (ite v24 false true)))
  (declare-const v26 Bool)
  (assert (= v26 (= v23 0)))
  (declare-const v27 Bool)
  (assert (= v27 (= v23 1)))
  (declare-const v28 Bool)
  (assert (= v28 (= v23 2)))
  (declare-const v29 Bool)
  (assert (= v29 (ite v27 true v28)))
  (declare-const v30 Bool)
  (assert (= v30 (ite v26 true v29)))
  (declare-const v31 Bool)
  (assert (= v31 (ite v25 false true)))
  (declare-const v32 Bool)
  (assert (= v32 (ite v31 true v30)))
  (push)
    (assert (not v32))
    (echo "Verifying honest = True, role = RoleContract, tk = TAssert, a = v32")
    (check-sat)
    (get-model)
  (pop)
  (assert v32)
  (declare-const v33 Int)
  (assert (= v33 v9))
  (declare-const v34 Int)
  (assert (= v34 v0))
  (declare-const ctc_balance3 Int)
  (assert (= ctc_balance3 (+ ctc_balance2 0)))
  (declare-const v35 Bytes)
  (assert (= v35 (integer->integer-bytes v33)))
  (declare-const v36 Bytes)
  (assert (= v36 (integer->integer-bytes v34)))
  (declare-const v37 Bytes)
  (assert (= v37 (msg-cat v35 v36)))
  (declare-const v38 Int)
  (assert (= v38 (digest v37)))
  (declare-const v39 Bool)
  (assert (= v39 (= v16 v38)))
  (push)
    (assert (not v39))
    (echo "Verifying honest = True, role = RoleContract, tk = TAssert, a = v39")
    (check-sat)
    (get-model)
  (pop)
  (assert v39)
  (declare-const v40 Bool)
  (assert (= v40 false))
  (declare-const v41 Bool)
  (assert (= v41 (ite v40 false true)))
  (declare-const v42 Bool)
  (assert (= v42 (= v34 0)))
  (declare-const v43 Bool)
  (assert (= v43 (= v34 1)))
  (declare-const v44 Bool)
  (assert (= v44 (= v34 2)))
  (declare-const v45 Bool)
  (assert (= v45 (ite v43 true v44)))
  (declare-const v46 Bool)
  (assert (= v46 (ite v42 true v45)))
  (declare-const v47 Bool)
  (assert (= v47 (ite v41 false true)))
  (declare-const v48 Bool)
  (assert (= v48 (ite v47 true v46)))
  (push)
    (assert (not v48))
    (echo "Verifying honest = True, role = RoleContract, tk = TAssert, a = v48")
    (check-sat)
    (get-model)
  (pop)
  (assert v48)
  (declare-const v49 Bool)
  (assert (= v49 (= v34 0)))
  (declare-const v50 Bool)
  (assert (= v50 (= v34 1)))
  (declare-const v51 Bool)
  (assert (= v51 (= v34 2)))
  (declare-const v52 Bool)
  (assert (= v52 (ite v50 true v51)))
  (declare-const v53 Bool)
  (assert (= v53 (ite v49 true v52)))
  (declare-const v54 Bool)
  (assert (= v54 (= v23 0)))
  (declare-const v55 Bool)
  (assert (= v55 (= v23 1)))
  (declare-const v56 Bool)
  (assert (= v56 (= v23 2)))
  (declare-const v57 Bool)
  (assert (= v57 (ite v55 true v56)))
  (declare-const v58 Bool)
  (assert (= v58 (ite v54 true v57)))
  (declare-const v59 Bool)
  (assert (= v59 (ite v53 v58 false)))
  (declare-const v60 Int)
  (assert (= v60 (- 4 v23)))
  (declare-const v61 Int)
  (assert (= v61 (+ v34 v60)))
  (declare-const v62 Int)
  (assert (= v62 (mod v61 3)))
  (declare-const v63 Int)
  (assert (= v63 (ite v58 0 1)))
  (declare-const v64 Int)
  (assert (= v64 (ite v53 2 v63)))
  (declare-const v65 Int)
  (assert (= v65 (ite v59 v62 v64)))
  (declare-const v66 Bool)
  (assert (= v66 (= v65 0)))
  (declare-const v67 Bool)
  (assert (= v67 (= v65 1)))
  (declare-const v68 Bool)
  (assert (= v68 (= v65 2)))
  (declare-const v69 Bool)
  (assert (= v69 (ite v67 true v68)))
  (declare-const v70 Bool)
  (assert (= v70 (ite v66 true v69)))
  (push)
    (assert (not v70))
    (echo "Verifying honest = True, role = RoleContract, tk = TAssert, a = v70")
    (check-sat)
    (get-model)
  (pop)
  (assert v70)
  (declare-const v71 Bool)
  (assert (= v71 (= v65 2)))
  (declare-const v72 Bool)
  (assert (= v72 (= v34 0)))
  (declare-const v73 Bool)
  (assert (= v73 (= v34 1)))
  (declare-const v74 Bool)
  (assert (= v74 (= v34 2)))
  (declare-const v75 Bool)
  (assert (= v75 (ite v73 true v74)))
  (declare-const v76 Bool)
  (assert (= v76 (ite v72 true v75)))
  (declare-const v77 Bool)
  (assert (= v77 (ite v71 false true)))
  (declare-const v78 Bool)
  (assert (= v78 (ite v77 true v76)))
  (push)
    (assert (not v78))
    (echo "Verifying honest = True, role = RoleContract, tk = TAssert, a = v78")
    (check-sat)
    (get-model)
  (pop)
  (assert v78)
  (declare-const v79 Bool)
  (assert (= v79 (= v65 0)))
  (declare-const v80 Bool)
  (assert (= v80 (= v23 0)))
  (declare-const v81 Bool)
  (assert (= v81 (= v23 1)))
  (declare-const v82 Bool)
  (assert (= v82 (= v23 2)))
  (declare-const v83 Bool)
  (assert (= v83 (ite v81 true v82)))
  (declare-const v84 Bool)
  (assert (= v84 (ite v80 true v83)))
  (declare-const v85 Bool)
  (assert (= v85 (ite v79 false true)))
  (declare-const v86 Bool)
  (assert (= v86 (ite v85 true v84)))
  (push)
    (assert (not v86))
    (echo "Verifying honest = True, role = RoleContract, tk = TAssert, a = v86")
    (check-sat)
    (get-model)
  (pop)
  (assert v86)
  (declare-const v87 Bool)
  (assert (= v87 (= v65 2)))
  (declare-const v88 Int)
  (assert (= v88 (* 2 v14)))
  (declare-const v89 Int)
  (assert (= v89 (+ v88 v15)))
  (declare-const v90 Bool)
  (assert (= v90 (= v65 0)))
  (declare-const v91 Int)
  (assert (= v91 (* 2 v14)))
  (declare-const v92 Int)
  (assert (= v92 (+ v14 v15)))
  (declare-const v93 Int)
  (assert (= v93 (ite v90 v15 v92)))
  (declare-const v94 Int)
  (assert (= v94 (ite v90 v91 v14)))
  (declare-const v95 Int)
  (assert (= v95 (ite v87 v89 v93)))
  (declare-const v96 Int)
  (assert (= v96 (ite v87 0 v94)))
  (declare-const ctc_balance4 Int)
  (assert (= ctc_balance4 (- ctc_balance3 v95)))
  (declare-const ctc_balance5 Int)
  (assert (= ctc_balance5 (- ctc_balance4 v96)))
  (push)
    (assert (not (= ctc_balance5 0)))
    (echo "Verifying honest = True, role = RoleContract, tk = TBalanceZero, a = (= ctc_balance5 0)")
    (check-sat)
    (get-model)
  (pop)
(pop)

(push)
  (echo "Verifying with honest = True; role = RolePart A")
  (declare-const ctc_balance0 Int)
  (assert (= ctc_balance0 0))
  (declare-const v4 Bool)
  (assert (= v4 (= v0 0)))
  (declare-const v5 Bool)
  (assert (= v5 (= v0 1)))
  (declare-const v6 Bool)
  (assert (= v6 (= v0 2)))
  (declare-const v7 Bool)
  (assert (= v7 (ite v5 true v6)))
  (declare-const v8 Bool)
  (assert (= v8 (ite v4 true v7)))
  (push)
    (assert (not v8))
    (echo "Verifying honest = True, role = RolePart A, tk = TAssert, a = v8")
    (check-sat)
    (get-model)
  (pop)
  (assert v8)
  (declare-const v9 Int)
  
  (declare-const v10 Bytes)
  (assert (= v10 (integer->integer-bytes v9)))
  (declare-const v11 Bytes)
  (assert (= v11 (integer->integer-bytes v0)))
  (declare-const v12 Bytes)
  (assert (= v12 (msg-cat v10 v11)))
  (declare-const v13 Int)
  (assert (= v13 (digest v12)))
  (declare-const v14 Int)
  (assert (= v14 v2))
  (declare-const v15 Int)
  (assert (= v15 v1))
  (declare-const v16 Int)
  (assert (= v16 v13))
  (declare-const v17 Int)
  (assert (= v17 (+ v14 v15)))
  (declare-const ctc_balance1 Int)
  (assert (= ctc_balance1 (+ ctc_balance0 v17)))
  (declare-const v18 Bool)
  (assert (= v18 (= v3 0)))
  (declare-const v19 Bool)
  (assert (= v19 (= v3 1)))
  (declare-const v20 Bool)
  (assert (= v20 (= v3 2)))
  (declare-const v21 Bool)
  (assert (= v21 (ite v19 true v20)))
  (declare-const v22 Bool)
  (assert (= v22 (ite v18 true v21)))
  (push)
    (assert (not v22))
    (echo "Verifying honest = True, role = RolePart A, tk = TAssert, a = v22")
    (check-sat)
    (get-model)
  (pop)
  (assert v22)
  (declare-const v23 Int)
  (assert (= v23 v3))
  (declare-const ctc_balance2 Int)
  (assert (= ctc_balance2 (+ ctc_balance1 v14)))
  (declare-const v24 Bool)
  (assert (= v24 false))
  (declare-const v25 Bool)
  (assert (= v25 (ite v24 false true)))
  (declare-const v26 Bool)
  (assert (= v26 (= v23 0)))
  (declare-const v27 Bool)
  (assert (= v27 (= v23 1)))
  (declare-const v28 Bool)
  (assert (= v28 (= v23 2)))
  (declare-const v29 Bool)
  (assert (= v29 (ite v27 true v28)))
  (declare-const v30 Bool)
  (assert (= v30 (ite v26 true v29)))
  (declare-const v31 Bool)
  (assert (= v31 (ite v25 false true)))
  (declare-const v32 Bool)
  (assert (= v32 (ite v31 true v30)))
  (push)
    (assert (not v32))
    (echo "Verifying honest = True, role = RolePart A, tk = TAssert, a = v32")
    (check-sat)
    (get-model)
  (pop)
  (assert v32)
  (declare-const v33 Int)
  (assert (= v33 v9))
  (declare-const v34 Int)
  (assert (= v34 v0))
  (declare-const ctc_balance3 Int)
  (assert (= ctc_balance3 (+ ctc_balance2 0)))
  (declare-const v35 Bytes)
  (assert (= v35 (integer->integer-bytes v33)))
  (declare-const v36 Bytes)
  (assert (= v36 (integer->integer-bytes v34)))
  (declare-const v37 Bytes)
  (assert (= v37 (msg-cat v35 v36)))
  (declare-const v38 Int)
  (assert (= v38 (digest v37)))
  (declare-const v39 Bool)
  (assert (= v39 (= v16 v38)))
  (push)
    (assert (not v39))
    (echo "Verifying honest = True, role = RolePart A, tk = TAssert, a = v39")
    (check-sat)
    (get-model)
  (pop)
  (assert v39)
  (declare-const v40 Bool)
  (assert (= v40 false))
  (declare-const v41 Bool)
  (assert (= v41 (ite v40 false true)))
  (declare-const v42 Bool)
  (assert (= v42 (= v34 0)))
  (declare-const v43 Bool)
  (assert (= v43 (= v34 1)))
  (declare-const v44 Bool)
  (assert (= v44 (= v34 2)))
  (declare-const v45 Bool)
  (assert (= v45 (ite v43 true v44)))
  (declare-const v46 Bool)
  (assert (= v46 (ite v42 true v45)))
  (declare-const v47 Bool)
  (assert (= v47 (ite v41 false true)))
  (declare-const v48 Bool)
  (assert (= v48 (ite v47 true v46)))
  (push)
    (assert (not v48))
    (echo "Verifying honest = True, role = RolePart A, tk = TAssert, a = v48")
    (check-sat)
    (get-model)
  (pop)
  (assert v48)
  (declare-const v49 Bool)
  (assert (= v49 (= v34 0)))
  (declare-const v50 Bool)
  (assert (= v50 (= v34 1)))
  (declare-const v51 Bool)
  (assert (= v51 (= v34 2)))
  (declare-const v52 Bool)
  (assert (= v52 (ite v50 true v51)))
  (declare-const v53 Bool)
  (assert (= v53 (ite v49 true v52)))
  (declare-const v54 Bool)
  (assert (= v54 (= v23 0)))
  (declare-const v55 Bool)
  (assert (= v55 (= v23 1)))
  (declare-const v56 Bool)
  (assert (= v56 (= v23 2)))
  (declare-const v57 Bool)
  (assert (= v57 (ite v55 true v56)))
  (declare-const v58 Bool)
  (assert (= v58 (ite v54 true v57)))
  (declare-const v59 Bool)
  (assert (= v59 (ite v53 v58 false)))
  (declare-const v60 Int)
  (assert (= v60 (- 4 v23)))
  (declare-const v61 Int)
  (assert (= v61 (+ v34 v60)))
  (declare-const v62 Int)
  (assert (= v62 (mod v61 3)))
  (declare-const v63 Int)
  (assert (= v63 (ite v58 0 1)))
  (declare-const v64 Int)
  (assert (= v64 (ite v53 2 v63)))
  (declare-const v65 Int)
  (assert (= v65 (ite v59 v62 v64)))
  (declare-const v66 Bool)
  (assert (= v66 (= v65 0)))
  (declare-const v67 Bool)
  (assert (= v67 (= v65 1)))
  (declare-const v68 Bool)
  (assert (= v68 (= v65 2)))
  (declare-const v69 Bool)
  (assert (= v69 (ite v67 true v68)))
  (declare-const v70 Bool)
  (assert (= v70 (ite v66 true v69)))
  (push)
    (assert (not v70))
    (echo "Verifying honest = True, role = RolePart A, tk = TAssert, a = v70")
    (check-sat)
    (get-model)
  (pop)
  (assert v70)
  (declare-const v71 Bool)
  (assert (= v71 (= v65 2)))
  (declare-const v72 Bool)
  (assert (= v72 (= v34 0)))
  (declare-const v73 Bool)
  (assert (= v73 (= v34 1)))
  (declare-const v74 Bool)
  (assert (= v74 (= v34 2)))
  (declare-const v75 Bool)
  (assert (= v75 (ite v73 true v74)))
  (declare-const v76 Bool)
  (assert (= v76 (ite v72 true v75)))
  (declare-const v77 Bool)
  (assert (= v77 (ite v71 false true)))
  (declare-const v78 Bool)
  (assert (= v78 (ite v77 true v76)))
  (push)
    (assert (not v78))
    (echo "Verifying honest = True, role = RolePart A, tk = TAssert, a = v78")
    (check-sat)
    (get-model)
  (pop)
  (assert v78)
  (declare-const v79 Bool)
  (assert (= v79 (= v65 0)))
  (declare-const v80 Bool)
  (assert (= v80 (= v23 0)))
  (declare-const v81 Bool)
  (assert (= v81 (= v23 1)))
  (declare-const v82 Bool)
  (assert (= v82 (= v23 2)))
  (declare-const v83 Bool)
  (assert (= v83 (ite v81 true v82)))
  (declare-const v84 Bool)
  (assert (= v84 (ite v80 true v83)))
  (declare-const v85 Bool)
  (assert (= v85 (ite v79 false true)))
  (declare-const v86 Bool)
  (assert (= v86 (ite v85 true v84)))
  (push)
    (assert (not v86))
    (echo "Verifying honest = True, role = RolePart A, tk = TAssert, a = v86")
    (check-sat)
    (get-model)
  (pop)
  (assert v86)
  (declare-const v87 Bool)
  (assert (= v87 (= v65 2)))
  (declare-const v88 Int)
  (assert (= v88 (* 2 v14)))
  (declare-const v89 Int)
  (assert (= v89 (+ v88 v15)))
  (declare-const v90 Bool)
  (assert (= v90 (= v65 0)))
  (declare-const v91 Int)
  (assert (= v91 (* 2 v14)))
  (declare-const v92 Int)
  (assert (= v92 (+ v14 v15)))
  (declare-const v93 Int)
  (assert (= v93 (ite v90 v15 v92)))
  (declare-const v94 Int)
  (assert (= v94 (ite v90 v91 v14)))
  (declare-const v95 Int)
  (assert (= v95 (ite v87 v89 v93)))
  (declare-const v96 Int)
  (assert (= v96 (ite v87 0 v94)))
  (declare-const ctc_balance4 Int)
  (assert (= ctc_balance4 (- ctc_balance3 v95)))
  (declare-const ctc_balance5 Int)
  (assert (= ctc_balance5 (- ctc_balance4 v96)))
  (push)
    (assert (not (= ctc_balance5 0)))
    (echo "Verifying honest = True, role = RolePart A, tk = TBalanceZero, a = (= ctc_balance5 0)")
    (check-sat)
    (get-model)
  (pop)
(pop)

(push)
  (echo "Verifying with honest = True; role = RolePart B")
  (declare-const ctc_balance0 Int)
  (assert (= ctc_balance0 0))
  (declare-const v4 Bool)
  (assert (= v4 (= v0 0)))
  (declare-const v5 Bool)
  (assert (= v5 (= v0 1)))
  (declare-const v6 Bool)
  (assert (= v6 (= v0 2)))
  (declare-const v7 Bool)
  (assert (= v7 (ite v5 true v6)))
  (declare-const v8 Bool)
  (assert (= v8 (ite v4 true v7)))
  (push)
    (assert (not v8))
    (echo "Verifying honest = True, role = RolePart B, tk = TAssert, a = v8")
    (check-sat)
    (get-model)
  (pop)
  (assert v8)
  (declare-const v9 Int)
  
  (declare-const v10 Bytes)
  (assert (= v10 (integer->integer-bytes v9)))
  (declare-const v11 Bytes)
  (assert (= v11 (integer->integer-bytes v0)))
  (declare-const v12 Bytes)
  (assert (= v12 (msg-cat v10 v11)))
  (declare-const v13 Int)
  (assert (= v13 (digest v12)))
  (declare-const v14 Int)
  (assert (= v14 v2))
  (declare-const v15 Int)
  (assert (= v15 v1))
  (declare-const v16 Int)
  (assert (= v16 v13))
  (declare-const v17 Int)
  (assert (= v17 (+ v14 v15)))
  (declare-const ctc_balance1 Int)
  (assert (= ctc_balance1 (+ ctc_balance0 v17)))
  (declare-const v18 Bool)
  (assert (= v18 (= v3 0)))
  (declare-const v19 Bool)
  (assert (= v19 (= v3 1)))
  (declare-const v20 Bool)
  (assert (= v20 (= v3 2)))
  (declare-const v21 Bool)
  (assert (= v21 (ite v19 true v20)))
  (declare-const v22 Bool)
  (assert (= v22 (ite v18 true v21)))
  (push)
    (assert (not v22))
    (echo "Verifying honest = True, role = RolePart B, tk = TAssert, a = v22")
    (check-sat)
    (get-model)
  (pop)
  (assert v22)
  (declare-const v23 Int)
  (assert (= v23 v3))
  (declare-const ctc_balance2 Int)
  (assert (= ctc_balance2 (+ ctc_balance1 v14)))
  (declare-const v24 Bool)
  (assert (= v24 false))
  (declare-const v25 Bool)
  (assert (= v25 (ite v24 false true)))
  (declare-const v26 Bool)
  (assert (= v26 (= v23 0)))
  (declare-const v27 Bool)
  (assert (= v27 (= v23 1)))
  (declare-const v28 Bool)
  (assert (= v28 (= v23 2)))
  (declare-const v29 Bool)
  (assert (= v29 (ite v27 true v28)))
  (declare-const v30 Bool)
  (assert (= v30 (ite v26 true v29)))
  (declare-const v31 Bool)
  (assert (= v31 (ite v25 false true)))
  (declare-const v32 Bool)
  (assert (= v32 (ite v31 true v30)))
  (push)
    (assert (not v32))
    (echo "Verifying honest = True, role = RolePart B, tk = TAssert, a = v32")
    (check-sat)
    (get-model)
  (pop)
  (assert v32)
  (declare-const v33 Int)
  (assert (= v33 v9))
  (declare-const v34 Int)
  (assert (= v34 v0))
  (declare-const ctc_balance3 Int)
  (assert (= ctc_balance3 (+ ctc_balance2 0)))
  (declare-const v35 Bytes)
  (assert (= v35 (integer->integer-bytes v33)))
  (declare-const v36 Bytes)
  (assert (= v36 (integer->integer-bytes v34)))
  (declare-const v37 Bytes)
  (assert (= v37 (msg-cat v35 v36)))
  (declare-const v38 Int)
  (assert (= v38 (digest v37)))
  (declare-const v39 Bool)
  (assert (= v39 (= v16 v38)))
  (push)
    (assert (not v39))
    (echo "Verifying honest = True, role = RolePart B, tk = TAssert, a = v39")
    (check-sat)
    (get-model)
  (pop)
  (assert v39)
  (declare-const v40 Bool)
  (assert (= v40 false))
  (declare-const v41 Bool)
  (assert (= v41 (ite v40 false true)))
  (declare-const v42 Bool)
  (assert (= v42 (= v34 0)))
  (declare-const v43 Bool)
  (assert (= v43 (= v34 1)))
  (declare-const v44 Bool)
  (assert (= v44 (= v34 2)))
  (declare-const v45 Bool)
  (assert (= v45 (ite v43 true v44)))
  (declare-const v46 Bool)
  (assert (= v46 (ite v42 true v45)))
  (declare-const v47 Bool)
  (assert (= v47 (ite v41 false true)))
  (declare-const v48 Bool)
  (assert (= v48 (ite v47 true v46)))
  (push)
    (assert (not v48))
    (echo "Verifying honest = True, role = RolePart B, tk = TAssert, a = v48")
    (check-sat)
    (get-model)
  (pop)
  (assert v48)
  (declare-const v49 Bool)
  (assert (= v49 (= v34 0)))
  (declare-const v50 Bool)
  (assert (= v50 (= v34 1)))
  (declare-const v51 Bool)
  (assert (= v51 (= v34 2)))
  (declare-const v52 Bool)
  (assert (= v52 (ite v50 true v51)))
  (declare-const v53 Bool)
  (assert (= v53 (ite v49 true v52)))
  (declare-const v54 Bool)
  (assert (= v54 (= v23 0)))
  (declare-const v55 Bool)
  (assert (= v55 (= v23 1)))
  (declare-const v56 Bool)
  (assert (= v56 (= v23 2)))
  (declare-const v57 Bool)
  (assert (= v57 (ite v55 true v56)))
  (declare-const v58 Bool)
  (assert (= v58 (ite v54 true v57)))
  (declare-const v59 Bool)
  (assert (= v59 (ite v53 v58 false)))
  (declare-const v60 Int)
  (assert (= v60 (- 4 v23)))
  (declare-const v61 Int)
  (assert (= v61 (+ v34 v60)))
  (declare-const v62 Int)
  (assert (= v62 (mod v61 3)))
  (declare-const v63 Int)
  (assert (= v63 (ite v58 0 1)))
  (declare-const v64 Int)
  (assert (= v64 (ite v53 2 v63)))
  (declare-const v65 Int)
  (assert (= v65 (ite v59 v62 v64)))
  (declare-const v66 Bool)
  (assert (= v66 (= v65 0)))
  (declare-const v67 Bool)
  (assert (= v67 (= v65 1)))
  (declare-const v68 Bool)
  (assert (= v68 (= v65 2)))
  (declare-const v69 Bool)
  (assert (= v69 (ite v67 true v68)))
  (declare-const v70 Bool)
  (assert (= v70 (ite v66 true v69)))
  (push)
    (assert (not v70))
    (echo "Verifying honest = True, role = RolePart B, tk = TAssert, a = v70")
    (check-sat)
    (get-model)
  (pop)
  (assert v70)
  (declare-const v71 Bool)
  (assert (= v71 (= v65 2)))
  (declare-const v72 Bool)
  (assert (= v72 (= v34 0)))
  (declare-const v73 Bool)
  (assert (= v73 (= v34 1)))
  (declare-const v74 Bool)
  (assert (= v74 (= v34 2)))
  (declare-const v75 Bool)
  (assert (= v75 (ite v73 true v74)))
  (declare-const v76 Bool)
  (assert (= v76 (ite v72 true v75)))
  (declare-const v77 Bool)
  (assert (= v77 (ite v71 false true)))
  (declare-const v78 Bool)
  (assert (= v78 (ite v77 true v76)))
  (push)
    (assert (not v78))
    (echo "Verifying honest = True, role = RolePart B, tk = TAssert, a = v78")
    (check-sat)
    (get-model)
  (pop)
  (assert v78)
  (declare-const v79 Bool)
  (assert (= v79 (= v65 0)))
  (declare-const v80 Bool)
  (assert (= v80 (= v23 0)))
  (declare-const v81 Bool)
  (assert (= v81 (= v23 1)))
  (declare-const v82 Bool)
  (assert (= v82 (= v23 2)))
  (declare-const v83 Bool)
  (assert (= v83 (ite v81 true v82)))
  (declare-const v84 Bool)
  (assert (= v84 (ite v80 true v83)))
  (declare-const v85 Bool)
  (assert (= v85 (ite v79 false true)))
  (declare-const v86 Bool)
  (assert (= v86 (ite v85 true v84)))
  (push)
    (assert (not v86))
    (echo "Verifying honest = True, role = RolePart B, tk = TAssert, a = v86")
    (check-sat)
    (get-model)
  (pop)
  (assert v86)
  (declare-const v87 Bool)
  (assert (= v87 (= v65 2)))
  (declare-const v88 Int)
  (assert (= v88 (* 2 v14)))
  (declare-const v89 Int)
  (assert (= v89 (+ v88 v15)))
  (declare-const v90 Bool)
  (assert (= v90 (= v65 0)))
  (declare-const v91 Int)
  (assert (= v91 (* 2 v14)))
  (declare-const v92 Int)
  (assert (= v92 (+ v14 v15)))
  (declare-const v93 Int)
  (assert (= v93 (ite v90 v15 v92)))
  (declare-const v94 Int)
  (assert (= v94 (ite v90 v91 v14)))
  (declare-const v95 Int)
  (assert (= v95 (ite v87 v89 v93)))
  (declare-const v96 Int)
  (assert (= v96 (ite v87 0 v94)))
  (declare-const ctc_balance4 Int)
  (assert (= ctc_balance4 (- ctc_balance3 v95)))
  (declare-const ctc_balance5 Int)
  (assert (= ctc_balance5 (- ctc_balance4 v96)))
  (push)
    (assert (not (= ctc_balance5 0)))
    (echo "Verifying honest = True, role = RolePart B, tk = TBalanceZero, a = (= ctc_balance5 0)")
    (check-sat)
    (get-model)
  (pop)
(pop)

(push)
  (echo "Verifying with honest = False; role = RoleContract")
  (declare-const ctc_balance0 Int)
  (assert (= ctc_balance0 0))
  (declare-const v4 Bool)
  (declare-const v5 Bool)
  (declare-const v6 Bool)
  (declare-const v7 Bool)
  (declare-const v8 Bool)
  (declare-const v9 Int)
  (declare-const v10 Bytes)
  (declare-const v11 Bytes)
  (declare-const v12 Bytes)
  (declare-const v13 Int)
  (declare-const v14 Int)
  (declare-const v15 Int)
  (declare-const v16 Int)
  (declare-const v17 Int)
  (declare-const ctc_balance1 Int)
  (assert (= ctc_balance1 (+ ctc_balance0 v17)))
  (declare-const v18 Bool)
  (declare-const v19 Bool)
  (declare-const v20 Bool)
  (declare-const v21 Bool)
  (declare-const v22 Bool)
  (declare-const v23 Int)
  (declare-const ctc_balance2 Int)
  (assert (= ctc_balance2 (+ ctc_balance1 v14)))
  (declare-const v24 Bool)
  (assert (= v24 true))
  (declare-const v25 Bool)
  (assert (= v25 (ite v24 false true)))
  (declare-const v26 Bool)
  (assert (= v26 (= v23 0)))
  (declare-const v27 Bool)
  (assert (= v27 (= v23 1)))
  (declare-const v28 Bool)
  (assert (= v28 (= v23 2)))
  (declare-const v29 Bool)
  (assert (= v29 (ite v27 true v28)))
  (declare-const v30 Bool)
  (assert (= v30 (ite v26 true v29)))
  (declare-const v31 Bool)
  (assert (= v31 (ite v25 false true)))
  (declare-const v32 Bool)
  (assert (= v32 (ite v31 true v30)))
  (push)
    (assert (not v32))
    (echo "Verifying honest = False, role = RoleContract, tk = TAssert, a = v32")
    (check-sat)
    (get-model)
  (pop)
  (assert v32)
  (declare-const v33 Int)
  (declare-const v34 Int)
  (declare-const ctc_balance3 Int)
  (assert (= ctc_balance3 (+ ctc_balance2 0)))
  (declare-const v35 Bytes)
  (assert (= v35 (integer->integer-bytes v33)))
  (declare-const v36 Bytes)
  (assert (= v36 (integer->integer-bytes v34)))
  (declare-const v37 Bytes)
  (assert (= v37 (msg-cat v35 v36)))
  (declare-const v38 Int)
  (assert (= v38 (digest v37)))
  (declare-const v39 Bool)
  (assert (= v39 (= v16 v38)))
  (push)
    (assert (not v39))
    (echo "Verifying honest = False, role = RoleContract, tk = TAssert, a = v39")
    (check-sat)
    (get-model)
  (pop)
  (assert v39)
  (declare-const v40 Bool)
  (assert (= v40 true))
  (declare-const v41 Bool)
  (assert (= v41 (ite v40 false true)))
  (declare-const v42 Bool)
  (assert (= v42 (= v34 0)))
  (declare-const v43 Bool)
  (assert (= v43 (= v34 1)))
  (declare-const v44 Bool)
  (assert (= v44 (= v34 2)))
  (declare-const v45 Bool)
  (assert (= v45 (ite v43 true v44)))
  (declare-const v46 Bool)
  (assert (= v46 (ite v42 true v45)))
  (declare-const v47 Bool)
  (assert (= v47 (ite v41 false true)))
  (declare-const v48 Bool)
  (assert (= v48 (ite v47 true v46)))
  (push)
    (assert (not v48))
    (echo "Verifying honest = False, role = RoleContract, tk = TAssert, a = v48")
    (check-sat)
    (get-model)
  (pop)
  (assert v48)
  (declare-const v49 Bool)
  (assert (= v49 (= v34 0)))
  (declare-const v50 Bool)
  (assert (= v50 (= v34 1)))
  (declare-const v51 Bool)
  (assert (= v51 (= v34 2)))
  (declare-const v52 Bool)
  (assert (= v52 (ite v50 true v51)))
  (declare-const v53 Bool)
  (assert (= v53 (ite v49 true v52)))
  (declare-const v54 Bool)
  (assert (= v54 (= v23 0)))
  (declare-const v55 Bool)
  (assert (= v55 (= v23 1)))
  (declare-const v56 Bool)
  (assert (= v56 (= v23 2)))
  (declare-const v57 Bool)
  (assert (= v57 (ite v55 true v56)))
  (declare-const v58 Bool)
  (assert (= v58 (ite v54 true v57)))
  (declare-const v59 Bool)
  (assert (= v59 (ite v53 v58 false)))
  (declare-const v60 Int)
  (assert (= v60 (- 4 v23)))
  (declare-const v61 Int)
  (assert (= v61 (+ v34 v60)))
  (declare-const v62 Int)
  (assert (= v62 (mod v61 3)))
  (declare-const v63 Int)
  (assert (= v63 (ite v58 0 1)))
  (declare-const v64 Int)
  (assert (= v64 (ite v53 2 v63)))
  (declare-const v65 Int)
  (assert (= v65 (ite v59 v62 v64)))
  (declare-const v66 Bool)
  (assert (= v66 (= v65 0)))
  (declare-const v67 Bool)
  (assert (= v67 (= v65 1)))
  (declare-const v68 Bool)
  (assert (= v68 (= v65 2)))
  (declare-const v69 Bool)
  (assert (= v69 (ite v67 true v68)))
  (declare-const v70 Bool)
  (assert (= v70 (ite v66 true v69)))
  (push)
    (assert (not v70))
    (echo "Verifying honest = False, role = RoleContract, tk = TAssert, a = v70")
    (check-sat)
    (get-model)
  (pop)
  (assert v70)
  (declare-const v71 Bool)
  (assert (= v71 (= v65 2)))
  (declare-const v72 Bool)
  (assert (= v72 (= v34 0)))
  (declare-const v73 Bool)
  (assert (= v73 (= v34 1)))
  (declare-const v74 Bool)
  (assert (= v74 (= v34 2)))
  (declare-const v75 Bool)
  (assert (= v75 (ite v73 true v74)))
  (declare-const v76 Bool)
  (assert (= v76 (ite v72 true v75)))
  (declare-const v77 Bool)
  (assert (= v77 (ite v71 false true)))
  (declare-const v78 Bool)
  (assert (= v78 (ite v77 true v76)))
  (push)
    (assert (not v78))
    (echo "Verifying honest = False, role = RoleContract, tk = TAssert, a = v78")
    (check-sat)
    (get-model)
  (pop)
  (assert v78)
  (declare-const v79 Bool)
  (assert (= v79 (= v65 0)))
  (declare-const v80 Bool)
  (assert (= v80 (= v23 0)))
  (declare-const v81 Bool)
  (assert (= v81 (= v23 1)))
  (declare-const v82 Bool)
  (assert (= v82 (= v23 2)))
  (declare-const v83 Bool)
  (assert (= v83 (ite v81 true v82)))
  (declare-const v84 Bool)
  (assert (= v84 (ite v80 true v83)))
  (declare-const v85 Bool)
  (assert (= v85 (ite v79 false true)))
  (declare-const v86 Bool)
  (assert (= v86 (ite v85 true v84)))
  (push)
    (assert (not v86))
    (echo "Verifying honest = False, role = RoleContract, tk = TAssert, a = v86")
    (check-sat)
    (get-model)
  (pop)
  (assert v86)
  (declare-const v87 Bool)
  (assert (= v87 (= v65 2)))
  (declare-const v88 Int)
  (assert (= v88 (* 2 v14)))
  (declare-const v89 Int)
  (assert (= v89 (+ v88 v15)))
  (declare-const v90 Bool)
  (assert (= v90 (= v65 0)))
  (declare-const v91 Int)
  (assert (= v91 (* 2 v14)))
  (declare-const v92 Int)
  (assert (= v92 (+ v14 v15)))
  (declare-const v93 Int)
  (assert (= v93 (ite v90 v15 v92)))
  (declare-const v94 Int)
  (assert (= v94 (ite v90 v91 v14)))
  (declare-const v95 Int)
  (assert (= v95 (ite v87 v89 v93)))
  (declare-const v96 Int)
  (assert (= v96 (ite v87 0 v94)))
  (declare-const ctc_balance4 Int)
  (assert (= ctc_balance4 (- ctc_balance3 v95)))
  (declare-const ctc_balance5 Int)
  (assert (= ctc_balance5 (- ctc_balance4 v96)))
  (push)
    (assert (not (= ctc_balance5 0)))
    (echo "Verifying honest = False, role = RoleContract, tk = TBalanceZero, a = (= ctc_balance5 0)")
    (check-sat)
    (get-model)
  (pop)
(pop)

(push)
  (echo "Verifying with honest = False; role = RolePart A")
  (declare-const ctc_balance0 Int)
  (assert (= ctc_balance0 0))
  (declare-const v4 Bool)
  (assert (= v4 (= v0 0)))
  (declare-const v5 Bool)
  (assert (= v5 (= v0 1)))
  (declare-const v6 Bool)
  (assert (= v6 (= v0 2)))
  (declare-const v7 Bool)
  (assert (= v7 (ite v5 true v6)))
  (declare-const v8 Bool)
  (assert (= v8 (ite v4 true v7)))
  (push)
    (assert (not v8))
    (echo "Verifying honest = False, role = RolePart A, tk = TAssert, a = v8")
    (check-sat)
    (get-model)
  (pop)
  (assert v8)
  (declare-const v9 Int)
  
  (declare-const v10 Bytes)
  (assert (= v10 (integer->integer-bytes v9)))
  (declare-const v11 Bytes)
  (assert (= v11 (integer->integer-bytes v0)))
  (declare-const v12 Bytes)
  (assert (= v12 (msg-cat v10 v11)))
  (declare-const v13 Int)
  (assert (= v13 (digest v12)))
  (declare-const v14 Int)
  (assert (= v14 v2))
  (declare-const v15 Int)
  (assert (= v15 v1))
  (declare-const v16 Int)
  (assert (= v16 v13))
  (declare-const v17 Int)
  (assert (= v17 (+ v14 v15)))
  (declare-const ctc_balance1 Int)
  (assert (= ctc_balance1 (+ ctc_balance0 v17)))
  (declare-const v18 Bool)
  (declare-const v19 Bool)
  (declare-const v20 Bool)
  (declare-const v21 Bool)
  (declare-const v22 Bool)
  (declare-const v23 Int)
  (declare-const ctc_balance2 Int)
  (assert (= ctc_balance2 (+ ctc_balance1 v14)))
  (declare-const v24 Bool)
  (assert (= v24 true))
  (declare-const v25 Bool)
  (assert (= v25 (ite v24 false true)))
  (declare-const v26 Bool)
  (assert (= v26 (= v23 0)))
  (declare-const v27 Bool)
  (assert (= v27 (= v23 1)))
  (declare-const v28 Bool)
  (assert (= v28 (= v23 2)))
  (declare-const v29 Bool)
  (assert (= v29 (ite v27 true v28)))
  (declare-const v30 Bool)
  (assert (= v30 (ite v26 true v29)))
  (declare-const v31 Bool)
  (assert (= v31 (ite v25 false true)))
  (declare-const v32 Bool)
  (assert (= v32 (ite v31 true v30)))
  (push)
    (assert (not v32))
    (echo "Verifying honest = False, role = RolePart A, tk = TAssert, a = v32")
    (check-sat)
    (get-model)
  (pop)
  (assert v32)
  (declare-const v33 Int)
  (assert (= v33 v9))
  (declare-const v34 Int)
  (assert (= v34 v0))
  (declare-const ctc_balance3 Int)
  (assert (= ctc_balance3 (+ ctc_balance2 0)))
  (declare-const v35 Bytes)
  (assert (= v35 (integer->integer-bytes v33)))
  (declare-const v36 Bytes)
  (assert (= v36 (integer->integer-bytes v34)))
  (declare-const v37 Bytes)
  (assert (= v37 (msg-cat v35 v36)))
  (declare-const v38 Int)
  (assert (= v38 (digest v37)))
  (declare-const v39 Bool)
  (assert (= v39 (= v16 v38)))
  (push)
    (assert (not v39))
    (echo "Verifying honest = False, role = RolePart A, tk = TAssert, a = v39")
    (check-sat)
    (get-model)
  (pop)
  (assert v39)
  (declare-const v40 Bool)
  (assert (= v40 true))
  (declare-const v41 Bool)
  (assert (= v41 (ite v40 false true)))
  (declare-const v42 Bool)
  (assert (= v42 (= v34 0)))
  (declare-const v43 Bool)
  (assert (= v43 (= v34 1)))
  (declare-const v44 Bool)
  (assert (= v44 (= v34 2)))
  (declare-const v45 Bool)
  (assert (= v45 (ite v43 true v44)))
  (declare-const v46 Bool)
  (assert (= v46 (ite v42 true v45)))
  (declare-const v47 Bool)
  (assert (= v47 (ite v41 false true)))
  (declare-const v48 Bool)
  (assert (= v48 (ite v47 true v46)))
  (push)
    (assert (not v48))
    (echo "Verifying honest = False, role = RolePart A, tk = TAssert, a = v48")
    (check-sat)
    (get-model)
  (pop)
  (assert v48)
  (declare-const v49 Bool)
  (assert (= v49 (= v34 0)))
  (declare-const v50 Bool)
  (assert (= v50 (= v34 1)))
  (declare-const v51 Bool)
  (assert (= v51 (= v34 2)))
  (declare-const v52 Bool)
  (assert (= v52 (ite v50 true v51)))
  (declare-const v53 Bool)
  (assert (= v53 (ite v49 true v52)))
  (declare-const v54 Bool)
  (assert (= v54 (= v23 0)))
  (declare-const v55 Bool)
  (assert (= v55 (= v23 1)))
  (declare-const v56 Bool)
  (assert (= v56 (= v23 2)))
  (declare-const v57 Bool)
  (assert (= v57 (ite v55 true v56)))
  (declare-const v58 Bool)
  (assert (= v58 (ite v54 true v57)))
  (declare-const v59 Bool)
  (assert (= v59 (ite v53 v58 false)))
  (declare-const v60 Int)
  (assert (= v60 (- 4 v23)))
  (declare-const v61 Int)
  (assert (= v61 (+ v34 v60)))
  (declare-const v62 Int)
  (assert (= v62 (mod v61 3)))
  (declare-const v63 Int)
  (assert (= v63 (ite v58 0 1)))
  (declare-const v64 Int)
  (assert (= v64 (ite v53 2 v63)))
  (declare-const v65 Int)
  (assert (= v65 (ite v59 v62 v64)))
  (declare-const v66 Bool)
  (assert (= v66 (= v65 0)))
  (declare-const v67 Bool)
  (assert (= v67 (= v65 1)))
  (declare-const v68 Bool)
  (assert (= v68 (= v65 2)))
  (declare-const v69 Bool)
  (assert (= v69 (ite v67 true v68)))
  (declare-const v70 Bool)
  (assert (= v70 (ite v66 true v69)))
  (push)
    (assert (not v70))
    (echo "Verifying honest = False, role = RolePart A, tk = TAssert, a = v70")
    (check-sat)
    (get-model)
  (pop)
  (assert v70)
  (declare-const v71 Bool)
  (assert (= v71 (= v65 2)))
  (declare-const v72 Bool)
  (assert (= v72 (= v34 0)))
  (declare-const v73 Bool)
  (assert (= v73 (= v34 1)))
  (declare-const v74 Bool)
  (assert (= v74 (= v34 2)))
  (declare-const v75 Bool)
  (assert (= v75 (ite v73 true v74)))
  (declare-const v76 Bool)
  (assert (= v76 (ite v72 true v75)))
  (declare-const v77 Bool)
  (assert (= v77 (ite v71 false true)))
  (declare-const v78 Bool)
  (assert (= v78 (ite v77 true v76)))
  (push)
    (assert (not v78))
    (echo "Verifying honest = False, role = RolePart A, tk = TAssert, a = v78")
    (check-sat)
    (get-model)
  (pop)
  (assert v78)
  (declare-const v79 Bool)
  (assert (= v79 (= v65 0)))
  (declare-const v80 Bool)
  (assert (= v80 (= v23 0)))
  (declare-const v81 Bool)
  (assert (= v81 (= v23 1)))
  (declare-const v82 Bool)
  (assert (= v82 (= v23 2)))
  (declare-const v83 Bool)
  (assert (= v83 (ite v81 true v82)))
  (declare-const v84 Bool)
  (assert (= v84 (ite v80 true v83)))
  (declare-const v85 Bool)
  (assert (= v85 (ite v79 false true)))
  (declare-const v86 Bool)
  (assert (= v86 (ite v85 true v84)))
  (push)
    (assert (not v86))
    (echo "Verifying honest = False, role = RolePart A, tk = TAssert, a = v86")
    (check-sat)
    (get-model)
  (pop)
  (assert v86)
  (declare-const v87 Bool)
  (assert (= v87 (= v65 2)))
  (declare-const v88 Int)
  (assert (= v88 (* 2 v14)))
  (declare-const v89 Int)
  (assert (= v89 (+ v88 v15)))
  (declare-const v90 Bool)
  (assert (= v90 (= v65 0)))
  (declare-const v91 Int)
  (assert (= v91 (* 2 v14)))
  (declare-const v92 Int)
  (assert (= v92 (+ v14 v15)))
  (declare-const v93 Int)
  (assert (= v93 (ite v90 v15 v92)))
  (declare-const v94 Int)
  (assert (= v94 (ite v90 v91 v14)))
  (declare-const v95 Int)
  (assert (= v95 (ite v87 v89 v93)))
  (declare-const v96 Int)
  (assert (= v96 (ite v87 0 v94)))
  (declare-const ctc_balance4 Int)
  (assert (= ctc_balance4 (- ctc_balance3 v95)))
  (declare-const ctc_balance5 Int)
  (assert (= ctc_balance5 (- ctc_balance4 v96)))
  (push)
    (assert (not (= ctc_balance5 0)))
    (echo "Verifying honest = False, role = RolePart A, tk = TBalanceZero, a = (= ctc_balance5 0)")
    (check-sat)
    (get-model)
  (pop)
(pop)

(push)
  (echo "Verifying with honest = False; role = RolePart B")
  (declare-const ctc_balance0 Int)
  (assert (= ctc_balance0 0))
  (declare-const v4 Bool)
  (declare-const v5 Bool)
  (declare-const v6 Bool)
  (declare-const v7 Bool)
  (declare-const v8 Bool)
  (declare-const v9 Int)
  (declare-const v10 Bytes)
  (declare-const v11 Bytes)
  (declare-const v12 Bytes)
  (declare-const v13 Int)
  (declare-const v14 Int)
  (declare-const v15 Int)
  (declare-const v16 Int)
  (declare-const v17 Int)
  (declare-const ctc_balance1 Int)
  (assert (= ctc_balance1 (+ ctc_balance0 v17)))
  (declare-const v18 Bool)
  (assert (= v18 (= v3 0)))
  (declare-const v19 Bool)
  (assert (= v19 (= v3 1)))
  (declare-const v20 Bool)
  (assert (= v20 (= v3 2)))
  (declare-const v21 Bool)
  (assert (= v21 (ite v19 true v20)))
  (declare-const v22 Bool)
  (assert (= v22 (ite v18 true v21)))
  (push)
    (assert (not v22))
    (echo "Verifying honest = False, role = RolePart B, tk = TAssert, a = v22")
    (check-sat)
    (get-model)
  (pop)
  (assert v22)
  (declare-const v23 Int)
  (assert (= v23 v3))
  (declare-const ctc_balance2 Int)
  (assert (= ctc_balance2 (+ ctc_balance1 v14)))
  (declare-const v24 Bool)
  (assert (= v24 true))
  (declare-const v25 Bool)
  (assert (= v25 (ite v24 false true)))
  (declare-const v26 Bool)
  (assert (= v26 (= v23 0)))
  (declare-const v27 Bool)
  (assert (= v27 (= v23 1)))
  (declare-const v28 Bool)
  (assert (= v28 (= v23 2)))
  (declare-const v29 Bool)
  (assert (= v29 (ite v27 true v28)))
  (declare-const v30 Bool)
  (assert (= v30 (ite v26 true v29)))
  (declare-const v31 Bool)
  (assert (= v31 (ite v25 false true)))
  (declare-const v32 Bool)
  (assert (= v32 (ite v31 true v30)))
  (push)
    (assert (not v32))
    (echo "Verifying honest = False, role = RolePart B, tk = TAssert, a = v32")
    (check-sat)
    (get-model)
  (pop)
  (assert v32)
  (declare-const v33 Int)
  (declare-const v34 Int)
  (declare-const ctc_balance3 Int)
  (assert (= ctc_balance3 (+ ctc_balance2 0)))
  (declare-const v35 Bytes)
  (assert (= v35 (integer->integer-bytes v33)))
  (declare-const v36 Bytes)
  (assert (= v36 (integer->integer-bytes v34)))
  (declare-const v37 Bytes)
  (assert (= v37 (msg-cat v35 v36)))
  (declare-const v38 Int)
  (assert (= v38 (digest v37)))
  (declare-const v39 Bool)
  (assert (= v39 (= v16 v38)))
  (push)
    (assert (not v39))
    (echo "Verifying honest = False, role = RolePart B, tk = TAssert, a = v39")
    (check-sat)
    (get-model)
  (pop)
  (assert v39)
  (declare-const v40 Bool)
  (assert (= v40 true))
  (declare-const v41 Bool)
  (assert (= v41 (ite v40 false true)))
  (declare-const v42 Bool)
  (assert (= v42 (= v34 0)))
  (declare-const v43 Bool)
  (assert (= v43 (= v34 1)))
  (declare-const v44 Bool)
  (assert (= v44 (= v34 2)))
  (declare-const v45 Bool)
  (assert (= v45 (ite v43 true v44)))
  (declare-const v46 Bool)
  (assert (= v46 (ite v42 true v45)))
  (declare-const v47 Bool)
  (assert (= v47 (ite v41 false true)))
  (declare-const v48 Bool)
  (assert (= v48 (ite v47 true v46)))
  (push)
    (assert (not v48))
    (echo "Verifying honest = False, role = RolePart B, tk = TAssert, a = v48")
    (check-sat)
    (get-model)
  (pop)
  (assert v48)
  (declare-const v49 Bool)
  (assert (= v49 (= v34 0)))
  (declare-const v50 Bool)
  (assert (= v50 (= v34 1)))
  (declare-const v51 Bool)
  (assert (= v51 (= v34 2)))
  (declare-const v52 Bool)
  (assert (= v52 (ite v50 true v51)))
  (declare-const v53 Bool)
  (assert (= v53 (ite v49 true v52)))
  (declare-const v54 Bool)
  (assert (= v54 (= v23 0)))
  (declare-const v55 Bool)
  (assert (= v55 (= v23 1)))
  (declare-const v56 Bool)
  (assert (= v56 (= v23 2)))
  (declare-const v57 Bool)
  (assert (= v57 (ite v55 true v56)))
  (declare-const v58 Bool)
  (assert (= v58 (ite v54 true v57)))
  (declare-const v59 Bool)
  (assert (= v59 (ite v53 v58 false)))
  (declare-const v60 Int)
  (assert (= v60 (- 4 v23)))
  (declare-const v61 Int)
  (assert (= v61 (+ v34 v60)))
  (declare-const v62 Int)
  (assert (= v62 (mod v61 3)))
  (declare-const v63 Int)
  (assert (= v63 (ite v58 0 1)))
  (declare-const v64 Int)
  (assert (= v64 (ite v53 2 v63)))
  (declare-const v65 Int)
  (assert (= v65 (ite v59 v62 v64)))
  (declare-const v66 Bool)
  (assert (= v66 (= v65 0)))
  (declare-const v67 Bool)
  (assert (= v67 (= v65 1)))
  (declare-const v68 Bool)
  (assert (= v68 (= v65 2)))
  (declare-const v69 Bool)
  (assert (= v69 (ite v67 true v68)))
  (declare-const v70 Bool)
  (assert (= v70 (ite v66 true v69)))
  (push)
    (assert (not v70))
    (echo "Verifying honest = False, role = RolePart B, tk = TAssert, a = v70")
    (check-sat)
    (get-model)
  (pop)
  (assert v70)
  (declare-const v71 Bool)
  (assert (= v71 (= v65 2)))
  (declare-const v72 Bool)
  (assert (= v72 (= v34 0)))
  (declare-const v73 Bool)
  (assert (= v73 (= v34 1)))
  (declare-const v74 Bool)
  (assert (= v74 (= v34 2)))
  (declare-const v75 Bool)
  (assert (= v75 (ite v73 true v74)))
  (declare-const v76 Bool)
  (assert (= v76 (ite v72 true v75)))
  (declare-const v77 Bool)
  (assert (= v77 (ite v71 false true)))
  (declare-const v78 Bool)
  (assert (= v78 (ite v77 true v76)))
  (push)
    (assert (not v78))
    (echo "Verifying honest = False, role = RolePart B, tk = TAssert, a = v78")
    (check-sat)
    (get-model)
  (pop)
  (assert v78)
  (declare-const v79 Bool)
  (assert (= v79 (= v65 0)))
  (declare-const v80 Bool)
  (assert (= v80 (= v23 0)))
  (declare-const v81 Bool)
  (assert (= v81 (= v23 1)))
  (declare-const v82 Bool)
  (assert (= v82 (= v23 2)))
  (declare-const v83 Bool)
  (assert (= v83 (ite v81 true v82)))
  (declare-const v84 Bool)
  (assert (= v84 (ite v80 true v83)))
  (declare-const v85 Bool)
  (assert (= v85 (ite v79 false true)))
  (declare-const v86 Bool)
  (assert (= v86 (ite v85 true v84)))
  (push)
    (assert (not v86))
    (echo "Verifying honest = False, role = RolePart B, tk = TAssert, a = v86")
    (check-sat)
    (get-model)
  (pop)
  (assert v86)
  (declare-const v87 Bool)
  (assert (= v87 (= v65 2)))
  (declare-const v88 Int)
  (assert (= v88 (* 2 v14)))
  (declare-const v89 Int)
  (assert (= v89 (+ v88 v15)))
  (declare-const v90 Bool)
  (assert (= v90 (= v65 0)))
  (declare-const v91 Int)
  (assert (= v91 (* 2 v14)))
  (declare-const v92 Int)
  (assert (= v92 (+ v14 v15)))
  (declare-const v93 Int)
  (assert (= v93 (ite v90 v15 v92)))
  (declare-const v94 Int)
  (assert (= v94 (ite v90 v91 v14)))
  (declare-const v95 Int)
  (assert (= v95 (ite v87 v89 v93)))
  (declare-const v96 Int)
  (assert (= v96 (ite v87 0 v94)))
  (declare-const ctc_balance4 Int)
  (assert (= ctc_balance4 (- ctc_balance3 v95)))
  (declare-const ctc_balance5 Int)
  (assert (= ctc_balance5 (- ctc_balance4 v96)))
  (push)
    (assert (not (= ctc_balance5 0)))
    (echo "Verifying honest = False, role = RolePart B, tk = TBalanceZero, a = (= ctc_balance5 0)")
    (check-sat)
    (get-model)
  (pop)
(pop)