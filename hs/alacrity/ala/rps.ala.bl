#lang alacrity/bl

(define-contract 
  #:participants (A B)
  [0 A () ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int]) 
    (wait! 1 ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int]))]
  [1 B ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int]) ([23/Declassify : int]) 
    (define [24/PrimApp : bool] (DISHONEST))
    (define [25/PrimApp : bool] (IF_THEN_ELSE [24/PrimApp : bool] False True))
    (define [26/PrimApp : bool] (PEQ [23/Declassify : int] 0))
    (define [27/PrimApp : bool] (PEQ [23/Declassify : int] 1))
    (define [28/PrimApp : bool] (PEQ [23/Declassify : int] 2))
    (define [29/PrimApp : bool] (IF_THEN_ELSE [27/PrimApp : bool] True [28/PrimApp : bool]))
    (define [30/PrimApp : bool] (IF_THEN_ELSE [26/PrimApp : bool] True [29/PrimApp : bool]))
    (define [31/PrimApp : bool] (IF_THEN_ELSE [25/PrimApp : bool] False True))
    (define [32/PrimApp : bool] (IF_THEN_ELSE [31/PrimApp : bool] True [30/PrimApp : bool]))
    (assert! [32/PrimApp : bool])
    (wait! 2 ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int] [23/Declassify : int]))]
  [2 A ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int] [23/Declassify : int]) ([34/Declassify : int] [35/Declassify : int]) 
    (define [36/PrimApp : bytes] (BCAT [34/Declassify : int] [35/Declassify : int]))
    (define [37/PrimApp : int] (DIGEST [36/PrimApp : bytes]))
    (define [38/PrimApp : bool] (BYTES_EQ [15/Declassify : int] [37/PrimApp : int]))
    (assert! [38/PrimApp : bool])
    (define [40/PrimApp : bool] (DISHONEST))
    (define [41/PrimApp : bool] (IF_THEN_ELSE [40/PrimApp : bool] False True))
    (define [42/PrimApp : bool] (PEQ [35/Declassify : int] 0))
    (define [43/PrimApp : bool] (PEQ [35/Declassify : int] 1))
    (define [44/PrimApp : bool] (PEQ [35/Declassify : int] 2))
    (define [45/PrimApp : bool] (IF_THEN_ELSE [43/PrimApp : bool] True [44/PrimApp : bool]))
    (define [46/PrimApp : bool] (IF_THEN_ELSE [42/PrimApp : bool] True [45/PrimApp : bool]))
    (define [47/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] False True))
    (define [48/PrimApp : bool] (IF_THEN_ELSE [47/PrimApp : bool] True [46/PrimApp : bool]))
    (assert! [48/PrimApp : bool])
    (define [50/PrimApp : bool] (PEQ [35/Declassify : int] 0))
    (define [51/PrimApp : bool] (PEQ [35/Declassify : int] 1))
    (define [52/PrimApp : bool] (PEQ [35/Declassify : int] 2))
    (define [53/PrimApp : bool] (IF_THEN_ELSE [51/PrimApp : bool] True [52/PrimApp : bool]))
    (define [54/PrimApp : bool] (IF_THEN_ELSE [50/PrimApp : bool] True [53/PrimApp : bool]))
    (define [55/PrimApp : bool] (PEQ [23/Declassify : int] 0))
    (define [56/PrimApp : bool] (PEQ [23/Declassify : int] 1))
    (define [57/PrimApp : bool] (PEQ [23/Declassify : int] 2))
    (define [58/PrimApp : bool] (IF_THEN_ELSE [56/PrimApp : bool] True [57/PrimApp : bool]))
    (define [59/PrimApp : bool] (IF_THEN_ELSE [55/PrimApp : bool] True [58/PrimApp : bool]))
    (define [60/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] [59/PrimApp : bool] False))
    (define [61/PrimApp : int] (SUB 4 [23/Declassify : int]))
    (define [62/PrimApp : int] (ADD [35/Declassify : int] [61/PrimApp : int]))
    (define [63/PrimApp : int] (MOD [62/PrimApp : int] 3))
    (define [64/PureIf : int] (IF_THEN_ELSE [59/PrimApp : bool] 0 1))
    (define [65/PureIf : int] (IF_THEN_ELSE [54/PrimApp : bool] 2 [64/PureIf : int]))
    (define [66/PureIf : int] (IF_THEN_ELSE [60/PrimApp : bool] [63/PrimApp : int] [65/PureIf : int]))
    (define [67/PrimApp : bool] (PEQ [66/PureIf : int] 0))
    (define [68/PrimApp : bool] (PEQ [66/PureIf : int] 1))
    (define [69/PrimApp : bool] (PEQ [66/PureIf : int] 2))
    (define [70/PrimApp : bool] (IF_THEN_ELSE [68/PrimApp : bool] True [69/PrimApp : bool]))
    (define [71/PrimApp : bool] (IF_THEN_ELSE [67/PrimApp : bool] True [70/PrimApp : bool]))
    (assert! [71/PrimApp : bool])
    (define [73/PrimApp : bool] (PEQ [66/PureIf : int] 2))
    (define [74/PrimApp : bool] (PEQ [35/Declassify : int] 0))
    (define [75/PrimApp : bool] (PEQ [35/Declassify : int] 1))
    (define [76/PrimApp : bool] (PEQ [35/Declassify : int] 2))
    (define [77/PrimApp : bool] (IF_THEN_ELSE [75/PrimApp : bool] True [76/PrimApp : bool]))
    (define [78/PrimApp : bool] (IF_THEN_ELSE [74/PrimApp : bool] True [77/PrimApp : bool]))
    (define [79/PrimApp : bool] (IF_THEN_ELSE [73/PrimApp : bool] False True))
    (define [80/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] True [78/PrimApp : bool]))
    (assert! [80/PrimApp : bool])
    (define [82/PrimApp : bool] (PEQ [66/PureIf : int] 0))
    (define [83/PrimApp : bool] (PEQ [23/Declassify : int] 0))
    (define [84/PrimApp : bool] (PEQ [23/Declassify : int] 1))
    (define [85/PrimApp : bool] (PEQ [23/Declassify : int] 2))
    (define [86/PrimApp : bool] (IF_THEN_ELSE [84/PrimApp : bool] True [85/PrimApp : bool]))
    (define [87/PrimApp : bool] (IF_THEN_ELSE [83/PrimApp : bool] True [86/PrimApp : bool]))
    (define [88/PrimApp : bool] (IF_THEN_ELSE [82/PrimApp : bool] False True))
    (define [89/PrimApp : bool] (IF_THEN_ELSE [88/PrimApp : bool] True [87/PrimApp : bool]))
    (assert! [89/PrimApp : bool])
    (define [91/PrimApp : bool] (PEQ [66/PureIf : int] 2))
    (define [92/PrimApp : int] (MUL 2 [13/Declassify : int]))
    (define [93/PrimApp : int] (ADD [92/PrimApp : int] [14/Declassify : int]))
    (define [94/PrimApp : bool] (PEQ [66/PureIf : int] 0))
    (define [95/PrimApp : int] (MUL 2 [13/Declassify : int]))
    (define [96/PrimApp : int] (ADD [13/Declassify : int] [14/Declassify : int]))
    (define [97/PureIf : int] (IF_THEN_ELSE [94/PrimApp : bool] [14/Declassify : int] [96/PrimApp : int]))
    (define [98/PureIf : int] (IF_THEN_ELSE [94/PrimApp : bool] [95/PrimApp : int] [13/Declassify : int]))
    (define [99/PureIf : int] (IF_THEN_ELSE [91/PrimApp : bool] [93/PrimApp : int] [97/PureIf : int]))
    (define [100/PureIf : int] (IF_THEN_ELSE [91/PrimApp : bool] 0 [98/PureIf : int]))
    (transfer! A [99/PureIf : int])
    (transfer! B [100/PureIf : int])
    (halt!)])

(define-participant A 
  ([0/SA-hand : int] [1/Sescrow-amount : int] [2/Swager-amount : int])
  
  (define [4/PrimApp : bool] (PEQ [0/SA-hand : int] 0))
  (define [5/PrimApp : bool] (PEQ [0/SA-hand : int] 1))
  (define [6/PrimApp : bool] (PEQ [0/SA-hand : int] 2))
  (define [7/PrimApp : bool] (IF_THEN_ELSE [5/PrimApp : bool] True [6/PrimApp : bool]))
  (define [8/PrimApp : bool] (IF_THEN_ELSE [4/PrimApp : bool] True [7/PrimApp : bool]))
  (define [9/Assert : bool] (assert! [8/PrimApp : bool]))
  (define [10/PrimApp : int] (RANDOM))
  (define [11/PrimApp : bytes] (BCAT [10/PrimApp : int] [0/SA-hand : int]))
  (define [12/PrimApp : int] (DIGEST [11/PrimApp : bytes]))
  (define [13/Declassify : int] [2/Swager-amount : int])
  (define [14/Declassify : int] [1/Sescrow-amount : int])
  (define [15/Declassify : int] [12/PrimApp : int])
  (define [16/PrimApp : int] (ADD [13/Declassify : int] [14/Declassify : int]))
  (send! 0 () ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int]) [16/PrimApp : int])
  (define-values () ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int]) (recv! 0))
  (define-values ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int]) ([23/Declassify : int]) (recv! 1))
  (define [24/PrimApp : bool] (DISHONEST))
  (define [25/PrimApp : bool] (IF_THEN_ELSE [24/PrimApp : bool] False True))
  (define [26/PrimApp : bool] (PEQ [23/Declassify : int] 0))
  (define [27/PrimApp : bool] (PEQ [23/Declassify : int] 1))
  (define [28/PrimApp : bool] (PEQ [23/Declassify : int] 2))
  (define [29/PrimApp : bool] (IF_THEN_ELSE [27/PrimApp : bool] True [28/PrimApp : bool]))
  (define [30/PrimApp : bool] (IF_THEN_ELSE [26/PrimApp : bool] True [29/PrimApp : bool]))
  (define [31/PrimApp : bool] (IF_THEN_ELSE [25/PrimApp : bool] False True))
  (define [32/PrimApp : bool] (IF_THEN_ELSE [31/PrimApp : bool] True [30/PrimApp : bool]))
  (assert! [32/PrimApp : bool])
  (define [34/Declassify : int] [10/PrimApp : int])
  (define [35/Declassify : int] [0/SA-hand : int])
  (send! 2 ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int] [23/Declassify : int]) ([34/Declassify : int] [35/Declassify : int]) 0)
  (define-values ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int] [23/Declassify : int]) ([34/Declassify : int] [35/Declassify : int]) (recv! 2))
  (define [36/PrimApp : bytes] (BCAT [34/Declassify : int] [35/Declassify : int]))
  (define [37/PrimApp : int] (DIGEST [36/PrimApp : bytes]))
  (define [38/PrimApp : bool] (BYTES_EQ [15/Declassify : int] [37/PrimApp : int]))
  (assert! [38/PrimApp : bool])
  (define [40/PrimApp : bool] (DISHONEST))
  (define [41/PrimApp : bool] (IF_THEN_ELSE [40/PrimApp : bool] False True))
  (define [42/PrimApp : bool] (PEQ [35/Declassify : int] 0))
  (define [43/PrimApp : bool] (PEQ [35/Declassify : int] 1))
  (define [44/PrimApp : bool] (PEQ [35/Declassify : int] 2))
  (define [45/PrimApp : bool] (IF_THEN_ELSE [43/PrimApp : bool] True [44/PrimApp : bool]))
  (define [46/PrimApp : bool] (IF_THEN_ELSE [42/PrimApp : bool] True [45/PrimApp : bool]))
  (define [47/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] False True))
  (define [48/PrimApp : bool] (IF_THEN_ELSE [47/PrimApp : bool] True [46/PrimApp : bool]))
  (assert! [48/PrimApp : bool])
  (define [50/PrimApp : bool] (PEQ [35/Declassify : int] 0))
  (define [51/PrimApp : bool] (PEQ [35/Declassify : int] 1))
  (define [52/PrimApp : bool] (PEQ [35/Declassify : int] 2))
  (define [53/PrimApp : bool] (IF_THEN_ELSE [51/PrimApp : bool] True [52/PrimApp : bool]))
  (define [54/PrimApp : bool] (IF_THEN_ELSE [50/PrimApp : bool] True [53/PrimApp : bool]))
  (define [55/PrimApp : bool] (PEQ [23/Declassify : int] 0))
  (define [56/PrimApp : bool] (PEQ [23/Declassify : int] 1))
  (define [57/PrimApp : bool] (PEQ [23/Declassify : int] 2))
  (define [58/PrimApp : bool] (IF_THEN_ELSE [56/PrimApp : bool] True [57/PrimApp : bool]))
  (define [59/PrimApp : bool] (IF_THEN_ELSE [55/PrimApp : bool] True [58/PrimApp : bool]))
  (define [60/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] [59/PrimApp : bool] False))
  (define [61/PrimApp : int] (SUB 4 [23/Declassify : int]))
  (define [62/PrimApp : int] (ADD [35/Declassify : int] [61/PrimApp : int]))
  (define [63/PrimApp : int] (MOD [62/PrimApp : int] 3))
  (define [64/PureIf : int] (IF_THEN_ELSE [59/PrimApp : bool] 0 1))
  (define [65/PureIf : int] (IF_THEN_ELSE [54/PrimApp : bool] 2 [64/PureIf : int]))
  (define [66/PureIf : int] (IF_THEN_ELSE [60/PrimApp : bool] [63/PrimApp : int] [65/PureIf : int]))
  (define [67/PrimApp : bool] (PEQ [66/PureIf : int] 0))
  (define [68/PrimApp : bool] (PEQ [66/PureIf : int] 1))
  (define [69/PrimApp : bool] (PEQ [66/PureIf : int] 2))
  (define [70/PrimApp : bool] (IF_THEN_ELSE [68/PrimApp : bool] True [69/PrimApp : bool]))
  (define [71/PrimApp : bool] (IF_THEN_ELSE [67/PrimApp : bool] True [70/PrimApp : bool]))
  (assert! [71/PrimApp : bool])
  (define [73/PrimApp : bool] (PEQ [66/PureIf : int] 2))
  (define [74/PrimApp : bool] (PEQ [35/Declassify : int] 0))
  (define [75/PrimApp : bool] (PEQ [35/Declassify : int] 1))
  (define [76/PrimApp : bool] (PEQ [35/Declassify : int] 2))
  (define [77/PrimApp : bool] (IF_THEN_ELSE [75/PrimApp : bool] True [76/PrimApp : bool]))
  (define [78/PrimApp : bool] (IF_THEN_ELSE [74/PrimApp : bool] True [77/PrimApp : bool]))
  (define [79/PrimApp : bool] (IF_THEN_ELSE [73/PrimApp : bool] False True))
  (define [80/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] True [78/PrimApp : bool]))
  (assert! [80/PrimApp : bool])
  (define [82/PrimApp : bool] (PEQ [66/PureIf : int] 0))
  (define [83/PrimApp : bool] (PEQ [23/Declassify : int] 0))
  (define [84/PrimApp : bool] (PEQ [23/Declassify : int] 1))
  (define [85/PrimApp : bool] (PEQ [23/Declassify : int] 2))
  (define [86/PrimApp : bool] (IF_THEN_ELSE [84/PrimApp : bool] True [85/PrimApp : bool]))
  (define [87/PrimApp : bool] (IF_THEN_ELSE [83/PrimApp : bool] True [86/PrimApp : bool]))
  (define [88/PrimApp : bool] (IF_THEN_ELSE [82/PrimApp : bool] False True))
  (define [89/PrimApp : bool] (IF_THEN_ELSE [88/PrimApp : bool] True [87/PrimApp : bool]))
  (assert! [89/PrimApp : bool])
  (define [91/PrimApp : bool] (PEQ [66/PureIf : int] 2))
  (define [92/PrimApp : int] (MUL 2 [13/Declassify : int]))
  (define [93/PrimApp : int] (ADD [92/PrimApp : int] [14/Declassify : int]))
  (define [94/PrimApp : bool] (PEQ [66/PureIf : int] 0))
  (define [95/PrimApp : int] (MUL 2 [13/Declassify : int]))
  (define [96/PrimApp : int] (ADD [13/Declassify : int] [14/Declassify : int]))
  (define [97/PureIf : int] (IF_THEN_ELSE [94/PrimApp : bool] [14/Declassify : int] [96/PrimApp : int]))
  (define [98/PureIf : int] (IF_THEN_ELSE [94/PrimApp : bool] [95/PrimApp : int] [13/Declassify : int]))
  (define [99/PureIf : int] (IF_THEN_ELSE [91/PrimApp : bool] [93/PrimApp : int] [97/PureIf : int]))
  (define [100/PureIf : int] (IF_THEN_ELSE [91/PrimApp : bool] 0 [98/PureIf : int]))
  True
  True
  [66/PureIf : int])

(define-participant B 
  ([3/SB-hand : int])
  
  (define-values () ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int]) (recv! 0))
  (define [17/PrimApp : bool] (PEQ [3/SB-hand : int] 0))
  (define [18/PrimApp : bool] (PEQ [3/SB-hand : int] 1))
  (define [19/PrimApp : bool] (PEQ [3/SB-hand : int] 2))
  (define [20/PrimApp : bool] (IF_THEN_ELSE [18/PrimApp : bool] True [19/PrimApp : bool]))
  (define [21/PrimApp : bool] (IF_THEN_ELSE [17/PrimApp : bool] True [20/PrimApp : bool]))
  (define [22/Assert : bool] (assert! [21/PrimApp : bool]))
  (define [23/Declassify : int] [3/SB-hand : int])
  (send! 1 ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int]) ([23/Declassify : int]) [13/Declassify : int])
  (define-values ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int]) ([23/Declassify : int]) (recv! 1))
  (define [24/PrimApp : bool] (DISHONEST))
  (define [25/PrimApp : bool] (IF_THEN_ELSE [24/PrimApp : bool] False True))
  (define [26/PrimApp : bool] (PEQ [23/Declassify : int] 0))
  (define [27/PrimApp : bool] (PEQ [23/Declassify : int] 1))
  (define [28/PrimApp : bool] (PEQ [23/Declassify : int] 2))
  (define [29/PrimApp : bool] (IF_THEN_ELSE [27/PrimApp : bool] True [28/PrimApp : bool]))
  (define [30/PrimApp : bool] (IF_THEN_ELSE [26/PrimApp : bool] True [29/PrimApp : bool]))
  (define [31/PrimApp : bool] (IF_THEN_ELSE [25/PrimApp : bool] False True))
  (define [32/PrimApp : bool] (IF_THEN_ELSE [31/PrimApp : bool] True [30/PrimApp : bool]))
  (assert! [32/PrimApp : bool])
  (define-values ([13/Declassify : int] [14/Declassify : int] [15/Declassify : int] [23/Declassify : int]) ([34/Declassify : int] [35/Declassify : int]) (recv! 2))
  (define [36/PrimApp : bytes] (BCAT [34/Declassify : int] [35/Declassify : int]))
  (define [37/PrimApp : int] (DIGEST [36/PrimApp : bytes]))
  (define [38/PrimApp : bool] (BYTES_EQ [15/Declassify : int] [37/PrimApp : int]))
  (assert! [38/PrimApp : bool])
  (define [40/PrimApp : bool] (DISHONEST))
  (define [41/PrimApp : bool] (IF_THEN_ELSE [40/PrimApp : bool] False True))
  (define [42/PrimApp : bool] (PEQ [35/Declassify : int] 0))
  (define [43/PrimApp : bool] (PEQ [35/Declassify : int] 1))
  (define [44/PrimApp : bool] (PEQ [35/Declassify : int] 2))
  (define [45/PrimApp : bool] (IF_THEN_ELSE [43/PrimApp : bool] True [44/PrimApp : bool]))
  (define [46/PrimApp : bool] (IF_THEN_ELSE [42/PrimApp : bool] True [45/PrimApp : bool]))
  (define [47/PrimApp : bool] (IF_THEN_ELSE [41/PrimApp : bool] False True))
  (define [48/PrimApp : bool] (IF_THEN_ELSE [47/PrimApp : bool] True [46/PrimApp : bool]))
  (assert! [48/PrimApp : bool])
  (define [50/PrimApp : bool] (PEQ [35/Declassify : int] 0))
  (define [51/PrimApp : bool] (PEQ [35/Declassify : int] 1))
  (define [52/PrimApp : bool] (PEQ [35/Declassify : int] 2))
  (define [53/PrimApp : bool] (IF_THEN_ELSE [51/PrimApp : bool] True [52/PrimApp : bool]))
  (define [54/PrimApp : bool] (IF_THEN_ELSE [50/PrimApp : bool] True [53/PrimApp : bool]))
  (define [55/PrimApp : bool] (PEQ [23/Declassify : int] 0))
  (define [56/PrimApp : bool] (PEQ [23/Declassify : int] 1))
  (define [57/PrimApp : bool] (PEQ [23/Declassify : int] 2))
  (define [58/PrimApp : bool] (IF_THEN_ELSE [56/PrimApp : bool] True [57/PrimApp : bool]))
  (define [59/PrimApp : bool] (IF_THEN_ELSE [55/PrimApp : bool] True [58/PrimApp : bool]))
  (define [60/PrimApp : bool] (IF_THEN_ELSE [54/PrimApp : bool] [59/PrimApp : bool] False))
  (define [61/PrimApp : int] (SUB 4 [23/Declassify : int]))
  (define [62/PrimApp : int] (ADD [35/Declassify : int] [61/PrimApp : int]))
  (define [63/PrimApp : int] (MOD [62/PrimApp : int] 3))
  (define [64/PureIf : int] (IF_THEN_ELSE [59/PrimApp : bool] 0 1))
  (define [65/PureIf : int] (IF_THEN_ELSE [54/PrimApp : bool] 2 [64/PureIf : int]))
  (define [66/PureIf : int] (IF_THEN_ELSE [60/PrimApp : bool] [63/PrimApp : int] [65/PureIf : int]))
  (define [67/PrimApp : bool] (PEQ [66/PureIf : int] 0))
  (define [68/PrimApp : bool] (PEQ [66/PureIf : int] 1))
  (define [69/PrimApp : bool] (PEQ [66/PureIf : int] 2))
  (define [70/PrimApp : bool] (IF_THEN_ELSE [68/PrimApp : bool] True [69/PrimApp : bool]))
  (define [71/PrimApp : bool] (IF_THEN_ELSE [67/PrimApp : bool] True [70/PrimApp : bool]))
  (assert! [71/PrimApp : bool])
  (define [73/PrimApp : bool] (PEQ [66/PureIf : int] 2))
  (define [74/PrimApp : bool] (PEQ [35/Declassify : int] 0))
  (define [75/PrimApp : bool] (PEQ [35/Declassify : int] 1))
  (define [76/PrimApp : bool] (PEQ [35/Declassify : int] 2))
  (define [77/PrimApp : bool] (IF_THEN_ELSE [75/PrimApp : bool] True [76/PrimApp : bool]))
  (define [78/PrimApp : bool] (IF_THEN_ELSE [74/PrimApp : bool] True [77/PrimApp : bool]))
  (define [79/PrimApp : bool] (IF_THEN_ELSE [73/PrimApp : bool] False True))
  (define [80/PrimApp : bool] (IF_THEN_ELSE [79/PrimApp : bool] True [78/PrimApp : bool]))
  (assert! [80/PrimApp : bool])
  (define [82/PrimApp : bool] (PEQ [66/PureIf : int] 0))
  (define [83/PrimApp : bool] (PEQ [23/Declassify : int] 0))
  (define [84/PrimApp : bool] (PEQ [23/Declassify : int] 1))
  (define [85/PrimApp : bool] (PEQ [23/Declassify : int] 2))
  (define [86/PrimApp : bool] (IF_THEN_ELSE [84/PrimApp : bool] True [85/PrimApp : bool]))
  (define [87/PrimApp : bool] (IF_THEN_ELSE [83/PrimApp : bool] True [86/PrimApp : bool]))
  (define [88/PrimApp : bool] (IF_THEN_ELSE [82/PrimApp : bool] False True))
  (define [89/PrimApp : bool] (IF_THEN_ELSE [88/PrimApp : bool] True [87/PrimApp : bool]))
  (assert! [89/PrimApp : bool])
  (define [91/PrimApp : bool] (PEQ [66/PureIf : int] 2))
  (define [92/PrimApp : int] (MUL 2 [13/Declassify : int]))
  (define [93/PrimApp : int] (ADD [92/PrimApp : int] [14/Declassify : int]))
  (define [94/PrimApp : bool] (PEQ [66/PureIf : int] 0))
  (define [95/PrimApp : int] (MUL 2 [13/Declassify : int]))
  (define [96/PrimApp : int] (ADD [13/Declassify : int] [14/Declassify : int]))
  (define [97/PureIf : int] (IF_THEN_ELSE [94/PrimApp : bool] [14/Declassify : int] [96/PrimApp : int]))
  (define [98/PureIf : int] (IF_THEN_ELSE [94/PrimApp : bool] [95/PrimApp : int] [13/Declassify : int]))
  (define [99/PureIf : int] (IF_THEN_ELSE [91/PrimApp : bool] [93/PrimApp : int] [97/PureIf : int]))
  (define [100/PureIf : int] (IF_THEN_ELSE [91/PrimApp : bool] 0 [98/PureIf : int]))
  True
  True
  [66/PureIf : int])